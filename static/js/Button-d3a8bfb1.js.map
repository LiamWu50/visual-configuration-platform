{"version":3,"file":"Button-d3a8bfb1.js","sources":["../../../node_modules/naive-ui/es/_utils/css/color-to-class.js","../../../node_modules/naive-ui/es/_internal/wave/src/styles/index.cssr.js","../../../node_modules/naive-ui/es/_internal/wave/src/Wave.js","../../../node_modules/naive-ui/es/_styles/transitions/fade-in-width-expand.cssr.js","../../../node_modules/naive-ui/es/_utils/color/index.js","../../../node_modules/naive-ui/es/button-group/src/context.js","../../../node_modules/naive-ui/es/button/src/styles/index.cssr.js","../../../node_modules/naive-ui/es/button/src/Button.js"],"sourcesContent":["export function color2Class(color) {\n    return color.replace(/#|\\(|\\)|,|\\s/g, '_');\n}\n","import { cB } from '../../../../_utils/cssr/index';\nexport default cB('base-wave', `\n position: absolute;\n left: 0;\n right: 0;\n top: 0;\n bottom: 0;\n border-radius: inherit;\n`);","import { h, defineComponent, ref, onBeforeUnmount, nextTick, toRef } from 'vue';\nimport { useStyle } from '../../../_mixins';\nimport style from './styles/index.cssr';\nexport default defineComponent({\n    name: 'BaseWave',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        }\n    },\n    setup(props) {\n        useStyle('-base-wave', style, toRef(props, 'clsPrefix'));\n        const selfRef = ref(null);\n        const activeRef = ref(false);\n        let animationTimerId = null;\n        onBeforeUnmount(() => {\n            if (animationTimerId !== null) {\n                window.clearTimeout(animationTimerId);\n            }\n        });\n        return {\n            active: activeRef,\n            selfRef,\n            play() {\n                if (animationTimerId !== null) {\n                    window.clearTimeout(animationTimerId);\n                    activeRef.value = false;\n                    animationTimerId = null;\n                }\n                void nextTick(() => {\n                    var _a;\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    void ((_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.offsetHeight);\n                    activeRef.value = true;\n                    animationTimerId = window.setTimeout(() => {\n                        activeRef.value = false;\n                        animationTimerId = null;\n                    }, 1000);\n                });\n            }\n        };\n    },\n    render() {\n        const { clsPrefix } = this;\n        return (h(\"div\", { ref: \"selfRef\", \"aria-hidden\": true, class: [\n                `${clsPrefix}-base-wave`,\n                this.active && `${clsPrefix}-base-wave--active`\n            ] }));\n    }\n});\n","import { c } from '../../_utils/cssr';\nimport commonVariables from '../common/_common';\nconst {\n  cubicBezierEaseInOut\n} = commonVariables;\nexport function fadeInWidthExpandTransition({\n  duration = '.2s',\n  delay = '.1s'\n} = {}) {\n  return [c('&.fade-in-width-expand-transition-leave-from, &.fade-in-width-expand-transition-enter-to', {\n    opacity: 1\n  }), c('&.fade-in-width-expand-transition-leave-to, &.fade-in-width-expand-transition-enter-from', `\n opacity: 0!important;\n margin-left: 0!important;\n margin-right: 0!important;\n `), c('&.fade-in-width-expand-transition-leave-active', `\n overflow: hidden;\n transition:\n opacity ${duration} ${cubicBezierEaseInOut},\n max-width ${duration} ${cubicBezierEaseInOut} ${delay},\n margin-left ${duration} ${cubicBezierEaseInOut} ${delay},\n margin-right ${duration} ${cubicBezierEaseInOut} ${delay};\n `), c('&.fade-in-width-expand-transition-enter-active', `\n overflow: hidden;\n transition:\n opacity ${duration} ${cubicBezierEaseInOut} ${delay},\n max-width ${duration} ${cubicBezierEaseInOut},\n margin-left ${duration} ${cubicBezierEaseInOut},\n margin-right ${duration} ${cubicBezierEaseInOut};\n `)];\n}","import { composite } from 'seemly';\nexport function createHoverColor(rgb) {\n    return composite(rgb, [255, 255, 255, 0.16]);\n}\nexport function createPressedColor(rgb) {\n    return composite(rgb, [0, 0, 0, 0.12]);\n}\n","import { createInjectionKey } from '../../_utils';\nexport const buttonGroupInjectionKey = createInjectionKey('n-button-group');\n","import { c, cB, cE, cM, cNotM } from '../../../_utils/cssr';\nimport { fadeInWidthExpandTransition } from '../../../_styles/transitions/fade-in-width-expand.cssr';\nimport { iconSwitchTransition } from '../../../_styles/transitions/icon-switch.cssr';\nimport { isBrowser } from '../../../_utils';\n// vars:\n// --n-bezier\n// --n-bezier-ease-out\n// --n-ripple-duration\n// --n-opacity-disabled\n// --n-text-color\n// --n-text-color-hover\n// --n-text-color-pressed\n// --n-text-color-focus\n// --n-text-color-disabled\n// --n-color\n// --n-color-hover\n// --n-color-pressed\n// --n-color-focus\n// --n-color-disabled\n// --n-border\n// --n-border-hover\n// --n-border-pressed\n// --n-border-focus\n// --n-border-disabled\n// --n-ripple-color\n// --n-border-radius\n// --n-height\n// --n-width\n// --n-font-size\n// --n-padding\n// --n-icon-size\n// --n-icon-margin\n// --n-wave-opacity\n// --n-font-weight\n//\n// private-vars:\n// --n-border-color-xxx, used for custom color\nexport default c([cB('button', `\n margin: 0;\n font-weight: var(--n-font-weight);\n line-height: 1;\n font-family: inherit;\n padding: var(--n-padding);\n height: var(--n-height);\n font-size: var(--n-font-size);\n border-radius: var(--n-border-radius);\n color: var(--n-text-color);\n background-color: var(--n-color);\n width: var(--n-width);\n white-space: nowrap;\n outline: none;\n position: relative;\n z-index: auto;\n border: none;\n display: inline-flex;\n flex-wrap: nowrap;\n flex-shrink: 0;\n align-items: center;\n justify-content: center;\n user-select: none;\n -webkit-user-select: none;\n text-align: center;\n cursor: pointer;\n text-decoration: none;\n transition:\n color .3s var(--n-bezier),\n background-color .3s var(--n-bezier),\n opacity .3s var(--n-bezier),\n border-color .3s var(--n-bezier);\n `, [cM('color', [cE('border', {\n  borderColor: 'var(--n-border-color)'\n}), cM('disabled', [cE('border', {\n  borderColor: 'var(--n-border-color-disabled)'\n})]), cNotM('disabled', [c('&:focus', [cE('state-border', {\n  borderColor: 'var(--n-border-color-focus)'\n})]), c('&:hover', [cE('state-border', {\n  borderColor: 'var(--n-border-color-hover)'\n})]), c('&:active', [cE('state-border', {\n  borderColor: 'var(--n-border-color-pressed)'\n})]), cM('pressed', [cE('state-border', {\n  borderColor: 'var(--n-border-color-pressed)'\n})])])]), cM('disabled', {\n  backgroundColor: 'var(--n-color-disabled)',\n  color: 'var(--n-text-color-disabled)'\n}, [cE('border', {\n  border: 'var(--n-border-disabled)'\n})]), cNotM('disabled', [c('&:focus', {\n  backgroundColor: 'var(--n-color-focus)',\n  color: 'var(--n-text-color-focus)'\n}, [cE('state-border', {\n  border: 'var(--n-border-focus)'\n})]), c('&:hover', {\n  backgroundColor: 'var(--n-color-hover)',\n  color: 'var(--n-text-color-hover)'\n}, [cE('state-border', {\n  border: 'var(--n-border-hover)'\n})]), c('&:active', {\n  backgroundColor: 'var(--n-color-pressed)',\n  color: 'var(--n-text-color-pressed)'\n}, [cE('state-border', {\n  border: 'var(--n-border-pressed)'\n})]), cM('pressed', {\n  backgroundColor: 'var(--n-color-pressed)',\n  color: 'var(--n-text-color-pressed)'\n}, [cE('state-border', {\n  border: 'var(--n-border-pressed)'\n})])]), cM('loading', 'cursor: wait;'), cB('base-wave', `\n pointer-events: none;\n top: 0;\n right: 0;\n bottom: 0;\n left: 0;\n animation-iteration-count: 1;\n animation-duration: var(--n-ripple-duration);\n animation-timing-function: var(--n-bezier-ease-out), var(--n-bezier-ease-out);\n `, [cM('active', {\n  zIndex: 1,\n  animationName: 'button-wave-spread, button-wave-opacity'\n})]), isBrowser && 'MozBoxSizing' in document.createElement('div').style ? c('&::moz-focus-inner', {\n  border: 0\n}) : null, cE('border, state-border', `\n position: absolute;\n left: 0;\n top: 0;\n right: 0;\n bottom: 0;\n border-radius: inherit;\n transition: border-color .3s var(--n-bezier);\n pointer-events: none;\n `), cE('border', {\n  border: 'var(--n-border)'\n}), cE('state-border', {\n  border: 'var(--n-border)',\n  borderColor: '#0000',\n  zIndex: 1\n}), cE('icon', `\n margin: var(--n-icon-margin);\n margin-left: 0;\n height: var(--n-icon-size);\n width: var(--n-icon-size);\n max-width: var(--n-icon-size);\n font-size: var(--n-icon-size);\n position: relative;\n flex-shrink: 0;\n `, [cB('icon-slot', `\n height: var(--n-icon-size);\n width: var(--n-icon-size);\n position: absolute;\n left: 0;\n top: 50%;\n transform: translateY(-50%);\n display: flex;\n align-items: center;\n justify-content: center;\n `, [iconSwitchTransition({\n  top: '50%',\n  originalTransform: 'translateY(-50%)'\n})]), fadeInWidthExpandTransition()]), cE('content', `\n display: flex;\n align-items: center;\n flex-wrap: nowrap;\n min-width: 0;\n `, [c('~', [cE('icon', {\n  margin: 'var(--n-icon-margin)',\n  marginRight: 0\n})])]), cM('block', `\n display: flex;\n width: 100%;\n `), cM('dashed', [cE('border, state-border', {\n  borderStyle: 'dashed !important'\n})]), cM('disabled', {\n  cursor: 'not-allowed',\n  opacity: 'var(--n-opacity-disabled)'\n})]), c('@keyframes button-wave-spread', {\n  from: {\n    boxShadow: '0 0 0.5px 0 var(--n-ripple-color)'\n  },\n  to: {\n    // don't use exact 5px since chrome will display the animation with glitches\n    boxShadow: '0 0 0.5px 4.5px var(--n-ripple-color)'\n  }\n}), c('@keyframes button-wave-opacity', {\n  from: {\n    opacity: 'var(--n-wave-opacity)'\n  },\n  to: {\n    opacity: 0\n  }\n})]);","import { h, ref, computed, inject, defineComponent, watchEffect } from 'vue';\nimport { useMemo } from 'vooks';\nimport { changeColor } from 'seemly';\nimport { createHoverColor, createPressedColor } from '../../_utils/color/index';\nimport { buttonGroupInjectionKey } from '../../button-group/src/context';\nimport { useRtl } from '../../_mixins/use-rtl';\nimport { isSafari } from '../../_utils/env/browser';\nimport { useConfig, useFormItem, useTheme, useThemeClass } from '../../_mixins';\nimport { NFadeInExpandTransition, NIconSwitchTransition, NBaseLoading, NBaseWave } from '../../_internal';\nimport { call, color2Class, createKey, isSlotEmpty, resolveWrappedSlot, warnOnce } from '../../_utils';\nimport { buttonLight } from '../styles';\nimport style from './styles/index.cssr';\nexport const buttonProps = Object.assign(Object.assign({}, useTheme.props), { color: String, textColor: String, text: Boolean, block: Boolean, loading: Boolean, disabled: Boolean, circle: Boolean, size: String, ghost: Boolean, round: Boolean, secondary: Boolean, tertiary: Boolean, quaternary: Boolean, strong: Boolean, focusable: {\n        type: Boolean,\n        default: true\n    }, keyboard: {\n        type: Boolean,\n        default: true\n    }, tag: {\n        type: String,\n        default: 'button'\n    }, type: {\n        type: String,\n        default: 'default'\n    }, dashed: Boolean, renderIcon: Function, iconPlacement: {\n        type: String,\n        default: 'left'\n    }, attrType: {\n        type: String,\n        default: 'button'\n    }, bordered: {\n        type: Boolean,\n        default: true\n    }, onClick: [Function, Array], nativeFocusBehavior: {\n        type: Boolean,\n        default: !isSafari\n    } });\nconst Button = defineComponent({\n    name: 'Button',\n    props: buttonProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                const { dashed, ghost, text, secondary, tertiary, quaternary } = props;\n                if ((dashed || ghost || text) &&\n                    (secondary || tertiary || quaternary)) {\n                    warnOnce('button', \"`dashed`, `ghost` and `text` props can't be used along with `secondary`, `tertiary` and `quaterary` props.\");\n                }\n            });\n        }\n        const selfElRef = ref(null);\n        const waveElRef = ref(null);\n        const enterPressedRef = ref(false);\n        const showBorderRef = useMemo(() => {\n            return (!props.quaternary &&\n                !props.tertiary &&\n                !props.secondary &&\n                !props.text &&\n                (!props.color || props.ghost || props.dashed) &&\n                props.bordered);\n        });\n        const NButtonGroup = inject(buttonGroupInjectionKey, {});\n        const { mergedSizeRef } = useFormItem({}, {\n            defaultSize: 'medium',\n            mergedSize: (NFormItem) => {\n                const { size } = props;\n                if (size)\n                    return size;\n                const { size: buttonGroupSize } = NButtonGroup;\n                if (buttonGroupSize)\n                    return buttonGroupSize;\n                const { mergedSize: formItemSize } = NFormItem || {};\n                if (formItemSize) {\n                    return formItemSize.value;\n                }\n                return 'medium';\n            }\n        });\n        const mergedFocusableRef = computed(() => {\n            return props.focusable && !props.disabled;\n        });\n        const handleMousedown = (e) => {\n            var _a;\n            if (!mergedFocusableRef.value) {\n                e.preventDefault();\n            }\n            if (props.nativeFocusBehavior) {\n                return;\n            }\n            e.preventDefault();\n            // normally this won't be called if disabled (when tag is button)\n            // if not, we try to make it behave like a button\n            if (props.disabled) {\n                return;\n            }\n            if (mergedFocusableRef.value) {\n                (_a = selfElRef.value) === null || _a === void 0 ? void 0 : _a.focus({ preventScroll: true });\n            }\n        };\n        const handleClick = (e) => {\n            var _a;\n            if (!props.disabled && !props.loading) {\n                const { onClick } = props;\n                if (onClick)\n                    call(onClick, e);\n                if (!props.text) {\n                    (_a = waveElRef.value) === null || _a === void 0 ? void 0 : _a.play();\n                }\n            }\n        };\n        const handleKeyup = (e) => {\n            switch (e.key) {\n                case 'Enter':\n                    if (!props.keyboard) {\n                        return;\n                    }\n                    enterPressedRef.value = false;\n            }\n        };\n        const handleKeydown = (e) => {\n            switch (e.key) {\n                case 'Enter':\n                    if (!props.keyboard || props.loading) {\n                        e.preventDefault();\n                        return;\n                    }\n                    enterPressedRef.value = true;\n            }\n        };\n        const handleBlur = () => {\n            enterPressedRef.value = false;\n        };\n        const { inlineThemeDisabled, mergedClsPrefixRef, mergedRtlRef } = useConfig(props);\n        const themeRef = useTheme('Button', '-button', style, buttonLight, props, mergedClsPrefixRef);\n        const rtlEnabledRef = useRtl('Button', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const theme = themeRef.value;\n            const { common: { cubicBezierEaseInOut, cubicBezierEaseOut }, self } = theme;\n            const { rippleDuration, opacityDisabled, fontWeight, fontWeightStrong } = self;\n            const size = mergedSizeRef.value;\n            const { dashed, type, ghost, text, color, round, circle, textColor, secondary, tertiary, quaternary, strong } = props;\n            // font\n            const fontProps = {\n                'font-weight': strong ? fontWeightStrong : fontWeight\n            };\n            // color\n            let colorProps = {\n                '--n-color': 'initial',\n                '--n-color-hover': 'initial',\n                '--n-color-pressed': 'initial',\n                '--n-color-focus': 'initial',\n                '--n-color-disabled': 'initial',\n                '--n-ripple-color': 'initial',\n                '--n-text-color': 'initial',\n                '--n-text-color-hover': 'initial',\n                '--n-text-color-pressed': 'initial',\n                '--n-text-color-focus': 'initial',\n                '--n-text-color-disabled': 'initial'\n            };\n            const typeIsTertiary = type === 'tertiary';\n            const typeIsDefault = type === 'default';\n            const mergedType = typeIsTertiary ? 'default' : type;\n            if (text) {\n                const propTextColor = textColor || color;\n                const mergedTextColor = propTextColor || self[createKey('textColorText', mergedType)];\n                colorProps = {\n                    '--n-color': '#0000',\n                    '--n-color-hover': '#0000',\n                    '--n-color-pressed': '#0000',\n                    '--n-color-focus': '#0000',\n                    '--n-color-disabled': '#0000',\n                    '--n-ripple-color': '#0000',\n                    '--n-text-color': mergedTextColor,\n                    '--n-text-color-hover': propTextColor\n                        ? createHoverColor(propTextColor)\n                        : self[createKey('textColorTextHover', mergedType)],\n                    '--n-text-color-pressed': propTextColor\n                        ? createPressedColor(propTextColor)\n                        : self[createKey('textColorTextPressed', mergedType)],\n                    '--n-text-color-focus': propTextColor\n                        ? createHoverColor(propTextColor)\n                        : self[createKey('textColorTextHover', mergedType)],\n                    '--n-text-color-disabled': propTextColor ||\n                        self[createKey('textColorTextDisabled', mergedType)]\n                };\n            }\n            else if (ghost || dashed) {\n                const mergedTextColor = textColor || color;\n                colorProps = {\n                    '--n-color': '#0000',\n                    '--n-color-hover': '#0000',\n                    '--n-color-pressed': '#0000',\n                    '--n-color-focus': '#0000',\n                    '--n-color-disabled': '#0000',\n                    '--n-ripple-color': color || self[createKey('rippleColor', mergedType)],\n                    '--n-text-color': mergedTextColor || self[createKey('textColorGhost', mergedType)],\n                    '--n-text-color-hover': mergedTextColor\n                        ? createHoverColor(mergedTextColor)\n                        : self[createKey('textColorGhostHover', mergedType)],\n                    '--n-text-color-pressed': mergedTextColor\n                        ? createPressedColor(mergedTextColor)\n                        : self[createKey('textColorGhostPressed', mergedType)],\n                    '--n-text-color-focus': mergedTextColor\n                        ? createHoverColor(mergedTextColor)\n                        : self[createKey('textColorGhostHover', mergedType)],\n                    '--n-text-color-disabled': mergedTextColor ||\n                        self[createKey('textColorGhostDisabled', mergedType)]\n                };\n            }\n            else if (secondary) {\n                const typeTextColor = typeIsDefault\n                    ? self.textColor\n                    : typeIsTertiary\n                        ? self.textColorTertiary\n                        : self[createKey('color', mergedType)];\n                const mergedTextColor = color || typeTextColor;\n                const isColoredType = type !== 'default' && type !== 'tertiary';\n                colorProps = {\n                    '--n-color': isColoredType\n                        ? changeColor(mergedTextColor, {\n                            alpha: Number(self.colorOpacitySecondary)\n                        })\n                        : self.colorSecondary,\n                    '--n-color-hover': isColoredType\n                        ? changeColor(mergedTextColor, {\n                            alpha: Number(self.colorOpacitySecondaryHover)\n                        })\n                        : self.colorSecondaryHover,\n                    '--n-color-pressed': isColoredType\n                        ? changeColor(mergedTextColor, {\n                            alpha: Number(self.colorOpacitySecondaryPressed)\n                        })\n                        : self.colorSecondaryPressed,\n                    '--n-color-focus': isColoredType\n                        ? changeColor(mergedTextColor, {\n                            alpha: Number(self.colorOpacitySecondaryHover)\n                        })\n                        : self.colorSecondaryHover,\n                    '--n-color-disabled': self.colorSecondary,\n                    '--n-ripple-color': '#0000',\n                    '--n-text-color': mergedTextColor,\n                    '--n-text-color-hover': mergedTextColor,\n                    '--n-text-color-pressed': mergedTextColor,\n                    '--n-text-color-focus': mergedTextColor,\n                    '--n-text-color-disabled': mergedTextColor\n                };\n            }\n            else if (tertiary || quaternary) {\n                const typeColor = typeIsDefault\n                    ? self.textColor\n                    : typeIsTertiary\n                        ? self.textColorTertiary\n                        : self[createKey('color', mergedType)];\n                const mergedColor = color || typeColor;\n                if (tertiary) {\n                    colorProps['--n-color'] = self.colorTertiary;\n                    colorProps['--n-color-hover'] = self.colorTertiaryHover;\n                    colorProps['--n-color-pressed'] = self.colorTertiaryPressed;\n                    colorProps['--n-color-focus'] = self.colorSecondaryHover;\n                    colorProps['--n-color-disabled'] = self.colorTertiary;\n                }\n                else {\n                    colorProps['--n-color'] = self.colorQuaternary;\n                    colorProps['--n-color-hover'] = self.colorQuaternaryHover;\n                    colorProps['--n-color-pressed'] = self.colorQuaternaryPressed;\n                    colorProps['--n-color-focus'] = self.colorQuaternaryHover;\n                    colorProps['--n-color-disabled'] = self.colorQuaternary;\n                }\n                colorProps['--n-ripple-color'] = '#0000';\n                colorProps['--n-text-color'] = mergedColor;\n                colorProps['--n-text-color-hover'] = mergedColor;\n                colorProps['--n-text-color-pressed'] = mergedColor;\n                colorProps['--n-text-color-focus'] = mergedColor;\n                colorProps['--n-text-color-disabled'] = mergedColor;\n            }\n            else {\n                colorProps = {\n                    '--n-color': color || self[createKey('color', mergedType)],\n                    '--n-color-hover': color\n                        ? createHoverColor(color)\n                        : self[createKey('colorHover', mergedType)],\n                    '--n-color-pressed': color\n                        ? createPressedColor(color)\n                        : self[createKey('colorPressed', mergedType)],\n                    '--n-color-focus': color\n                        ? createHoverColor(color)\n                        : self[createKey('colorFocus', mergedType)],\n                    '--n-color-disabled': color || self[createKey('colorDisabled', mergedType)],\n                    '--n-ripple-color': color || self[createKey('rippleColor', mergedType)],\n                    '--n-text-color': textColor ||\n                        (color\n                            ? self.textColorPrimary\n                            : typeIsTertiary\n                                ? self.textColorTertiary\n                                : self[createKey('textColor', mergedType)]),\n                    '--n-text-color-hover': textColor ||\n                        (color\n                            ? self.textColorHoverPrimary\n                            : self[createKey('textColorHover', mergedType)]),\n                    '--n-text-color-pressed': textColor ||\n                        (color\n                            ? self.textColorPressedPrimary\n                            : self[createKey('textColorPressed', mergedType)]),\n                    '--n-text-color-focus': textColor ||\n                        (color\n                            ? self.textColorFocusPrimary\n                            : self[createKey('textColorFocus', mergedType)]),\n                    '--n-text-color-disabled': textColor ||\n                        (color\n                            ? self.textColorDisabledPrimary\n                            : self[createKey('textColorDisabled', mergedType)])\n                };\n            }\n            // border\n            let borderProps = {\n                '--n-border': 'initial',\n                '--n-border-hover': 'initial',\n                '--n-border-pressed': 'initial',\n                '--n-border-focus': 'initial',\n                '--n-border-disabled': 'initial'\n            };\n            if (text) {\n                borderProps = {\n                    '--n-border': 'none',\n                    '--n-border-hover': 'none',\n                    '--n-border-pressed': 'none',\n                    '--n-border-focus': 'none',\n                    '--n-border-disabled': 'none'\n                };\n            }\n            else {\n                borderProps = {\n                    '--n-border': self[createKey('border', mergedType)],\n                    '--n-border-hover': self[createKey('borderHover', mergedType)],\n                    '--n-border-pressed': self[createKey('borderPressed', mergedType)],\n                    '--n-border-focus': self[createKey('borderFocus', mergedType)],\n                    '--n-border-disabled': self[createKey('borderDisabled', mergedType)]\n                };\n            }\n            // size\n            const { [createKey('height', size)]: height, [createKey('fontSize', size)]: fontSize, [createKey('padding', size)]: padding, [createKey('paddingRound', size)]: paddingRound, [createKey('iconSize', size)]: iconSize, [createKey('borderRadius', size)]: borderRadius, [createKey('iconMargin', size)]: iconMargin, waveOpacity } = self;\n            const sizeProps = {\n                '--n-width': circle && !text ? height : 'initial',\n                '--n-height': text ? 'initial' : height,\n                '--n-font-size': fontSize,\n                '--n-padding': circle\n                    ? 'initial'\n                    : text\n                        ? 'initial'\n                        : round\n                            ? paddingRound\n                            : padding,\n                '--n-icon-size': iconSize,\n                '--n-icon-margin': iconMargin,\n                '--n-border-radius': text\n                    ? 'initial'\n                    : circle || round\n                        ? height\n                        : borderRadius\n            };\n            return Object.assign(Object.assign(Object.assign(Object.assign({ '--n-bezier': cubicBezierEaseInOut, '--n-bezier-ease-out': cubicBezierEaseOut, '--n-ripple-duration': rippleDuration, '--n-opacity-disabled': opacityDisabled, '--n-wave-opacity': waveOpacity }, fontProps), colorProps), borderProps), sizeProps);\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('button', computed(() => {\n                let hash = '';\n                const { dashed, type, ghost, text, color, round, circle, textColor, secondary, tertiary, quaternary, strong } = props;\n                if (dashed)\n                    hash += 'a';\n                if (ghost)\n                    hash += 'b';\n                if (text)\n                    hash += 'c';\n                if (round)\n                    hash += 'd';\n                if (circle)\n                    hash += 'e';\n                if (secondary)\n                    hash += 'f';\n                if (tertiary)\n                    hash += 'g';\n                if (quaternary)\n                    hash += 'h';\n                if (strong)\n                    hash += 'i';\n                if (color)\n                    hash += 'j' + color2Class(color);\n                if (textColor)\n                    hash += 'k' + color2Class(textColor);\n                const { value: size } = mergedSizeRef;\n                hash += 'l' + size[0];\n                hash += 'm' + type[0];\n                return hash;\n            }), cssVarsRef, props)\n            : undefined;\n        return {\n            selfElRef,\n            waveElRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedFocusable: mergedFocusableRef,\n            mergedSize: mergedSizeRef,\n            showBorder: showBorderRef,\n            enterPressed: enterPressedRef,\n            rtlEnabled: rtlEnabledRef,\n            handleMousedown,\n            handleKeydown,\n            handleBlur,\n            handleKeyup,\n            handleClick,\n            customColorCssVars: computed(() => {\n                const { color } = props;\n                if (!color)\n                    return null;\n                const hoverColor = createHoverColor(color);\n                return {\n                    '--n-border-color': color,\n                    '--n-border-color-hover': hoverColor,\n                    '--n-border-color-pressed': createPressedColor(color),\n                    '--n-border-color-focus': hoverColor,\n                    '--n-border-color-disabled': color\n                };\n            }),\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { mergedClsPrefix, tag: Component, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        const children = resolveWrappedSlot(this.$slots.default, (children) => children && (h(\"span\", { class: `${mergedClsPrefix}-button__content` }, children)));\n        return (h(Component, { ref: \"selfElRef\", class: [\n                this.themeClass,\n                `${mergedClsPrefix}-button`,\n                `${mergedClsPrefix}-button--${this.type}-type`,\n                `${mergedClsPrefix}-button--${this.mergedSize}-type`,\n                this.rtlEnabled && `${mergedClsPrefix}-button--rtl`,\n                this.disabled && `${mergedClsPrefix}-button--disabled`,\n                this.block && `${mergedClsPrefix}-button--block`,\n                this.enterPressed && `${mergedClsPrefix}-button--pressed`,\n                !this.text && this.dashed && `${mergedClsPrefix}-button--dashed`,\n                this.color && `${mergedClsPrefix}-button--color`,\n                this.secondary && `${mergedClsPrefix}-button--secondary`,\n                this.loading && `${mergedClsPrefix}-button--loading`,\n                this.ghost && `${mergedClsPrefix}-button--ghost` // required for button group border collapse\n            ], tabindex: this.mergedFocusable ? 0 : -1, type: this.attrType, style: this.cssVars, disabled: this.disabled, onClick: this.handleClick, onBlur: this.handleBlur, onMousedown: this.handleMousedown, onKeyup: this.handleKeyup, onKeydown: this.handleKeydown },\n            this.iconPlacement === 'right' && children,\n            h(NFadeInExpandTransition, { width: true }, {\n                default: () => resolveWrappedSlot(this.$slots.icon, (children) => (this.loading || this.renderIcon || children) && (h(\"span\", { class: `${mergedClsPrefix}-button__icon`, style: {\n                        margin: isSlotEmpty(this.$slots.default) ? '0' : ''\n                    } },\n                    h(NIconSwitchTransition, null, {\n                        default: () => this.loading ? (h(NBaseLoading, { clsPrefix: mergedClsPrefix, key: \"loading\", class: `${mergedClsPrefix}-icon-slot`, strokeWidth: 20 })) : (h(\"div\", { key: \"icon\", class: `${mergedClsPrefix}-icon-slot`, role: \"none\" }, this.renderIcon ? this.renderIcon() : children))\n                    }))))\n            }),\n            this.iconPlacement === 'left' && children,\n            !this.text ? (h(NBaseWave, { ref: \"waveElRef\", clsPrefix: mergedClsPrefix })) : null,\n            this.showBorder ? (h(\"div\", { \"aria-hidden\": true, class: `${mergedClsPrefix}-button__border`, style: this.customColorCssVars })) : null,\n            this.showBorder ? (h(\"div\", { \"aria-hidden\": true, class: `${mergedClsPrefix}-button__state-border`, style: this.customColorCssVars })) : null));\n    }\n});\nexport default Button;\n// XButton is for tsx type checking\n// It's not compitable with render function `h`\n// Currently we don't expose it as public\n// If there's any issue about this, we may expose it\n// Since most people use template, the type checking phase doesn't work as tsx\nexport const XButton = Button;\n// Also, we may make XButton a generic type which support `tag` prop\n// but currently vue doesn't export IntrinsicElementAttributes from runtime-dom\n// so we can't easily make an attr map by hand\n// just leave it for later\n"],"names":["color2Class","color","replace","style$1","cB","NBaseWave","defineComponent","name","props","clsPrefix","type","String","required","setup","useStyle","style","toRef","selfRef","ref","activeRef","animationTimerId","onBeforeUnmount","window","clearTimeout","active","play","value","nextTick","_a","offsetHeight","setTimeout","render","this","h","class","cubicBezierEaseInOut","commonVariables","createHoverColor","rgb","composite","createPressedColor","buttonGroupInjectionKey","createInjectionKey","c","cM","cE","borderColor","cNotM","backgroundColor","border","zIndex","animationName","isBrowser","document","createElement","iconSwitchTransition","top","originalTransform","duration","delay","opacity","fadeInWidthExpandTransition","margin","marginRight","borderStyle","cursor","from","boxShadow","to","Button","Object","assign","useTheme","textColor","text","Boolean","block","loading","disabled","circle","size","ghost","round","secondary","tertiary","quaternary","strong","focusable","default","keyboard","tag","dashed","renderIcon","Function","iconPlacement","attrType","bordered","onClick","Array","nativeFocusBehavior","isSafari","watchEffect","warnOnce","selfElRef","waveElRef","enterPressedRef","showBorderRef","useMemo","NButtonGroup","inject","mergedSizeRef","useFormItem","defaultSize","mergedSize","NFormItem","buttonGroupSize","formItemSize","mergedFocusableRef","computed","inlineThemeDisabled","mergedClsPrefixRef","mergedRtlRef","useConfig","themeRef","buttonLight","rtlEnabledRef","useRtl","cssVarsRef","theme","common","cubicBezierEaseOut","self","rippleDuration","opacityDisabled","fontWeight","fontWeightStrong","fontProps","colorProps","typeIsTertiary","typeIsDefault","mergedType","propTextColor","createKey","mergedTextColor","typeTextColor","textColorTertiary","isColoredType","changeColor","alpha","Number","colorOpacitySecondary","colorSecondary","colorOpacitySecondaryHover","colorSecondaryHover","colorOpacitySecondaryPressed","colorSecondaryPressed","typeColor","mergedColor","colorTertiary","colorTertiaryHover","colorTertiaryPressed","colorQuaternary","colorQuaternaryHover","colorQuaternaryPressed","textColorPrimary","textColorHoverPrimary","textColorPressedPrimary","textColorFocusPrimary","textColorDisabledPrimary","borderProps","height","fontSize","padding","paddingRound","iconSize","borderRadius","iconMargin","waveOpacity","sizeProps","themeClassHandle","useThemeClass","hash","mergedClsPrefix","mergedFocusable","showBorder","enterPressed","rtlEnabled","handleMousedown","e","preventDefault","focus","preventScroll","handleKeydown","key","handleBlur","handleKeyup","handleClick","call","customColorCssVars","hoverColor","cssVars","themeClass","onRender","Component","children","resolveWrappedSlot","$slots","tabindex","onBlur","onMousedown","onKeyup","onKeydown","NFadeInExpandTransition","width","icon","isSlotEmpty","NIconSwitchTransition","NBaseLoading","strokeWidth","role","NButton","XButton"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}