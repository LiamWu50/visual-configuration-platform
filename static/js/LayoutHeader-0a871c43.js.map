{"version":3,"file":"LayoutHeader-0a871c43.js","sources":["../../../node_modules/naive-ui/es/layout/styles/light.js","../../../node_modules/naive-ui/es/layout/src/interface.js","../../../node_modules/naive-ui/es/layout/src/styles/layout.cssr.js","../../../node_modules/naive-ui/es/layout/src/Layout.js","../../../node_modules/naive-ui/es/layout/src/LayoutContent.js","../../../node_modules/naive-ui/es/layout/src/styles/layout-header.cssr.js","../../../node_modules/naive-ui/es/layout/src/LayoutHeader.js"],"sourcesContent":["import { composite } from 'seemly';\nimport { commonLight } from '../../_styles/common';\nimport { scrollbarLight } from '../../_internal/scrollbar/styles';\nimport { createTheme } from '../../_mixins';\nexport const self = (vars) => {\n    const { baseColor, textColor2, bodyColor, cardColor, dividerColor, actionColor, scrollbarColor, scrollbarColorHover, invertedColor } = vars;\n    return {\n        textColor: textColor2,\n        textColorInverted: '#FFF',\n        color: bodyColor,\n        colorEmbedded: actionColor,\n        headerColor: cardColor,\n        headerColorInverted: invertedColor,\n        footerColor: actionColor,\n        footerColorInverted: invertedColor,\n        headerBorderColor: dividerColor,\n        headerBorderColorInverted: invertedColor,\n        footerBorderColor: dividerColor,\n        footerBorderColorInverted: invertedColor,\n        siderBorderColor: dividerColor,\n        siderBorderColorInverted: invertedColor,\n        siderColor: cardColor,\n        siderColorInverted: invertedColor,\n        siderToggleButtonBorder: `1px solid ${dividerColor}`,\n        siderToggleButtonColor: baseColor,\n        siderToggleButtonIconColor: textColor2,\n        siderToggleButtonIconColorInverted: textColor2,\n        siderToggleBarColor: composite(bodyColor, scrollbarColor),\n        siderToggleBarColorHover: composite(bodyColor, scrollbarColorHover),\n        // hack for inverted background\n        __invertScrollbar: 'true'\n    };\n};\nconst layoutLight = createTheme({\n    name: 'Layout',\n    common: commonLight,\n    peers: {\n        Scrollbar: scrollbarLight\n    },\n    self\n});\nexport default layoutLight;\n","import { createInjectionKey } from '../../_utils';\nexport const layoutSiderInjectionKey = createInjectionKey('n-layout-sider');\nexport const positionProp = {\n    type: String,\n    default: 'static'\n};\n","import { cB, cM } from '../../../_utils/cssr';\n// vars:\n// --n-bezier\n// --n-color\n// --n-text-color\nexport default cB('layout', `\n color: var(--n-text-color);\n background-color: var(--n-color);\n box-sizing: border-box;\n position: relative;\n z-index: auto;\n flex: auto;\n overflow: hidden;\n transition:\n box-shadow .3s var(--n-bezier),\n background-color .3s var(--n-bezier),\n color .3s var(--n-bezier);\n`, [cB('layout-scroll-container', `\n overflow-x: hidden;\n box-sizing: border-box;\n height: 100%;\n `), cM('absolute-positioned', `\n position: absolute;\n left: 0;\n right: 0;\n top: 0;\n bottom: 0;\n `)]);","import { h, defineComponent, computed, ref, provide } from 'vue';\nimport { NScrollbar } from '../../_internal';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createInjectionKey, useReactivated } from '../../_utils';\nimport { layoutLight } from '../styles';\nimport { positionProp } from './interface';\nimport style from './styles/layout.cssr';\nexport const layoutProps = {\n    embedded: Boolean,\n    position: positionProp,\n    nativeScrollbar: {\n        type: Boolean,\n        default: true\n    },\n    scrollbarProps: Object,\n    onScroll: Function,\n    contentStyle: {\n        type: [String, Object],\n        default: ''\n    },\n    hasSider: Boolean,\n    siderPlacement: {\n        type: String,\n        default: 'left'\n    }\n};\nexport const layoutInjectionKey = createInjectionKey('n-layout');\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function createLayoutComponent(isContent) {\n    return defineComponent({\n        name: isContent ? 'LayoutContent' : 'Layout',\n        props: Object.assign(Object.assign({}, useTheme.props), layoutProps),\n        setup(props) {\n            const scrollableElRef = ref(null);\n            const scrollbarInstRef = ref(null);\n            const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n            const themeRef = useTheme('Layout', '-layout', style, layoutLight, props, mergedClsPrefixRef);\n            function scrollTo(options, y) {\n                if (props.nativeScrollbar) {\n                    const { value: scrollableEl } = scrollableElRef;\n                    if (scrollableEl) {\n                        if (y === undefined) {\n                            scrollableEl.scrollTo(options);\n                        }\n                        else {\n                            scrollableEl.scrollTo(options, y);\n                        }\n                    }\n                }\n                else {\n                    const { value: scrollbarInst } = scrollbarInstRef;\n                    if (scrollbarInst) {\n                        scrollbarInst.scrollTo(options, y);\n                    }\n                }\n            }\n            provide(layoutInjectionKey, props);\n            let scrollX = 0;\n            let scrollY = 0;\n            const handleNativeElScroll = (e) => {\n                var _a;\n                const target = e.target;\n                scrollX = target.scrollLeft;\n                scrollY = target.scrollTop;\n                (_a = props.onScroll) === null || _a === void 0 ? void 0 : _a.call(props, e);\n            };\n            useReactivated(() => {\n                if (props.nativeScrollbar) {\n                    const el = scrollableElRef.value;\n                    if (el) {\n                        el.scrollTop = scrollY;\n                        el.scrollLeft = scrollX;\n                    }\n                }\n            });\n            const hasSiderStyle = {\n                display: 'flex',\n                flexWrap: 'nowrap',\n                width: '100%',\n                flexDirection: 'row'\n            };\n            const exposedMethods = {\n                scrollTo\n            };\n            const cssVarsRef = computed(() => {\n                const { common: { cubicBezierEaseInOut }, self } = themeRef.value;\n                return {\n                    '--n-bezier': cubicBezierEaseInOut,\n                    '--n-color': props.embedded ? self.colorEmbedded : self.color,\n                    '--n-text-color': self.textColor\n                };\n            });\n            const themeClassHandle = inlineThemeDisabled\n                ? useThemeClass('layout', computed(() => {\n                    return props.embedded ? 'e' : '';\n                }), cssVarsRef, props)\n                : undefined;\n            return Object.assign({ mergedClsPrefix: mergedClsPrefixRef, scrollableElRef,\n                scrollbarInstRef,\n                hasSiderStyle, mergedTheme: themeRef, handleNativeElScroll, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender }, exposedMethods);\n        },\n        render() {\n            var _a;\n            const { mergedClsPrefix, hasSider } = this;\n            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n            const hasSiderStyle = hasSider ? this.hasSiderStyle : undefined;\n            const layoutClass = [\n                this.themeClass,\n                isContent && `${mergedClsPrefix}-layout-content`,\n                `${mergedClsPrefix}-layout`,\n                `${mergedClsPrefix}-layout--${this.position}-positioned`\n            ];\n            return (h(\"div\", { class: layoutClass, style: this.cssVars }, this.nativeScrollbar ? (h(\"div\", { ref: \"scrollableElRef\", class: `${mergedClsPrefix}-layout-scroll-container`, style: [this.contentStyle, hasSiderStyle], onScroll: this.handleNativeElScroll }, this.$slots)) : (h(NScrollbar, Object.assign({}, this.scrollbarProps, { onScroll: this.onScroll, ref: \"scrollbarInstRef\", theme: this.mergedTheme.peers.Scrollbar, themeOverrides: this.mergedTheme.peerOverrides.Scrollbar, contentStyle: [this.contentStyle, hasSiderStyle] }), this.$slots))));\n        }\n    });\n}\nexport default createLayoutComponent(false);\n","import { createLayoutComponent } from './Layout';\nexport default createLayoutComponent(true);\n","import { cB, cM } from '../../../_utils/cssr';\n// vars:\n// --n-bezier\n// --n-text-color\n// --n-color\n// --n-border-color\nexport default cB('layout-header', `\n transition:\n color .3s var(--n-bezier),\n background-color .3s var(--n-bezier),\n box-shadow .3s var(--n-bezier),\n border-color .3s var(--n-bezier);\n box-sizing: border-box;\n width: 100%;\n background-color: var(--n-color);\n color: var(--n-text-color);\n`, [cM('absolute-positioned', `\n position: absolute;\n left: 0;\n right: 0;\n top: 0;\n `), cM('bordered', `\n border-bottom: solid 1px var(--n-border-color);\n `)]);","import { h, defineComponent, computed } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { layoutLight } from '../styles';\nimport { positionProp } from './interface';\nimport style from './styles/layout-header.cssr';\nexport const headerProps = {\n    position: positionProp,\n    inverted: Boolean,\n    bordered: {\n        type: Boolean,\n        default: false\n    }\n};\nexport default defineComponent({\n    name: 'LayoutHeader',\n    props: Object.assign(Object.assign({}, useTheme.props), headerProps),\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Layout', '-layout-header', style, layoutLight, props, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut }, self } = themeRef.value;\n            const vars = {\n                '--n-bezier': cubicBezierEaseInOut\n            };\n            if (props.inverted) {\n                vars['--n-color'] = self.headerColorInverted;\n                vars['--n-text-color'] = self.textColorInverted;\n                vars['--n-border-color'] = self.headerBorderColorInverted;\n            }\n            else {\n                vars['--n-color'] = self.headerColor;\n                vars['--n-text-color'] = self.textColor;\n                vars['--n-border-color'] = self.headerBorderColor;\n            }\n            return vars;\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('layout-header', computed(() => (props.inverted ? 'a' : 'b')), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        var _a;\n        const { mergedClsPrefix } = this;\n        (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-layout-header`,\n                this.themeClass,\n                this.position &&\n                    `${mergedClsPrefix}-layout-header--${this.position}-positioned`,\n                this.bordered && `${mergedClsPrefix}-layout-header--bordered`\n            ], style: this.cssVars }, this.$slots));\n    }\n});\n"],"names":["layoutLight$1","createTheme","name","common","commonLight","peers","Scrollbar","scrollbarLight","self","vars","baseColor","textColor2","bodyColor","cardColor","dividerColor","actionColor","scrollbarColor","scrollbarColorHover","invertedColor","textColor","textColorInverted","color","colorEmbedded","headerColor","headerColorInverted","footerColor","footerColorInverted","headerBorderColor","headerBorderColorInverted","footerBorderColor","footerBorderColorInverted","siderBorderColor","siderBorderColorInverted","siderColor","siderColorInverted","siderToggleButtonBorder","siderToggleButtonColor","siderToggleButtonIconColor","siderToggleButtonIconColorInverted","siderToggleBarColor","composite","siderToggleBarColorHover","__invertScrollbar","layoutSiderInjectionKey","createInjectionKey","positionProp","type","String","default","style$1","cB","cM","layoutProps","embedded","Boolean","position","nativeScrollbar","scrollbarProps","Object","onScroll","Function","contentStyle","hasSider","siderPlacement","layoutInjectionKey","createLayoutComponent","isContent","defineComponent","props","assign","useTheme","setup","scrollableElRef","ref","scrollbarInstRef","mergedClsPrefixRef","inlineThemeDisabled","useConfig","themeRef","style","layoutLight","provide","scrollX","scrollY","useReactivated","el","value","scrollTop","scrollLeft","exposedMethods","scrollTo","options","y","scrollableEl","scrollbarInst","cssVarsRef","computed","cubicBezierEaseInOut","themeClassHandle","useThemeClass","mergedClsPrefix","hasSiderStyle","display","flexWrap","width","flexDirection","mergedTheme","handleNativeElScroll","e","_a","target","call","cssVars","themeClass","onRender","render","this","layoutClass","h","class","$slots","NScrollbar","theme","themeOverrides","peerOverrides","NLayout","NLayoutContent","headerProps","inverted","bordered","NLayoutHeader"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}