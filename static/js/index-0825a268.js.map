{"version":3,"file":"index-0825a268.js","sources":["../../../src/store/area-select/index.ts","../../../src/components/Editor/AreaSelect/index.tsx","../../../src/utils/event-emitter.ts","../../../src/utils/primitive.ts","../../../src/components/Editor/AuxiliaryLine/index.tsx","../../../src/components/Editor/BoundBox/index.tsx","../../../src/components/Editor/BoundBox/use-boundbox.ts","../../../src/utils/translate.ts","../../../src/components/Editor/ContextMenu/index.tsx","../../../src/components/Editor/Grid/index.tsx","../../../src/components/Editor/index.tsx","../../../src/components/Editor/use-group.ts","../../../src/components/Editor/use-styles.ts","../../../src/views/design-space/chart/container/index.tsx","../../../src/views/design-space/chart/container/use-container.ts"],"sourcesContent":["import { Primitive } from '@/primitives/primitive'\nimport { DOMRectStyle } from '@/primitives/types'\n\nexport const useAreaSelectStore = defineStore('areaSelect', () => {\n  const groupStyle = ref<DOMRectStyle | null>(null)\n  const childPrimitives = ref<Primitive[]>([])\n  const areaSelectVisible = ref(false)\n\n  /**\n   * 保存框选中的 primitive 以及包围框的样式\n   * @param style  包围和样式\n   * @param primitives 选中的 primitive\n   */\n  const setAreaSelectOptions = (\n    style: DOMRectStyle | null,\n    primitives: Primitive[]\n  ) => {\n    groupStyle.value = style\n    childPrimitives.value = primitives\n  }\n\n  /**\n   * 设置包围盒可见性\n   * @param visible Boolean\n   */\n  const setAreaSelectVisible = (visible: boolean) => {\n    areaSelectVisible.value = visible\n  }\n\n  return {\n    groupStyle,\n    childPrimitives,\n    areaSelectVisible,\n    setAreaSelectOptions,\n    setAreaSelectVisible\n  }\n})\n","import styles from './index.module.scss'\n\nexport default defineComponent({\n  name: 'AreaSelect',\n  props: {\n    options: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  setup(props) {\n    const style = computed(() => ({\n      left: props.options.start.x + 'px',\n      top: props.options.start.y + 'px',\n      width: props.options.width + 'px',\n      height: props.options.height + 'px'\n    }))\n\n    return () => <div style={style.value} class={styles.areaSelect}></div>\n  }\n})\n","class EventEmitter {\n  private events: Record<string, Function[]> = {}\n\n  // 监听事件\n  on(eventName: string, callback: Function) {\n    if (!this.events[eventName]) {\n      this.events[eventName] = []\n    }\n    if (!this.events[eventName].includes(callback)) {\n      this.events[eventName].push(callback)\n    }\n  }\n\n  // 取消监听事件\n  off(eventName: string, callback: Function) {\n    const eventCallbacks = this.events[eventName]\n    if (eventCallbacks) {\n      this.events[eventName] = eventCallbacks.filter(\n        (item) => item !== callback\n      )\n    }\n  }\n\n  // 触发事件\n  emit(eventName: string, arg?: any) {\n    const eventCallbacks = this.events[eventName]\n    if (eventCallbacks && eventCallbacks.length > 0) {\n      for (const callback of eventCallbacks) {\n        callback(arg)\n      }\n    } else {\n      console.log(`no listener for event: ${eventName}`)\n    }\n  }\n\n  // 只监听一次事件\n  once(eventName: string, callback: Function) {\n    const onceCallback = (arg: any) => {\n      callback(arg)\n      this.off(eventName, onceCallback)\n    }\n    this.on(eventName, onceCallback)\n  }\n}\n\nexport default new EventEmitter()\n","import { Primitive } from '@/primitives/primitive'\nimport type {\n  BoxStyle,\n  DOMRect,\n  DOMRectStyle,\n  Location\n} from '@/primitives/types'\n\nimport { toPercent } from './translate'\n\nconst needUnit = [\n  'fontSize',\n  'width',\n  'height',\n  'top',\n  'left',\n  'borderWidth',\n  'letterSpacing',\n  'borderRadius'\n]\n\n/**\n * 计算组件笛卡尔坐标系坐标\n * @param style 组件在画布中的位置\n * @returns 组件坐标\n */\nexport function calcPrimitiveAxis(style: DOMRectStyle): Location {\n  return {\n    top: style.top,\n    left: style.left,\n    right: style.left + style.width,\n    bottom: style.top + style.height\n  }\n}\n\nexport function getStyle(style: BoxStyle, filter = []) {\n  const result = {}\n  Object.keys(style).forEach((key) => {\n    if (!filter.includes(key)) {\n      if (style[key] !== '') {\n        result[key] = style[key]\n\n        if (needUnit.includes(key)) {\n          result[key] += 'px'\n        }\n      }\n    }\n  })\n\n  return result\n}\n\n// 获取一个组件的样式\nexport function getPrimitiveStyle(style: BoxStyle) {\n  style = { ...style }\n  style.bottom = style.top! + style.height!\n  style.right = style.left! + style.width!\n\n  return style\n}\n\n// 将组合中的各个子组件拆分出来，并计算它们新的 style\nexport function decomposePrimitive(\n  primitive: Primitive,\n  editorRect: DOMRect,\n  parentStyle: BoxStyle\n) {\n  const element = document.getElementById(`primitive${primitive.id}`)\n  const rectInfo = element!.getBoundingClientRect()\n  // 获取元素的中心点坐标\n  const center = {\n    x: rectInfo.left - editorRect.left + rectInfo.width / 2,\n    y: rectInfo.top - editorRect.top + rectInfo.height / 2\n  }\n\n  primitive.style.width =\n    (parseFloat(primitive.groupStyle.width) / 100) * parentStyle.width!\n  primitive.style.height =\n    (parseFloat(primitive.groupStyle.height) / 100) * parentStyle.height!\n  // 计算出元素新的 top left 坐标\n  primitive.style.left = center.x - primitive.style.width / 2\n  primitive.style.top = center.y - primitive.style.height / 2\n  primitive.groupStyle = {}\n}\n\n/**\n * 创建组的样式\n * @param groupPrimitive Primitive\n */\nexport function createGroupStyle(groupPrimitive: Primitive) {\n  const parentStyle = groupPrimitive.style\n  groupPrimitive.childPrimitives?.forEach((primitive: Primitive) => {\n    // primitive.groupStyle 的 top left 是相对于 group 组件的位置\n    // 如果已存在 component.groupStyle，说明已经计算过一次了。不需要再次计算\n    if (!Object.keys(primitive.groupStyle).length) {\n      const style = { ...primitive.style }\n\n      primitive.groupStyle = getStyle(style)\n\n      primitive.groupStyle.left = toPercent(\n        (style.left - parentStyle.left) / parentStyle.width\n      )\n      primitive.groupStyle.top = toPercent(\n        (style.top - parentStyle.top) / parentStyle.height\n      )\n      primitive.groupStyle.width = toPercent(style.width / parentStyle.width)\n      primitive.groupStyle.height = toPercent(style.height / parentStyle.height)\n    }\n  })\n}\n","// 导入类型和工具函数\nimport type { DOMRectStyle, Location } from '@/primitives/types'\nimport { useEditorStore } from '@/store/editor'\nimport eventEmitter from '@/utils/event-emitter'\nimport { calcPrimitiveAxis } from '@/utils/primitive'\n\nimport styles from './index.module.scss'\n\n// 定义一些类型和常量\nexport type StyleObject = {\n  [key: string]: any\n}\n\ninterface LineStatus {\n  [key: string]: boolean\n}\n\ntype Condition = Record<\n  'isNearly' | 'lineNode' | 'line' | 'dragShift' | 'lineShift',\n  any\n>\n\ntype RecordWithAnyKey<T> = {\n  [key: string]: T\n}\n\nexport default defineComponent({\n  name: 'AuxiliaryLine',\n  setup() {\n    const editorStore = useEditorStore()\n    const lineElementsRef: Ref<(HTMLElement | null)[]> = ref([])\n    const LINE_NAMES = ['xt', 'xc', 'xb', 'yl', 'yc', 'yr']\n    const NEAR_THRESHOLD = ref<number>(3)\n    const lineStatus = reactive<LineStatus>({\n      xt: false,\n      xc: false,\n      xb: false,\n      yl: false,\n      yc: false,\n      yr: false\n    })\n\n    const setLineElementRef = (element: any) => {\n      lineElementsRef.value.push(element)\n    }\n\n    // 隐藏辅助线\n    const hideLines = () => {\n      Object.keys(lineStatus).forEach((line) => {\n        lineStatus[line] = false\n      })\n    }\n\n    const showLines = (isDownward: boolean, isRightward: boolean) => {\n      const { primitives } = editorStore\n      const currentPrimitive = editorStore.curPrimitive\n      if (!currentPrimitive) return\n\n      const {\n        top: theTop,\n        left: theLeft,\n        right: theRight,\n        bottom: theBottom\n      }: Location = calcPrimitiveAxis(currentPrimitive.style as DOMRectStyle)\n\n      const currentPrimitiveHalfWidth = (theRight - theLeft) / 2\n      const currentPrimitiveHalfHeight = (theBottom - theTop) / 2\n\n      hideLines()\n      primitives.forEach((primitive) => {\n        if (primitive == currentPrimitive) return\n\n        const primitiveStyle = calcPrimitiveAxis(\n          primitive.style as DOMRectStyle\n        )\n        const { top, left, bottom, right } = primitiveStyle\n        const primitiveHalfWidth = (right - left!) / 2\n        const primitiveHalfHeight = (bottom - top!) / 2\n\n        const conditions: RecordWithAnyKey<Condition[]> = {\n          top: [\n            {\n              isNearly: isNearly(theTop, top),\n              lineNode: lineElementsRef.value[0], // xt\n              line: 'xt',\n              dragShift: top,\n              lineShift: top\n            },\n            {\n              isNearly: isNearly(theBottom, top),\n              lineNode: lineElementsRef.value[0], // xt\n              line: 'xt',\n              dragShift: top - (theBottom - theTop || 0),\n              lineShift: top\n            },\n            {\n              // 组件与拖拽节点的中间是否对齐\n              isNearly: isNearly(\n                (theTop || 0) + currentPrimitiveHalfHeight,\n                top + primitiveHalfHeight\n              ),\n              lineNode: lineElementsRef.value[1], // xc\n              line: 'xc',\n              dragShift: top + primitiveHalfHeight - currentPrimitiveHalfHeight,\n              lineShift: top + primitiveHalfHeight\n            },\n            {\n              isNearly: isNearly(theTop, bottom),\n              lineNode: lineElementsRef.value[2], // xb\n              line: 'xb',\n              dragShift: bottom,\n              lineShift: bottom\n            },\n            {\n              isNearly: isNearly(theBottom, bottom),\n              lineNode: lineElementsRef.value[2], // xb\n              line: 'xb',\n              dragShift: bottom - (theBottom - theTop || 0),\n              lineShift: bottom\n            }\n          ],\n          left: [\n            {\n              isNearly: isNearly(theLeft, left),\n              lineNode: lineElementsRef.value[3], // yl\n              line: 'yl',\n              dragShift: left,\n              lineShift: left\n            },\n            {\n              isNearly: isNearly(theRight, left),\n              lineNode: lineElementsRef.value[3], // yl\n              line: 'yl',\n              dragShift: left - (theRight - theLeft || 0),\n              lineShift: left\n            },\n            {\n              // 组件与拖拽节点的中间是否对齐\n              isNearly: isNearly(\n                (theLeft || 0) + currentPrimitiveHalfWidth,\n                left + primitiveHalfWidth\n              ),\n              lineNode: lineElementsRef.value[4], // yc\n              line: 'yc',\n              dragShift: left + primitiveHalfWidth - currentPrimitiveHalfWidth,\n              lineShift: left + primitiveHalfWidth\n            },\n            {\n              isNearly: isNearly(theLeft, right),\n              lineNode: lineElementsRef.value[5], // yr\n              line: 'yr',\n              dragShift: right,\n              lineShift: right\n            },\n            {\n              isNearly: isNearly(theRight, right),\n              lineNode: lineElementsRef.value[5], // yr\n              line: 'yr',\n              dragShift: right - (theRight - theLeft || 0),\n              lineShift: right\n            }\n          ]\n        }\n\n        const needToShow: string[] = []\n\n        Object.keys(conditions).forEach((key) => {\n          // 遍历符合的条件并处理\n          conditions[key].forEach((condition: Condition) => {\n            if (!condition.isNearly) return\n            // 修改当前组件位移\n            currentPrimitive.updateStyleByKey(key, condition.dragShift)\n            condition.lineNode.style[key] = `${condition.lineShift}px`\n            needToShow.push(condition.line)\n          })\n        })\n\n        // 同一方向上同时显示一条线可能不太美观，因此采取选择逻辑\n        chooseTheTrueLine(needToShow, isDownward, isRightward)\n      })\n    }\n\n    const chooseTheTrueLine = (\n      needToShow: string[],\n      isDownward: boolean,\n      isRightward: boolean\n    ) => {\n      // 根据鼠标移动方向决定显示哪条线\n      if (isRightward) {\n        if (needToShow.includes('yr')) {\n          lineStatus.yr = true\n        } else if (needToShow.includes('yc')) {\n          lineStatus.yc = true\n        } else if (needToShow.includes('yl')) {\n          lineStatus.yl = true\n        }\n      } else {\n        if (needToShow.includes('yl')) {\n          lineStatus.yl = true\n        } else if (needToShow.includes('yc')) {\n          lineStatus.yc = true\n        } else if (needToShow.includes('yr')) {\n          lineStatus.yr = true\n        }\n      }\n\n      if (isDownward) {\n        if (needToShow.includes('xb')) {\n          lineStatus.xb = true\n        } else if (needToShow.includes('xc')) {\n          lineStatus.xc = true\n        } else if (needToShow.includes('xt')) {\n          lineStatus.xt = true\n        }\n      } else {\n        if (needToShow.includes('xt')) {\n          lineStatus.xt = true\n        } else if (needToShow.includes('xc')) {\n          lineStatus.xc = true\n        } else if (needToShow.includes('xb')) {\n          lineStatus.xb = true\n        }\n      }\n    }\n\n    const isNearly = (dragValue: number, targetValue: number) =>\n      Math.abs(dragValue - targetValue) <= NEAR_THRESHOLD.value\n\n    watchEffect(() => {\n      // 监听事件\n      eventEmitter.on('move', ({ isDownward, isRightward }: any) => {\n        showLines(isDownward, isRightward)\n      })\n      eventEmitter.on('unmove', () => {\n        hideLines()\n      })\n      showLines(false, false)\n    })\n\n    return () => (\n      // 渲染线条\n      <div class={styles.markLine}>\n        {LINE_NAMES.map((lineName) => (\n          <div\n            key={lineName}\n            v-show={lineStatus[lineName]}\n            ref={setLineElementRef}\n            class={`${styles.line} ${\n              lineName.includes('x') ? styles.xline : styles.yline\n            }`}\n          ></div>\n        ))}\n      </div>\n    )\n  }\n})\n","// import { Component, Style } from '@/store/compose/types'\n// import { useEditorStore } from '@/store/editor'\n// import { useSnapshotStore } from '@/store/snapshot'\nimport { ceil } from 'lodash'\nimport { type PropType } from 'vue'\n\nimport { Primitive } from '@/primitives/primitive'\nimport { BoxStyle } from '@/primitives/types'\nimport { useEditorStore } from '@/store/editor/index'\nimport eventEmitter from '@/utils/event-emitter'\nimport { mod360 } from '@/utils/translate'\n\nimport styles from './index.module.scss'\nimport { useBoundBox } from './use-boundbox'\n// const components = ['VText', 'RectShape', 'CircleShape']\n// const isPreventDrop = (component: string) => {\n//   return !components.includes(component) && !component.startsWith('SVG')\n// }\n\ntype CursorRes = {\n  [key: string]: string\n}\n\nconst props = {\n  primitive: {\n    type: Object as PropType<Primitive>,\n    default: () => {}\n  },\n  pStyle: {\n    type: Object as PropType<BoxStyle>,\n    default: () => {}\n  },\n  index: {\n    required: true,\n    type: Number,\n    default: 0\n  }\n}\n\nexport default defineComponent({\n  name: 'BoundBox',\n  props,\n  emits: ['closeContextmenu'],\n  setup(props, { slots, emit }) {\n    const editorStore = useEditorStore()\n    // const snapshotStore = useSnapshotStore()\n\n    const { curPrimitive } = storeToRefs(editorStore)\n\n    const { curRef, cursors, angleToCursor, drawPoints } = useBoundBox()\n\n    // 位置点的样式\n    const pointStyle = (pointStr: string) => {\n      const { width = 0, height = 0 } = props.pStyle\n      const hasT = pointStr.includes('t')\n      const hasB = pointStr.includes('b')\n      const hasL = pointStr.includes('l')\n      const hasR = pointStr.includes('r')\n      let newLeft = hasL ? 0 : width\n      let newTop = hasT ? 0 : height\n\n      if ((hasT || hasB) && !(hasL || hasR)) {\n        newLeft = width / 2\n        newTop = hasT ? 0 : height\n      } else if (!(hasT || hasB) && (hasL || hasR)) {\n        newLeft = hasL ? 0 : width\n        newTop = Math.floor(height / 2)\n      }\n\n      return {\n        marginLeft: '-4px',\n        marginTop: '-4px',\n        left: `${newLeft}px`,\n        top: `${newTop}px`,\n        cursor: cursors.value[pointStr]\n      }\n    }\n\n    // 获取每个位置的光标的角度\n    const getCursorStyle = () => {\n      const result: CursorRes = {}\n      let lastMatchIndex = -1\n\n      for (const key in drawPoints) {\n        const angle = mod360(drawPoints[key])\n\n        for (let i = 0; i < angleToCursor.length; i++) {\n          lastMatchIndex = (lastMatchIndex + 1) % angleToCursor.length\n          const angleLimit = angleToCursor[lastMatchIndex]\n\n          if (angle < 23 || angle >= 338) {\n            result[key] = 'nw-resize'\n            break\n          }\n\n          if (angleLimit.start <= angle && angle < angleLimit.end) {\n            result[key] = angleLimit.cursor + '-resize'\n            break\n          }\n        }\n      }\n\n      return result\n    }\n\n    /**\n     * 鼠标按下primitive\n     * @param e MouseEvent\n     */\n    const handleMouseDownEvent = (e: MouseEvent) => {\n      // 如果不是鼠标左键触发的就取消\n      if (e.button !== 0) return\n\n      e.stopPropagation()\n      e.preventDefault()\n      // 将当前点击组件的事件传播出去，目前的消费是 VText 组件 https://github.com/woai3c/visual-drag-demo/issues/90\n      // TODO\n      // this.$nextTick(() => eventBus.$emit('componentClick'))\n\n      // editorStore.setInEditorStatus(true)\n      // if (isPreventDrop(props.dataSource.component)) {\n      //   e.preventDefault()\n      // }\n\n      editorStore.setClickPrimitiveStatus(true)\n      editorStore.setCurPrimitive(props.primitive)\n      cursors.value = getCursorStyle()\n\n      const style = props.pStyle\n      const startY = e.clientY\n      const startX = e.clientX\n      const startTop = style.top || 0\n      const startLeft = style.left || 0\n      //鼠标移动事件 用来调整primitive的大小\n\n      const mouseMoveEvent = (event: MouseEvent) => {\n        const curX = event.clientX\n        const curY = event.clientY\n        const style: BoxStyle = {\n          top: ceil(event.clientY - startY + startTop),\n          left: ceil(event.clientX - startX + startLeft)\n        }\n\n        props.primitive.updateStyle(style)\n\n        // 等更新完当前组件的样式并绘制到屏幕后再判断是否需要吸附\n        // 如果不使用 $nextTick，吸附后将无法移动\n        // this.$nextTick(() => {\n        // 触发元素移动事件，用于显示标线、吸附功能\n        // 后面两个参数代表鼠标移动方向\n        // curY - startY > 0 true 表示向下移动 false 表示向上移动\n        // curX - startX > 0 true 表示向右移动 false 表示向左移动\n        const isDownward = curY - startY > 0\n        const isRightward = curX - startX > 0\n        eventEmitter.emit('move', { isDownward, isRightward })\n        // })\n      }\n\n      // 鼠标抬起事件\n      const mouseUpEvent = () => {\n        // 触发元素停止移动事件，用于隐藏标线\n        eventEmitter.emit('unmove')\n        document.removeEventListener('mousemove', mouseMoveEvent)\n        document.removeEventListener('mouseup', mouseUpEvent)\n      }\n\n      document.addEventListener('mousemove', mouseMoveEvent)\n      document.addEventListener('mouseup', mouseUpEvent)\n    }\n\n    /**\n     * 调整包围盒和内部组件的大小\n     * @param pType String\n     * @param e MouseEvent\n     */\n    const handleAdjustSize = (pType: string, e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n\n      const { pStyle } = props\n      const { height = 0, width = 0, top = 0, left = 0 } = pStyle\n      const startX = e.clientX\n      const startY = e.clientY\n      const mouseMoveEvent = (moveEvent: MouseEvent) => {\n        const curX = moveEvent.clientX\n        const curY = moveEvent.clientY\n        const disY = curY - startY\n        const disX = curX - startX\n        const hasT = /t/.test(pType)\n        const hasB = /b/.test(pType)\n        const hasL = /l/.test(pType)\n        const hasR = /r/.test(pType)\n        const newHeight = height + (hasT ? -disY : hasB ? disY : 0)\n        const newWidth = width + (hasL ? -disX : hasR ? disX : 0)\n        Object.assign(pStyle, {\n          height: Math.max(newHeight, 0),\n          width: Math.max(newWidth, 0),\n          left: left + (hasL ? disX : 0),\n          top: top + (hasT ? disY : 0)\n        })\n      }\n      const mouseUpEvent = () => {\n        document.removeEventListener('mousemove', mouseMoveEvent)\n        document.removeEventListener('mouseup', mouseUpEvent)\n      }\n      document.addEventListener('mousemove', mouseMoveEvent)\n      document.addEventListener('mouseup', mouseUpEvent)\n    }\n\n    onMounted(() => {\n      // 用于 Group 组件\n      if (curPrimitive.value) {\n        cursors.value = getCursorStyle() // 根据旋转角度获取光标位置\n      }\n    })\n\n    /**\n     * 点击当前包围盒\n     */\n    const handleClickBoundBox = (e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n      emit('closeContextmenu')\n      // editorStore.hideContextMenu()\n    }\n\n    /**\n     * 当前组件是否选中\n     */\n    const isSelected = computed(\n      () => curPrimitive.value?.id === props.primitive.id\n    )\n\n    const renderDrawPoints = () =>\n      Object.keys(drawPoints).map((key: string) => (\n        <div\n          key={key}\n          class={styles.point}\n          style={pointStyle(key as string)}\n          onMousedown={(e) => handleAdjustSize(key as string, e)}\n        ></div>\n      ))\n\n    return () => (\n      <div\n        ref={curRef}\n        class={[styles.boundBox, isSelected.value && styles.active]}\n        onClick={handleClickBoundBox}\n        onMousedown={handleMouseDownEvent}\n      >\n        {isSelected.value ? renderDrawPoints() : null}\n        {slots.default?.()}\n      </div>\n    )\n  }\n})\n","type Directions = {\n  [key: string]: number\n}\n\nexport function useBoundBox() {\n  const curRef = ref<HTMLElement | null>(null)\n  const cursors = ref<any>({})\n\n  const drawPoints: Directions = {\n    lt: 0,\n    t: 45,\n    rt: 90,\n    r: 135,\n    rb: 180,\n    b: 225,\n    lb: 270,\n    l: 315\n  }\n\n  // 每个范围的角度对应的光标\n  const angleToCursor = [\n    { start: 338, end: 23, cursor: 'nw' },\n    { start: 23, end: 68, cursor: 'n' },\n    { start: 68, end: 113, cursor: 'ne' },\n    { start: 113, end: 158, cursor: 'e' },\n    { start: 158, end: 203, cursor: 'se' },\n    { start: 203, end: 248, cursor: 's' },\n    { start: 248, end: 293, cursor: 'sw' },\n    { start: 293, end: 338, cursor: 'w' }\n  ]\n\n  return {\n    // rulerRef,\n    curRef,\n    cursors,\n    angleToCursor,\n    drawPoints\n  }\n}\n","export function mod360(deg: number) {\n  return (deg + 360) % 360\n}\n\nexport function toPercent(val: number) {\n  return val * 100 + '%'\n}\n","import { cloneDeep } from 'lodash'\n\nimport { Primitive } from '@/primitives/primitive'\nimport { useAreaSelectStore } from '@/store/area-select/index'\nimport { useEditorStore } from '@/store/editor'\nimport utils from '@/utils'\n\nimport styles from './index.module.scss'\n\nexport default defineComponent({\n  name: 'ContextMenu',\n  setup(props, { expose }) {\n    const message = useMessage()\n    const editorStore = useEditorStore()\n    const areaSelectStore = useAreaSelectStore()\n    const { curPrimitive } = storeToRefs(editorStore)\n    const { areaSelectVisible } = storeToRefs(areaSelectStore)\n\n    const variables = reactive({\n      visible: ref(false),\n      top: ref(0),\n      left: ref(0),\n      copyData: ref<Primitive | null>(null)\n    })\n\n    /**\n     * 显示右键菜单\n     */\n    const show = ({ top, left }: { top: number; left: number }) => {\n      variables.top = top\n      variables.left = left\n      variables.visible = true\n    }\n\n    /**\n     * 关闭右键菜单\n     */\n    const close = () => {\n      variables.visible = false\n    }\n\n    // 点击菜单时不取消当前组件的选中状态\n    const handleMouseUp = () => {\n      editorStore.setClickPrimitiveStatus(true)\n    }\n\n    /**\n     * 复制\n     */\n    const handleCopy = () => {\n      const primitive = cloneDeep(curPrimitive.value)\n      primitive!.id = utils.createId()\n      variables.copyData = primitive\n      message.success('复制成功！')\n    }\n\n    /**\n     * 粘贴\n     */\n    const handlePaste = () => {\n      if (!variables.copyData) {\n        message.warning('请选择组件！')\n        return\n      }\n\n      const primitive = variables.copyData\n      primitive.style.top = variables.top\n      primitive.style.left = variables.left\n\n      editorStore.addPrimitive(primitive as Primitive)\n    }\n\n    /**\n     * 清空粘贴板\n     */\n    const handleClearCanvas = () => {\n      editorStore.clear()\n    }\n\n    /**\n     * 删除\n     */\n    const handelDelete = () => {\n      editorStore.deleteCurPrimitive()\n      message.success('删除成功！')\n    }\n\n    /**\n     * 置顶\n     */\n    const handleUp = () => {\n      editorStore.upCurComponent()\n    }\n\n    /**\n     * 置底\n     */\n    const handleDown = () => {\n      editorStore.downCurComponent()\n    }\n\n    /**\n     * 上移\n     */\n    const handleTop = () => {\n      editorStore.moveCurPrimitiveByIndex(1)\n    }\n\n    /**\n     * 下移\n     */\n    const handleBottom = () => {\n      editorStore.moveCurPrimitiveByIndex(-1)\n    }\n\n    /**\n     * 创建分组\n     */\n    const handleCreateGroup = () => {}\n\n    /**\n     * 删除分组的数据\n     */\n    const handleDeleteGroup = () => {}\n\n    const typeHandler = {\n      复制: handleCopy,\n      粘贴: handlePaste,\n      删除: handelDelete,\n      置顶: handleUp,\n      置底: handleDown,\n      上移: handleTop,\n      下移: handleBottom\n    }\n\n    const groupTypeHandler = {\n      组合: handleCreateGroup,\n      删除: handleDeleteGroup\n    }\n\n    const canvasTypeHandler = { 粘贴: handlePaste, 清空画布: handleClearCanvas }\n\n    const typeOperations = computed(() =>\n      curPrimitive.value\n        ? typeHandler\n        : areaSelectVisible.value\n        ? groupTypeHandler\n        : canvasTypeHandler\n    )\n\n    expose({ show, close })\n\n    return () => (\n      <div\n        v-show={variables.visible}\n        class={styles.contextmenu}\n        style={{ top: `${variables.top}px`, left: `${variables.left}px` }}\n      >\n        <ul onMouseup={handleMouseUp}>\n          {Object.entries(typeOperations.value).map(([key, handler]) => (\n            <li onClick={handler}>{key}</li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n})\n","export default defineComponent({\n  name: 'Grid',\n  render() {\n    return (\n      <svg\n        style={{ position: 'absolute', top: 0, left: 0 }}\n        width='100%'\n        height='100%'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <defs>\n          <pattern\n            id='smallGrid'\n            width='7.236328125'\n            height='7.236328125'\n            patternUnits='userSpaceOnUse'\n          >\n            <path\n              d='M 7.236328125 0 L 0 0 0 7.236328125'\n              fill='none'\n              stroke='rgba(207, 207, 207, 0.3)'\n              stroke-width='1'\n            ></path>\n          </pattern>\n          <pattern\n            id='grid'\n            width='36.181640625'\n            height='36.181640625'\n            patternUnits='userSpaceOnUse'\n          >\n            <rect\n              width='36.181640625'\n              height='36.181640625'\n              fill='url(#smallGrid)'\n            ></rect>\n            <path\n              d='M 36.181640625 0 L 0 0 0 36.181640625'\n              fill='none'\n              stroke='rgba(186, 186, 186, 0.5)'\n              stroke-width='1'\n            ></path>\n          </pattern>\n        </defs>\n        <rect width='100%' height='100%' fill='url(#grid)'></rect>\n      </svg>\n    )\n  }\n})\n","import { Primitive } from '@/primitives/primitive'\nimport { useAreaSelectStore } from '@/store/area-select/index'\nimport { useEditorStore } from '@/store/editor/index'\n\nimport AreaSelect from './AreaSelect'\nimport AuxiliaryLine from './AuxiliaryLine/index'\nimport BoundBox from './BoundBox/index'\nimport ContextMenu from './ContextMenu/index'\nimport Grid from './Grid/index'\nimport styles from './index.module.scss'\nimport { useGroup } from './use-group'\nimport { useStyles } from './use-styles'\n\nexport const auxiliaryLineKey = 'AUXILIARY_LINE_KEY'\n\nexport default defineComponent({\n  name: 'Editor',\n  components: { Grid, AreaSelect, ContextMenu },\n  setup() {\n    const editorStore = useEditorStore()\n    const areaSelectStore = useAreaSelectStore()\n    const { areaSelectVisible } = storeToRefs(areaSelectStore)\n    const { groupState, onDrawGroupBoundry } = useGroup()\n\n    const primitives = editorStore.primitives\n    const { curPrimitive } = storeToRefs(editorStore)\n\n    const contextMenuRef = ref<typeof ContextMenu | null>(null)\n\n    const auxiliaryLineRef = ref<InstanceType<typeof AuxiliaryLine> | null>(\n      null\n    )\n    provide(auxiliaryLineKey, auxiliaryLineRef)\n\n    /**\n     * 按下鼠标左键事件\n     * @param e MouseEvent\n     */\n    const handleMouseDown = (e: MouseEvent) => {\n      // 如果不是鼠标左键触发的就取消\n      if (e.button !== 0) return\n\n      editorStore.setClickPrimitiveStatus(false)\n      if (!curPrimitive) e.preventDefault()\n      onDrawGroupBoundry(e)\n    }\n\n    /**\n     * 取消当前选中的primitive\n     */\n    const deselectCurPrimitive = (e: MouseEvent) => {\n      if (!editorStore.isClickPrimitive) editorStore.setCurPrimitive(null)\n\n      // 如果不是右键的话就把右键菜单关闭\n      if (e.button !== 2) contextMenuRef.value?.close()\n    }\n\n    /**\n     * 开启右键菜单\n     * @param e MouseEvent\n     */\n    const handleShowContextMenu = (e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n      if (!e.target) return\n\n      // 计算菜单相对于编辑器的位移\n      let target = e.target as HTMLElement\n      let top = e.offsetY\n      let left = e.offsetX\n\n      while (target instanceof SVGElement) {\n        target = target.parentNode as HTMLElement\n      }\n\n      while (target.id !== 'editor') {\n        left += target.offsetLeft\n        top += target.offsetTop\n        target = target.parentNode as HTMLElement\n      }\n\n      contextMenuRef.value?.show({ top, left })\n    }\n\n    /**\n     * 关闭右键菜单\n     */\n    const handleCloseContextMenu = () => {\n      contextMenuRef.value?.close()\n    }\n\n    const { getBoundBoxStyle } = useStyles()\n\n    const renderPrimitives = () =>\n      primitives.map((item, index) => (\n        <BoundBox\n          index={index}\n          style={getBoundBoxStyle(item.style)}\n          primitive={item as Primitive}\n          pStyle={item.style}\n          onCloseContextmenu={handleCloseContextMenu}\n        >\n          {h(resolveComponent(item.cName), {\n            id: `primitive${item.id}`,\n            class: styles.primitive,\n            dataSource: item\n          })}\n        </BoundBox>\n      ))\n\n    return () => (\n      <div\n        id='editor'\n        class={styles.editor}\n        onMousedown={handleMouseDown}\n        onMouseup={deselectCurPrimitive}\n        onContextmenu={handleShowContextMenu}\n      >\n        <Grid />\n        <AreaSelect\n          v-show={areaSelectVisible}\n          options={{\n            start: groupState.start,\n            width: groupState.width,\n            height: groupState.height\n          }}\n        />\n        <AuxiliaryLine />\n        <ContextMenu ref={contextMenuRef} />\n        {renderPrimitives()}\n      </div>\n    )\n  }\n})\n","import { Primitive } from '@/primitives/primitive'\nimport { Location } from '@/primitives/types'\nimport { useAreaSelectStore } from '@/store/area-select/index'\nimport { useEditorStore } from '@/store/editor/index'\nimport { getPrimitiveStyle } from '@/utils/primitive'\n\nexport function useGroup() {\n  const editorStore = useEditorStore()\n  const areaSelectStore = useAreaSelectStore()\n  const { primitives } = storeToRefs(editorStore)\n  const variables = reactive({\n    editorX: 0,\n    editorY: 0,\n    start: {\n      x: 0,\n      y: 0\n    },\n    width: 0,\n    height: 0\n  })\n\n  /**\n   * 开始绘制包围盒范围\n   * @param e MouseEvent\n   */\n  const onDrawGroupBoundry = (e: MouseEvent) => {\n    hideAreaSelect()\n\n    const editor = document.getElementById('editor')\n    const rectInfo = editor!.getBoundingClientRect()\n\n    variables.editorX = rectInfo.x\n    variables.editorY = rectInfo.y\n\n    const startX = e.clientX\n    const startY = e.clientY\n    variables.start.x = startX - variables.editorX\n    variables.start.y = startY - variables.editorY\n    // 展示选中区域\n    areaSelectStore.setAreaSelectVisible(true)\n\n    const move = (moveEvent: MouseEvent) => {\n      variables.width = Math.abs(moveEvent.clientX - startX)\n      variables.height = Math.abs(moveEvent.clientY - startY)\n      if (moveEvent.clientX < startX) {\n        variables.start.x = moveEvent.clientX - variables.editorX\n      }\n\n      if (moveEvent.clientY < startY) {\n        variables.start.y = moveEvent.clientY - variables.editorY\n      }\n    }\n\n    const up = (e: MouseEvent) => {\n      document.removeEventListener('mousemove', move)\n      document.removeEventListener('mouseup', up)\n\n      if (e.clientX == startX && e.clientY == startY) {\n        hideAreaSelect()\n        return\n      }\n\n      saveAreaSelectData()\n    }\n\n    document.addEventListener('mousemove', move)\n    document.addEventListener('mouseup', up)\n  }\n\n  /**\n   * 隐藏包围盒子\n   */\n  const hideAreaSelect = () => {\n    variables.width = 0\n    variables.height = 0\n    areaSelectStore.setAreaSelectVisible(false)\n    areaSelectStore.setAreaSelectOptions(null, [])\n  }\n\n  /**\n   * 保存区域选择的数据\n   */\n  const saveAreaSelectData = () => {\n    // 获取选中区域的组件数据\n    const primitives = getInternalPrimitives()\n\n    if (primitives.length <= 1) {\n      hideAreaSelect()\n      return\n    }\n\n    let top = Infinity,\n      left = Infinity,\n      right = -Infinity,\n      bottom = -Infinity\n\n    primitives.forEach((primitive) => {\n      let style = {} as Location\n      if (primitive.cName === 'Group') {\n        primitive.childPrimitives?.forEach((item: Primitive) => {\n          const element = document.getElementById(`primitive${item.id}`)\n          const rectInfo = element!.getBoundingClientRect()\n\n          style.left = rectInfo.left - variables.editorX\n          style.top = rectInfo.top - variables.editorY\n          style.right = rectInfo.right - variables.editorX\n          style.bottom = rectInfo.bottom - variables.editorY\n\n          if (style.left < left) left = style.left\n          if (style.top < top) top = style.top\n          if (style.right > right) right = style.right\n          if (style.bottom > bottom) bottom = style.bottom\n        })\n      } else {\n        style = getPrimitiveStyle(primitive.style)\n      }\n      if (style.left < left) left = style.left\n      if (style.top < top) top = style.top\n      if (style.right > right) right = style.right\n      if (style.bottom > bottom) bottom = style.bottom\n    })\n\n    variables.start.x = left\n    variables.start.y = top\n    variables.width = right - left\n    variables.height = bottom - top\n\n    const style = {\n      left,\n      top,\n      width: variables.width,\n      height: variables.height\n    }\n    areaSelectStore.setAreaSelectOptions(style, primitives)\n  }\n\n  /**\n   * 获取当前回执包围盒内部的 primitive\n   * @returns Pimitive[]\n   */\n  const getInternalPrimitives = () => {\n    const { x, y } = variables.start\n    const dataSource = primitives.value as Primitive[]\n\n    return dataSource.filter((p) => {\n      const { left, top, width, height } = getPrimitiveStyle(p.style)\n      if (\n        x <= left &&\n        y <= top &&\n        left + width <= x + variables.width &&\n        top + height <= y + variables.height\n      )\n        return p\n    })\n  }\n\n  return {\n    groupState: variables,\n    onDrawGroupBoundry\n  }\n}\n","import { BoxStyle, CSSStyleDeclaration } from '@/primitives/types'\n\nexport const useStyles = () => {\n  /**\n   * 获取包围盒的样式\n   * @param style BoxStyle\n   */\n  const getBoundBoxStyle = (style: BoxStyle) => {\n    const pStyle = {} as CSSStyleDeclaration\n\n    for (const [key, value] of Object.entries(style)) {\n      if (value) pStyle[key] = value + 'px'\n    }\n\n    return pStyle\n  }\n\n  /**\n   * 获取渲染节点的样式\n   * @param style BoxStyle\n   */\n  const getPrimitiveStyle = (style: BoxStyle) => {\n    const pStyle = {} as CSSStyleDeclaration\n\n    for (const [key, value] of Object.entries(style)) {\n      if (value) pStyle[key] = value + 'px'\n    }\n\n    return pStyle\n  }\n\n  return {\n    getBoundBoxStyle,\n    getPrimitiveStyle\n  }\n}\n","import Editor from '@/components/Editor/index'\n\nimport styles from './index.module.scss'\nimport { useContainer } from './use-container'\n\nexport default defineComponent({\n  name: 'Container',\n  components: { Editor },\n  setup() {\n    const { ...restFunc } = useContainer()\n\n    return {\n      ...restFunc\n    }\n  },\n  render() {\n    return (\n      <>\n        <div\n          class={styles.container}\n          onDrop={this.handleDrop}\n          onDragover={this.handleDragOver}\n          onMousedown={this.handleMouseDown}\n          onMouseup={this.handleMouseUp}\n        >\n          <Editor />\n        </div>\n      </>\n    )\n  }\n})\n","import { ceil } from 'lodash'\n\nimport { primitivesList } from '@/primitives/loader'\nimport { BoxStyle } from '@/primitives/types'\nimport { useEditorStore } from '@/store/editor/index'\n\nexport const useContainer = () => {\n  const editorStore = useEditorStore()\n\n  /**\n   * 拖动结束事件\n   * @param e DragEvent\n   */\n  const handleDrop = (e: DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n\n    const name = e.dataTransfer!.getData('name')\n    const editorRef = document.querySelector('#editor')!\n    const editorRefRec = editorRef.getBoundingClientRect()\n    const primitive = new primitivesList[name]()\n    const style: BoxStyle = {\n      top: ceil(e.clientY - editorRefRec.y),\n      left: ceil(e.clientX - editorRefRec.x)\n    }\n\n    primitive.updateStyle(style)\n    editorStore.addPrimitive(primitive)\n\n    // 根据画面比例修改组件样式比例 https://github.com/woai3c/visual-drag-demo/issues/91\n    //   changeComponentSizeWithScale(component)\n\n    //   this.$store.commit('recordSnapshot')\n  }\n\n  const handleDragOver = (e: DragEvent) => {\n    e.preventDefault()\n    e.dataTransfer!.dropEffect = 'copy'\n  }\n\n  const handleMouseDown = (e: DragEvent) => {\n    e.stopPropagation()\n  }\n\n  const handleMouseUp = () => {}\n\n  return {\n    handleDrop,\n    handleDragOver,\n    handleMouseDown,\n    handleMouseUp\n  }\n}\n"],"names":["useAreaSelectStore","defineStore","groupStyle","ref","childPrimitives","areaSelectVisible","setAreaSelectOptions","style","primitives","value","setAreaSelectVisible","visible","AreaSelect","defineComponent","name","props","options","type","computed","width","height","_createVNode","class","styles","eventEmitter","constructor","__publicField","this","on","eventName","callback","events","includes","push","off","eventCallbacks","filter","item","emit","arg","length","once","onceCallback","calcPrimitiveAxis","top","left","right","bottom","getPrimitiveStyle","AuxiliaryLine","setup","editorStore","useEditorStore","lineElementsRef","LINE_NAMES","NEAR_THRESHOLD","xt","xc","xb","yl","yc","yr","lineStatus","showLines","isDownward","isRightward","currentPrimitive","curPrimitive","currentPrimitiveHalfWidth","theRight","theLeft","currentPrimitiveHalfHeight","theBottom","theTop","primitiveStyle","primitive","primitiveHalfWidth","primitiveHalfHeight","conditions","isNearly","lineNode","line","dragShift","lineShift","condition","needToShow","chooseTheTrueLine","dragValue","targetValue","Math","abs","watchEffect","key","lineName","setLineElementRef","BoundBox","pStyle","index","required","default","storeToRefs","drawPoints","curRef","cursors","angleToCursor","start","end","cursor","lt","t","rt","r","rb","b","lb","l","hasT","pointStr","hasB","hasL","hasR","newLeft","newTop","marginLeft","marginTop","i","angleLimit","lastMatchIndex","angle","result","e","button","startY","clientY","startX","clientX","startTop","startLeft","curX","event","curY","document","onMounted","isSelected","_a","id","renderDrawPoints","Object","keys","map","onMousedown","pType","moveEvent","disY","disX","test","newHeight","newWidth","handleAdjustSize","onClick","handleClickBoundBox","slots","call","ContextMenu","expose","message","useMessage","areaSelectStore","variables","copyData","typeHandler","复制","cloneDeep","粘贴","删除","置顶","置底","上移","下移","groupTypeHandler","组合","canvasTypeHandler","清空画布","typeOperations","close","entries","handler","Grid","render","position","xmlns","patternUnits","d","fill","stroke","Editor","components","onDrawGroupBoundry","reactive","editorX","editorY","x","y","hideAreaSelect","saveAreaSelectData","primitives2","getInternalPrimitives","Infinity","forEach","style2","cName","rectInfo","getElementById","getBoundingClientRect","p","groupState","editor","move","up","e2","removeEventListener","addEventListener","contextMenuRef","auxiliaryLineRef","provide","preventDefault","target","offsetY","offsetX","getBoundBoxStyle","_slot","s","h","resolveComponent","dataSource","prototype","toString","_isVNode","handleMouseDown","onMouseup","deselectCurPrimitive","Container","handleDrop","stopPropagation","dataTransfer","getData","editorRefRec","querySelector","primitivesList","ceil","updateStyle","addPrimitive","handleDragOver","dropEffect","handleMouseUp","_Fragment"],"mappings":"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"}