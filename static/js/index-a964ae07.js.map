{"version":3,"file":"index-a964ae07.js","sources":["../../../src/components/Editor/BoundBox/index.tsx","../../../src/components/Editor/BoundBox/use-boundbox.ts","../../../src/utils/translate.ts","../../../src/components/Editor/ContextMenu/index.tsx","../../../src/components/Editor/Grid/index.tsx","../../../src/components/Editor/index.tsx","../../../src/components/Editor/use-styles.ts","../../../src/views/design-space/chart/container/index.tsx","../../../src/views/design-space/chart/container/use-container.ts"],"sourcesContent":["// import { Component, Style } from '@/store/compose/types'\n// import { useEditorStore } from '@/store/editor'\n// import { useSnapshotStore } from '@/store/snapshot'\nimport { ceil } from 'lodash'\nimport { type PropType } from 'vue'\n\nimport { Primitive } from '@/primitives/primitive'\nimport { BoxStyle } from '@/primitives/types'\nimport { useEditorStore } from '@/store/editor/index'\nimport { mod360 } from '@/utils/translate'\n\nimport styles from './index.module.scss'\nimport { useBoundBox } from './use-boundbox'\n// const components = ['VText', 'RectShape', 'CircleShape']\n// const isPreventDrop = (component: string) => {\n//   return !components.includes(component) && !component.startsWith('SVG')\n// }\n\ntype CursorRes = {\n  [key: string]: string\n}\n\nconst props = {\n  primitive: {\n    type: Object as PropType<Primitive>,\n    default: () => {}\n  },\n  pStyle: {\n    type: Object as PropType<BoxStyle>,\n    default: () => {}\n  },\n  index: {\n    required: true,\n    type: Number,\n    default: 0\n  }\n}\n\nexport default defineComponent({\n  name: 'BoundBox',\n  props,\n  emits: ['closeContextmenu'],\n  setup(props, { slots, emit }) {\n    const editorStore = useEditorStore()\n    // const snapshotStore = useSnapshotStore()\n\n    const { curPrimitive } = storeToRefs(editorStore)\n\n    const { curRef, cursors, angleToCursor, drawPoints } = useBoundBox()\n\n    // 位置点的样式\n    const pointStyle = (pointStr: string) => {\n      const { width = 0, height = 0 } = props.pStyle\n      const hasT = pointStr.includes('t')\n      const hasB = pointStr.includes('b')\n      const hasL = pointStr.includes('l')\n      const hasR = pointStr.includes('r')\n      let newLeft = hasL ? 0 : width\n      let newTop = hasT ? 0 : height\n\n      if ((hasT || hasB) && !(hasL || hasR)) {\n        newLeft = width / 2\n        newTop = hasT ? 0 : height\n      } else if (!(hasT || hasB) && (hasL || hasR)) {\n        newLeft = hasL ? 0 : width\n        newTop = Math.floor(height / 2)\n      }\n\n      return {\n        marginLeft: '-4px',\n        marginTop: '-4px',\n        left: `${newLeft}px`,\n        top: `${newTop}px`,\n        cursor: cursors.value[pointStr]\n      }\n    }\n\n    // 获取每个位置的光标的角度\n    const getCursorStyle = () => {\n      const result: CursorRes = {}\n      let lastMatchIndex = -1\n\n      for (const key in drawPoints) {\n        const angle = mod360(drawPoints[key])\n\n        for (let i = 0; i < angleToCursor.length; i++) {\n          lastMatchIndex = (lastMatchIndex + 1) % angleToCursor.length\n          const angleLimit = angleToCursor[lastMatchIndex]\n\n          if (angle < 23 || angle >= 338) {\n            result[key] = 'nw-resize'\n            break\n          }\n\n          if (angleLimit.start <= angle && angle < angleLimit.end) {\n            result[key] = angleLimit.cursor + '-resize'\n            break\n          }\n        }\n      }\n\n      return result\n    }\n\n    /**\n     * 鼠标按下primitive\n     * @param e MouseEvent\n     */\n    const handleMouseDownEvent = (e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n      // 将当前点击组件的事件传播出去，目前的消费是 VText 组件 https://github.com/woai3c/visual-drag-demo/issues/90\n      // TODO\n      // this.$nextTick(() => eventBus.$emit('componentClick'))\n\n      // editorStore.setInEditorStatus(true)\n      // if (isPreventDrop(props.dataSource.component)) {\n      //   e.preventDefault()\n      // }\n\n      editorStore.setClickPrimitiveStatus(true)\n      editorStore.setCurPrimitive(props.primitive)\n      cursors.value = getCursorStyle()\n\n      const style = props.pStyle\n      const startY = e.clientY\n      const startX = e.clientX\n      const startTop = style.top || 0\n      const startLeft = style.left || 0\n      //鼠标移动事件 用来调整primitive的大小\n\n      const mouseMoveEvent = (event: MouseEvent) => {\n        const style: BoxStyle = {\n          top: ceil(event.clientY - startY + startTop),\n          left: ceil(event.clientX - startX + startLeft)\n        }\n\n        props.primitive.updateStyle(style)\n\n        // 等更新完当前组件的样式并绘制到屏幕后再判断是否需要吸附\n        // 如果不使用 $nextTick，吸附后将无法移动\n        // TODO\n        // this.$nextTick(() => {\n        //   // 触发元素移动事件，用于显示标线、吸附功能\n        //   // 后面两个参数代表鼠标移动方向\n        //   // curY - startY > 0 true 表示向下移动 false 表示向上移动\n        //   // curX - startX > 0 true 表示向右移动 false 表示向左移动\n        // eventBus.$emit('move', curY - startY > 0, curX - startX > 0)\n        // })\n      }\n\n      // 鼠标抬起事件\n      const mouseUpEvent = () => {\n        // TODO\n        // 触发元素停止移动事件，用于隐藏标线\n        // eventBus.$emit('unmove')\n        document.removeEventListener('mousemove', mouseMoveEvent)\n        document.removeEventListener('mouseup', mouseUpEvent)\n      }\n\n      document.addEventListener('mousemove', mouseMoveEvent)\n      document.addEventListener('mouseup', mouseUpEvent)\n    }\n\n    /**\n     * 调整包围盒和内部组件的大小\n     * @param pType String\n     * @param e MouseEvent\n     */\n    const handleAdjustSize = (pType: string, e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n\n      const { pStyle } = props\n      const { height = 0, width = 0, top = 0, left = 0 } = pStyle\n      const startX = e.clientX\n      const startY = e.clientY\n      const mouseMoveEvent = (moveEvent: MouseEvent) => {\n        const curX = moveEvent.clientX\n        const curY = moveEvent.clientY\n        const disY = curY - startY\n        const disX = curX - startX\n        const hasT = /t/.test(pType)\n        const hasB = /b/.test(pType)\n        const hasL = /l/.test(pType)\n        const hasR = /r/.test(pType)\n        const newHeight = height + (hasT ? -disY : hasB ? disY : 0)\n        const newWidth = width + (hasL ? -disX : hasR ? disX : 0)\n        Object.assign(pStyle, {\n          height: Math.max(newHeight, 0),\n          width: Math.max(newWidth, 0),\n          left: left + (hasL ? disX : 0),\n          top: top + (hasT ? disY : 0)\n        })\n      }\n      const mouseUpEvent = () => {\n        document.removeEventListener('mousemove', mouseMoveEvent)\n        document.removeEventListener('mouseup', mouseUpEvent)\n      }\n      document.addEventListener('mousemove', mouseMoveEvent)\n      document.addEventListener('mouseup', mouseUpEvent)\n    }\n\n    onMounted(() => {\n      // 用于 Group 组件\n      if (curPrimitive.value) {\n        cursors.value = getCursorStyle() // 根据旋转角度获取光标位置\n      }\n    })\n\n    /**\n     * 点击当前包围盒\n     */\n    const handleClickBoundBox = (e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n      emit('closeContextmenu')\n      // editorStore.hideContextMenu()\n    }\n\n    /**\n     * 当前组件是否选中\n     */\n    const isSelected = computed(\n      () => curPrimitive.value?.id === props.primitive.id\n    )\n\n    const renderDrawPoints = () =>\n      Object.keys(drawPoints).map((key: string) => (\n        <div\n          key={key}\n          class={styles.point}\n          style={pointStyle(key as string)}\n          onMousedown={(e) => handleAdjustSize(key as string, e)}\n        ></div>\n      ))\n\n    return () => (\n      <div\n        ref={curRef}\n        class={[styles.boundBox, isSelected.value && styles.active]}\n        onClick={handleClickBoundBox}\n        onMousedown={handleMouseDownEvent}\n      >\n        {isSelected.value ? renderDrawPoints() : null}\n        {slots.default?.()}\n      </div>\n    )\n  }\n})\n","type Directions = {\n  [key: string]: number\n}\n\nexport function useBoundBox() {\n  const curRef = ref<HTMLElement | null>(null)\n  const cursors = ref<any>({})\n\n  const drawPoints: Directions = {\n    lt: 0,\n    t: 45,\n    rt: 90,\n    r: 135,\n    rb: 180,\n    b: 225,\n    lb: 270,\n    l: 315\n  }\n\n  // 每个范围的角度对应的光标\n  const angleToCursor = [\n    { start: 338, end: 23, cursor: 'nw' },\n    { start: 23, end: 68, cursor: 'n' },\n    { start: 68, end: 113, cursor: 'ne' },\n    { start: 113, end: 158, cursor: 'e' },\n    { start: 158, end: 203, cursor: 'se' },\n    { start: 203, end: 248, cursor: 's' },\n    { start: 248, end: 293, cursor: 'sw' },\n    { start: 293, end: 338, cursor: 'w' }\n  ]\n\n  return {\n    // rulerRef,\n    curRef,\n    cursors,\n    angleToCursor,\n    drawPoints\n  }\n}\n","export function mod360(deg: number) {\n  return (deg + 360) % 360\n}\n","import { cloneDeep } from 'lodash'\n\nimport { Primitive } from '@/primitives/primitive'\nimport { useEditorStore } from '@/store/editor'\nimport utils from '@/utils'\n\nimport styles from './index.module.scss'\n\nexport default defineComponent({\n  name: 'ContextMenu',\n  setup(props, { expose }) {\n    const message = useMessage()\n    const editorStore = useEditorStore()\n    const { curPrimitive } = storeToRefs(editorStore)\n\n    const variables = reactive({\n      visible: ref(false),\n      top: ref(0),\n      left: ref(0),\n      copyData: ref<Primitive | null>(null)\n    })\n\n    /**\n     * 显示右键菜单\n     */\n    const show = ({ top, left }: { top: number; left: number }) => {\n      variables.top = top\n      variables.left = left\n      variables.visible = true\n    }\n\n    /**\n     * 关闭右键菜单\n     */\n    const close = () => {\n      variables.visible = false\n    }\n\n    // 点击菜单时不取消当前组件的选中状态\n    const handleMouseUp = () => {\n      editorStore.setClickPrimitiveStatus(true)\n    }\n\n    /**\n     * 复制\n     */\n    const handleCopy = () => {\n      const primitive = cloneDeep(curPrimitive.value)\n      primitive!.id = utils.createId()\n      variables.copyData = primitive\n      message.success('复制成功！')\n    }\n\n    /**\n     * 粘贴\n     */\n    const handlePaste = () => {\n      if (!variables.copyData) {\n        message.warning('请选择组件！')\n        return\n      }\n\n      const primitive = variables.copyData\n      primitive.style.top = variables.top\n      primitive.style.left = variables.left\n\n      editorStore.addPrimitive(primitive as Primitive)\n    }\n\n    /**\n     * 清空粘贴板\n     */\n    const handleClearCanvas = () => {\n      editorStore.clear()\n    }\n\n    /**\n     * 删除\n     */\n    const handelDelete = () => {\n      editorStore.deleteCurPrimitive()\n      message.success('删除成功！')\n    }\n\n    /**\n     * 置顶\n     */\n    const handleUp = () => {\n      editorStore.upCurComponent()\n    }\n\n    /**\n     * 置底\n     */\n    const handleDown = () => {\n      editorStore.downCurComponent()\n    }\n\n    /**\n     * 上移\n     */\n    const handleTop = () => {\n      editorStore.moveCurPrimitiveByIndex(1)\n    }\n\n    /**\n     * 下移\n     */\n    const handleBottom = () => {\n      editorStore.moveCurPrimitiveByIndex(-1)\n    }\n\n    const typeHandler = {\n      复制: handleCopy,\n      粘贴: handlePaste,\n      删除: handelDelete,\n      置顶: handleUp,\n      置底: handleDown,\n      上移: handleTop,\n      下移: handleBottom\n    }\n\n    const typeOperations = computed(() =>\n      curPrimitive.value\n        ? typeHandler\n        : { 粘贴: handlePaste, 清空画布: handleClearCanvas }\n    )\n\n    expose({ show, close })\n\n    return () => (\n      <div\n        v-show={variables.visible}\n        class={styles.contextmenu}\n        style={{ top: `${variables.top}px`, left: `${variables.left}px` }}\n      >\n        <ul onMouseup={handleMouseUp}>\n          {Object.entries(typeOperations.value).map(([key, handler]) => (\n            <li onClick={handler}>{key}</li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n})\n","export default defineComponent({\n  name: 'Grid',\n  render() {\n    return (\n      <svg\n        style={{ position: 'absolute', top: 0, left: 0 }}\n        width='100%'\n        height='100%'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <defs>\n          <pattern\n            id='smallGrid'\n            width='7.236328125'\n            height='7.236328125'\n            patternUnits='userSpaceOnUse'\n          >\n            <path\n              d='M 7.236328125 0 L 0 0 0 7.236328125'\n              fill='none'\n              stroke='rgba(207, 207, 207, 0.3)'\n              stroke-width='1'\n            ></path>\n          </pattern>\n          <pattern\n            id='grid'\n            width='36.181640625'\n            height='36.181640625'\n            patternUnits='userSpaceOnUse'\n          >\n            <rect\n              width='36.181640625'\n              height='36.181640625'\n              fill='url(#smallGrid)'\n            ></rect>\n            <path\n              d='M 36.181640625 0 L 0 0 0 36.181640625'\n              fill='none'\n              stroke='rgba(186, 186, 186, 0.5)'\n              stroke-width='1'\n            ></path>\n          </pattern>\n        </defs>\n        <rect width='100%' height='100%' fill='url(#grid)'></rect>\n      </svg>\n    )\n  }\n})\n","import { useEditorStore } from '@/store/editor/index'\n\nimport BoundBox from './BoundBox/index'\nimport ContextMenu from './ContextMenu/index'\nimport Grid from './Grid/index'\nimport styles from './index.module.scss'\nimport Ruler from './Ruler/index.vue'\nimport { useStyles } from './use-styles'\n\nexport const rulerKey = 'RULER_KEY'\n\nexport default defineComponent({\n  name: 'Editor',\n  components: { Grid, ContextMenu },\n  setup() {\n    const editorStore = useEditorStore()\n    const primitives = editorStore.primitives\n\n    const contextMenuRef = ref<typeof ContextMenu | null>(null)\n\n    const rulerRef = ref<InstanceType<typeof Ruler> | null>(null)\n    provide(rulerKey, rulerRef)\n\n    /**\n     * 按下鼠标左键事件\n     * @param e MouseEvent\n     */\n    const handleMouseDown = (e: MouseEvent) => {\n      editorStore.setClickPrimitiveStatus(false)\n      // e.preventDefault()\n      // e.stopPropagation()\n    }\n\n    /**\n     * 取消当前选中的primitive\n     */\n    const deselectCurPrimitive = (e: MouseEvent) => {\n      if (!editorStore.isClickPrimitive) editorStore.setCurPrimitive(null)\n\n      // 如果不是右键的话就把右键菜单关闭\n      if (e.button != 2) contextMenuRef.value?.close()\n    }\n\n    /**\n     * 开启右键菜单\n     * @param e MouseEvent\n     */\n    const handleShowContextMenu = (e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n      if (!e.target) return\n\n      // 计算菜单相对于编辑器的位移\n      let target = e.target as HTMLElement\n      let top = e.offsetY\n      let left = e.offsetX\n\n      while (target instanceof SVGElement) {\n        target = target.parentNode as HTMLElement\n      }\n\n      while (target.id !== 'editor') {\n        left += target.offsetLeft\n        top += target.offsetTop\n        target = target.parentNode as HTMLElement\n      }\n\n      contextMenuRef.value?.show({ top, left })\n    }\n\n    /**\n     * 关闭右键菜单\n     */\n    const handleCloseContextMenu = () => {\n      contextMenuRef.value?.close()\n    }\n\n    const { getBoundBoxStyle } = useStyles()\n\n    const renderPrimitives = () =>\n      primitives.map((item, index) => (\n        <BoundBox\n          index={index}\n          style={getBoundBoxStyle(item.style)}\n          primitive={item}\n          pStyle={item.style}\n          onCloseContextmenu={handleCloseContextMenu}\n        >\n          {h(resolveComponent(item.cName), {\n            id: 'primitive' + item.id,\n            class: styles.primitive,\n            dataSource: item\n          })}\n        </BoundBox>\n      ))\n\n    return () => (\n      <div\n        id='editor'\n        class={styles.editor}\n        onMousedown={handleMouseDown}\n        onMouseup={deselectCurPrimitive}\n        onContextmenu={handleShowContextMenu}\n      >\n        <Grid />\n        <ContextMenu ref={contextMenuRef} />\n        {renderPrimitives()}\n      </div>\n    )\n  }\n})\n","import { BoxStyle, CSSStyleDeclaration } from '@/primitives/types'\n\nexport const useStyles = () => {\n  /**\n   * 获取包围盒的样式\n   * @param style BoxStyle\n   */\n  const getBoundBoxStyle = (style: BoxStyle) => {\n    const pStyle = {} as CSSStyleDeclaration\n\n    for (const [key, value] of Object.entries(style)) {\n      if (value) pStyle[key] = value + 'px'\n    }\n\n    return pStyle\n  }\n\n  /**\n   * 获取渲染节点的样式\n   * @param style BoxStyle\n   */\n  const getPrimitiveStyle = (style: BoxStyle) => {\n    const pStyle = {} as CSSStyleDeclaration\n\n    for (const [key, value] of Object.entries(style)) {\n      if (value) pStyle[key] = value + 'px'\n    }\n\n    return pStyle\n  }\n\n  return {\n    getBoundBoxStyle,\n    getPrimitiveStyle\n  }\n}\n","import Editor from '@/components/Editor/index'\n\nimport styles from './index.module.scss'\nimport { useContainer } from './use-container'\n\nexport default defineComponent({\n  name: 'Container',\n  components: { Editor },\n  setup() {\n    const { ...restFunc } = useContainer()\n\n    return {\n      ...restFunc\n    }\n  },\n  render() {\n    return (\n      <>\n        <div\n          class={styles.container}\n          onDrop={this.handleDrop}\n          onDragover={this.handleDragOver}\n          onMousedown={this.handleMouseDown}\n          onMouseup={this.handleMouseUp}\n        >\n          <Editor />\n        </div>\n      </>\n    )\n  }\n})\n","import { ceil } from 'lodash'\n\nimport { primitivesList } from '@/primitives/loader'\nimport { BoxStyle } from '@/primitives/types'\nimport { useEditorStore } from '@/store/editor/index'\n\nexport const useContainer = () => {\n  const editorStore = useEditorStore()\n\n  /**\n   * 拖动结束事件\n   * @param e DragEvent\n   */\n  const handleDrop = (e: DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n\n    const name = e.dataTransfer!.getData('name')\n    const editorRef = document.querySelector('#editor')!\n    const editorRefRec = editorRef.getBoundingClientRect()\n    const primitive = new primitivesList[name]()\n    const style: BoxStyle = {\n      top: ceil(e.clientY - editorRefRec.y),\n      left: ceil(e.clientX - editorRefRec.x)\n    }\n\n    primitive.updateStyle(style)\n    editorStore.addPrimitive(primitive)\n\n    // 根据画面比例修改组件样式比例 https://github.com/woai3c/visual-drag-demo/issues/91\n    //   changeComponentSizeWithScale(component)\n\n    //   this.$store.commit('recordSnapshot')\n  }\n\n  const handleDragOver = (e: DragEvent) => {\n    e.preventDefault()\n    e.dataTransfer!.dropEffect = 'copy'\n  }\n\n  const handleMouseDown = (e: DragEvent) => {\n    e.stopPropagation()\n  }\n\n  const handleMouseUp = () => {}\n\n  return {\n    handleDrop,\n    handleDragOver,\n    handleMouseDown,\n    handleMouseUp\n  }\n}\n"],"names":["BoundBox","defineComponent","name","primitive","type","pStyle","index","required","default","emit","editorStore","useEditorStore","curPrimitive","storeToRefs","drawPoints","curRef","ref","cursors","angleToCursor","start","end","cursor","lt","t","rt","r","rb","b","lb","l","width","height","hasT","pointStr","includes","hasB","hasL","hasR","newLeft","newTop","marginLeft","marginTop","key","i","length","angleLimit","lastMatchIndex","angle","result","style","props","startY","e","clientY","startX","clientX","startTop","top","startLeft","left","document","onMounted","isSelected","computed","_a","value","id","renderDrawPoints","Object","keys","map","_createVNode","onMousedown","pType","curX","moveEvent","disY","disX","test","newHeight","newWidth","handleAdjustSize","class","styles","onClick","handleClickBoundBox","slots","call","ContextMenu","expose","message","useMessage","visible","variables","copyData","typeHandler","复制","cloneDeep","粘贴","删除","置顶","置底","上移","下移","清空画布","close","entries","typeOperations","handler","Grid","render","position","xmlns","patternUnits","d","fill","stroke","Editor","components","setup","primitives","contextMenuRef","rulerRef","provide","button","target","offsetY","offsetX","getBoundBoxStyle","getPrimitiveStyle","_slot","item","s","h","resolveComponent","cName","dataSource","prototype","toString","_isVNode","handleMouseDown","onMouseup","deselectCurPrimitive","Container","handleDrop","preventDefault","stopPropagation","dataTransfer","getData","editorRefRec","querySelector","getBoundingClientRect","primitivesList","ceil","y","x","updateStyle","addPrimitive","handleDragOver","dropEffect","handleMouseUp","_Fragment","this"],"mappings":"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"}