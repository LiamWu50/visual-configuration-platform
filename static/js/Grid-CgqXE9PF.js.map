{"version":3,"file":"Grid-CgqXE9PF.js","sources":["../../../node_modules/seemly/es/css/responsive.js","../../../node_modules/vooks/es/use-breakpoints.js","../../../node_modules/naive-ui/es/config-provider/src/config.mjs","../../../node_modules/naive-ui/es/grid/src/Grid.mjs","../../../node_modules/naive-ui/es/_utils/vue/is-node-v-show-false.mjs"],"sourcesContent":["export function parseResponsiveProp(reponsiveProp) {\n    if (typeof reponsiveProp === \"number\") {\n        return {\n            '': reponsiveProp.toString()\n        };\n    }\n    const params = {};\n    reponsiveProp.split(/ +/).forEach((pairLiteral) => {\n        if (pairLiteral === '')\n            return;\n        const [prefix, value] = pairLiteral.split(':');\n        if (value === undefined) {\n            params[''] = prefix;\n        }\n        else {\n            params[prefix] = value;\n        }\n    });\n    return params;\n}\nfunction parseResponsivePropValue(reponsiveProp, activeKeyOrSize) {\n    var _a;\n    if (reponsiveProp === undefined || reponsiveProp === null)\n        return undefined;\n    const classObj = parseResponsiveProp(reponsiveProp);\n    if (activeKeyOrSize === undefined)\n        return classObj[''];\n    if (typeof activeKeyOrSize === 'string') {\n        return (_a = classObj[activeKeyOrSize]) !== null && _a !== void 0 ? _a : classObj[''];\n    }\n    else if (Array.isArray(activeKeyOrSize)) {\n        for (let i = activeKeyOrSize.length - 1; i >= 0; --i) {\n            const key = activeKeyOrSize[i];\n            if (key in classObj)\n                return classObj[key];\n        }\n        return classObj[''];\n    }\n    else {\n        // Here we suppose all the keys are number formatted\n        let activeValue = undefined;\n        let activeKey = -1;\n        Object.keys(classObj).forEach((key) => {\n            const keyAsNum = Number(key);\n            if (!Number.isNaN(keyAsNum) &&\n                activeKeyOrSize >= keyAsNum &&\n                keyAsNum >= activeKey) {\n                activeKey = keyAsNum;\n                activeValue = classObj[key];\n            }\n        });\n        return activeValue;\n    }\n}\nexport { parseResponsivePropValue };\n","/* eslint-disable @typescript-eslint/consistent-type-assertions */\nimport { ref, computed, onBeforeUnmount } from 'vue';\nimport { isBrowser } from './utils';\nexport const defaultBreakpointOptions = {\n    // mobile\n    // 0 ~ 640 doesn't mean it should display well in all the range,\n    // but means you should treat it like a mobile phone.)\n    xs: 0,\n    s: 640,\n    m: 1024,\n    l: 1280,\n    xl: 1536,\n    '2xl': 1920 // normal desktop display\n};\nfunction createMediaQuery(screenWidth) {\n    return `(min-width: ${screenWidth}px)`;\n}\nconst mqlMap = {};\nfunction useBreakpoints(screens = defaultBreakpointOptions) {\n    if (!isBrowser)\n        return computed(() => []);\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (typeof window.matchMedia !== 'function')\n        return computed(() => []);\n    const breakpointStatusRef = ref({});\n    const breakpoints = Object.keys(screens);\n    const updateBreakpoints = (e, breakpointName) => {\n        if (e.matches)\n            breakpointStatusRef.value[breakpointName] = true;\n        else\n            breakpointStatusRef.value[breakpointName] = false;\n    };\n    breakpoints.forEach((key) => {\n        const breakpointValue = screens[key];\n        let mql;\n        let cbs;\n        if (mqlMap[breakpointValue] === undefined) {\n            mql = window.matchMedia(createMediaQuery(breakpointValue));\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            if (mql.addEventListener) {\n                mql.addEventListener('change', (e) => {\n                    cbs.forEach((cb) => {\n                        cb(e, key);\n                    });\n                });\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            }\n            else if (mql.addListener) {\n                mql.addListener((e) => {\n                    cbs.forEach((cb) => {\n                        cb(e, key);\n                    });\n                });\n            }\n            cbs = new Set();\n            mqlMap[breakpointValue] = {\n                mql,\n                cbs\n            };\n        }\n        else {\n            mql = mqlMap[breakpointValue].mql;\n            cbs = mqlMap[breakpointValue].cbs;\n        }\n        cbs.add(updateBreakpoints);\n        if (mql.matches) {\n            cbs.forEach((cb) => {\n                cb(mql, key);\n            });\n        }\n    });\n    onBeforeUnmount(() => {\n        breakpoints.forEach((breakpoint) => {\n            const { cbs } = mqlMap[screens[breakpoint]];\n            if (cbs.has(updateBreakpoints)) {\n                cbs.delete(updateBreakpoints);\n            }\n        });\n    });\n    return computed(() => {\n        const { value } = breakpointStatusRef;\n        return breakpoints.filter((key) => value[key]);\n    });\n}\nexport default useBreakpoints;\n","export const defaultBreakpoints = {\n  xs: 0,\n  // mobile\n  s: 640,\n  // tablet\n  m: 1024,\n  // laptop s\n  l: 1280,\n  // laptop\n  xl: 1536,\n  // laptop l\n  xxl: 1920 // normal desktop display\n};","import { h, defineComponent, computed, provide, toRef, mergeProps, ref, cloneVNode, vShow, onMounted } from 'vue';\nimport { useBreakpoints, useMemo } from 'vooks';\nimport { VResizeObserver } from 'vueuc';\nimport { pxfy, parseResponsivePropValue, beforeNextFrameOnce } from 'seemly';\nimport { defaultBreakpoints } from \"../../config-provider/src/config.mjs\";\nimport { useConfig } from \"../../_mixins/index.mjs\";\nimport { getSlot, flatten, isBrowser, isNodeVShowFalse } from \"../../_utils/index.mjs\";\nimport { defaultSpan, gridInjectionKey } from \"./config.mjs\";\nconst defaultCols = 24;\nconst SSR_ATTR_NAME = '__ssr__';\nexport const gridProps = {\n  layoutShiftDisabled: Boolean,\n  responsive: {\n    type: [String, Boolean],\n    default: 'self'\n  },\n  cols: {\n    type: [Number, String],\n    default: defaultCols\n  },\n  itemResponsive: Boolean,\n  collapsed: Boolean,\n  // may create grid rows < collapsedRows since a item may take all the row\n  collapsedRows: {\n    type: Number,\n    default: 1\n  },\n  itemStyle: [Object, String],\n  xGap: {\n    type: [Number, String],\n    default: 0\n  },\n  yGap: {\n    type: [Number, String],\n    default: 0\n  }\n};\nexport default defineComponent({\n  name: 'Grid',\n  inheritAttrs: false,\n  props: gridProps,\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      mergedBreakpointsRef\n    } = useConfig(props);\n    const numRegex = /^\\d+$/;\n    const widthRef = ref(undefined);\n    const breakpointsRef = useBreakpoints((mergedBreakpointsRef === null || mergedBreakpointsRef === void 0 ? void 0 : mergedBreakpointsRef.value) || defaultBreakpoints);\n    const isResponsiveRef = useMemo(() => {\n      if (props.itemResponsive) return true;\n      if (!numRegex.test(props.cols.toString())) return true;\n      if (!numRegex.test(props.xGap.toString())) return true;\n      if (!numRegex.test(props.yGap.toString())) return true;\n      return false;\n    });\n    const responsiveQueryRef = computed(() => {\n      if (!isResponsiveRef.value) return undefined;\n      return props.responsive === 'self' ? widthRef.value : breakpointsRef.value;\n    });\n    const responsiveColsRef = useMemo(() => {\n      var _a;\n      return (_a = Number(parseResponsivePropValue(props.cols.toString(), responsiveQueryRef.value))) !== null && _a !== void 0 ? _a : defaultCols;\n    });\n    const responsiveXGapRef = useMemo(() => parseResponsivePropValue(props.xGap.toString(), responsiveQueryRef.value));\n    const responsiveYGapRef = useMemo(() => parseResponsivePropValue(props.yGap.toString(), responsiveQueryRef.value));\n    const handleResize = entry => {\n      widthRef.value = entry.contentRect.width;\n    };\n    const handleResizeRaf = entry => {\n      beforeNextFrameOnce(handleResize, entry);\n    };\n    const overflowRef = ref(false);\n    const handleResizeRef = computed(() => {\n      if (props.responsive === 'self') {\n        return handleResizeRaf;\n      }\n      return undefined;\n    });\n    // for SSR, fix bug https://github.com/tusen-ai/naive-ui/issues/2462\n    const isSsrRef = ref(false);\n    const contentElRef = ref();\n    onMounted(() => {\n      const {\n        value: contentEl\n      } = contentElRef;\n      if (contentEl) {\n        if (contentEl.hasAttribute(SSR_ATTR_NAME)) {\n          contentEl.removeAttribute(SSR_ATTR_NAME);\n          isSsrRef.value = true;\n        }\n      }\n    });\n    provide(gridInjectionKey, {\n      layoutShiftDisabledRef: toRef(props, 'layoutShiftDisabled'),\n      isSsrRef,\n      itemStyleRef: toRef(props, 'itemStyle'),\n      xGapRef: responsiveXGapRef,\n      overflowRef\n    });\n    return {\n      isSsr: !isBrowser,\n      contentEl: contentElRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      style: computed(() => {\n        if (props.layoutShiftDisabled) {\n          return {\n            width: '100%',\n            display: 'grid',\n            gridTemplateColumns: `repeat(${props.cols}, minmax(0, 1fr))`,\n            columnGap: pxfy(props.xGap),\n            rowGap: pxfy(props.yGap)\n          };\n        }\n        return {\n          width: '100%',\n          display: 'grid',\n          gridTemplateColumns: `repeat(${responsiveColsRef.value}, minmax(0, 1fr))`,\n          columnGap: pxfy(responsiveXGapRef.value),\n          rowGap: pxfy(responsiveYGapRef.value)\n        };\n      }),\n      isResponsive: isResponsiveRef,\n      responsiveQuery: responsiveQueryRef,\n      responsiveCols: responsiveColsRef,\n      handleResize: handleResizeRef,\n      overflow: overflowRef\n    };\n  },\n  render() {\n    if (this.layoutShiftDisabled) {\n      return h('div', mergeProps({\n        ref: 'contentEl',\n        class: `${this.mergedClsPrefix}-grid`,\n        style: this.style\n      }, this.$attrs), this.$slots);\n    }\n    const renderContent = () => {\n      var _a, _b, _c, _d, _e, _f, _g;\n      this.overflow = false;\n      // render will be called twice when mounted, I can't figure out why\n      // 2 jobs will be pushed into job queues with same id, and then be flushed\n      const rawChildren = flatten(getSlot(this));\n      const childrenAndRawSpan = [];\n      const {\n        collapsed,\n        collapsedRows,\n        responsiveCols,\n        responsiveQuery\n      } = this;\n      rawChildren.forEach(child => {\n        var _a, _b, _c, _d, _e;\n        if (((_a = child === null || child === void 0 ? void 0 : child.type) === null || _a === void 0 ? void 0 : _a.__GRID_ITEM__) !== true) return;\n        if (isNodeVShowFalse(child)) {\n          const clonedNode = cloneVNode(child);\n          if (clonedNode.props) {\n            clonedNode.props.privateShow = false;\n          } else {\n            clonedNode.props = {\n              privateShow: false\n            };\n          }\n          childrenAndRawSpan.push({\n            child: clonedNode,\n            rawChildSpan: 0\n          });\n          return;\n        }\n        // We don't want v-show to control display, so we need to stripe it\n        // here, nor it may mess child's style\n        child.dirs = ((_b = child.dirs) === null || _b === void 0 ? void 0 : _b.filter(({\n          dir\n        }) => dir !== vShow)) || null;\n        if (((_c = child.dirs) === null || _c === void 0 ? void 0 : _c.length) === 0) {\n          child.dirs = null;\n        }\n        const clonedChild = cloneVNode(child);\n        const rawChildSpan = Number((_e = parseResponsivePropValue((_d = clonedChild.props) === null || _d === void 0 ? void 0 : _d.span, responsiveQuery)) !== null && _e !== void 0 ? _e : defaultSpan);\n        if (rawChildSpan === 0) return;\n        childrenAndRawSpan.push({\n          child: clonedChild,\n          rawChildSpan\n        });\n      });\n      let suffixSpan = 0;\n      const maybeSuffixNode = (_a = childrenAndRawSpan[childrenAndRawSpan.length - 1]) === null || _a === void 0 ? void 0 : _a.child;\n      if (maybeSuffixNode === null || maybeSuffixNode === void 0 ? void 0 : maybeSuffixNode.props) {\n        const suffixPropValue = (_b = maybeSuffixNode.props) === null || _b === void 0 ? void 0 : _b.suffix;\n        if (suffixPropValue !== undefined && suffixPropValue !== false) {\n          suffixSpan = Number((_d = parseResponsivePropValue((_c = maybeSuffixNode.props) === null || _c === void 0 ? void 0 : _c.span, responsiveQuery)) !== null && _d !== void 0 ? _d : defaultSpan);\n          maybeSuffixNode.props.privateSpan = suffixSpan;\n          maybeSuffixNode.props.privateColStart = responsiveCols + 1 - suffixSpan;\n          maybeSuffixNode.props.privateShow = (_e = maybeSuffixNode.props.privateShow) !== null && _e !== void 0 ? _e : true;\n        }\n      }\n      let spanCounter = 0;\n      let done = false;\n      for (const {\n        child,\n        rawChildSpan\n      } of childrenAndRawSpan) {\n        if (done) {\n          this.overflow = true;\n        }\n        if (!done) {\n          const childOffset = Number((_g = parseResponsivePropValue((_f = child.props) === null || _f === void 0 ? void 0 : _f.offset, responsiveQuery)) !== null && _g !== void 0 ? _g : 0);\n          // it could be 0 sometimes (v-show = false)\n          const childSpan = Math.min(rawChildSpan + childOffset, responsiveCols);\n          if (!child.props) {\n            child.props = {\n              privateSpan: childSpan,\n              privateOffset: childOffset\n            };\n          } else {\n            child.props.privateSpan = childSpan;\n            child.props.privateOffset = childOffset;\n          }\n          if (collapsed) {\n            const remainder = spanCounter % responsiveCols;\n            if (childSpan + remainder > responsiveCols) {\n              spanCounter += responsiveCols - remainder;\n            }\n            if (childSpan + spanCounter + suffixSpan > collapsedRows * responsiveCols) {\n              done = true;\n            } else {\n              spanCounter += childSpan;\n            }\n          }\n        }\n        if (done) {\n          if (child.props) {\n            // suffix node's privateShow may be true\n            if (child.props.privateShow !== true) {\n              child.props.privateShow = false;\n            }\n          } else {\n            child.props = {\n              privateShow: false\n            };\n          }\n        }\n      }\n      return h('div', mergeProps({\n        ref: 'contentEl',\n        class: `${this.mergedClsPrefix}-grid`,\n        style: this.style,\n        [SSR_ATTR_NAME]: this.isSsr || undefined\n      }, this.$attrs), childrenAndRawSpan.map(({\n        child\n      }) => child));\n    };\n    return this.isResponsive && this.responsive === 'self' ? h(VResizeObserver, {\n      onResize: this.handleResize\n    }, {\n      default: renderContent\n    }) : renderContent();\n  }\n});","import { vShow } from 'vue';\nexport function isNodeVShowFalse(vNode) {\n  var _a;\n  const showDir = (_a = vNode.dirs) === null || _a === void 0 ? void 0 : _a.find(({\n    dir\n  }) => dir === vShow);\n  return !!(showDir && showDir.value === false);\n}"],"names":["parseResponsivePropValue","reponsiveProp","activeKeyOrSize","_a","classObj","toString","params","split","forEach","pairLiteral","prefix","value","parseResponsiveProp","Array","isArray","i","length","key","activeValue","activeKey","Object","keys","keyAsNum","Number","isNaN","defaultBreakpointOptions","xs","s","m","l","xl","mqlMap","defaultBreakpoints","xxl","SSR_ATTR_NAME","__unplugin_components_0","defineComponent","name","inheritAttrs","props","layoutShiftDisabled","Boolean","responsive","type","String","default","cols","itemResponsive","collapsed","collapsedRows","itemStyle","xGap","yGap","setup","mergedClsPrefixRef","mergedBreakpointsRef","useConfig","numRegex","widthRef","ref","breakpointsRef","screens","isBrowser","computed","window","matchMedia","breakpointStatusRef","breakpoints","updateBreakpoints","e","breakpointName","matches","breakpointValue","mql","cbs","addEventListener","cb","addListener","Set","add","onBeforeUnmount","breakpoint","has","delete","filter","useBreakpoints","isResponsiveRef","useMemo","test","responsiveQueryRef","responsiveColsRef","responsiveXGapRef","responsiveYGapRef","handleResize","entry","contentRect","width","handleResizeRaf","beforeNextFrameOnce","overflowRef","handleResizeRef","isSsrRef","contentElRef","onMounted","contentEl","hasAttribute","removeAttribute","provide","gridInjectionKey","layoutShiftDisabledRef","toRef","itemStyleRef","xGapRef","isSsr","mergedClsPrefix","style","display","gridTemplateColumns","columnGap","pxfy","rowGap","isResponsive","responsiveQuery","responsiveCols","overflow","render","this","h","mergeProps","class","$attrs","$slots","renderContent","_b","_c","_d","_e","_f","_g","rawChildren","flatten","getSlot","childrenAndRawSpan","child","__GRID_ITEM__","vNode","showDir","dirs","find","dir","vShow","isNodeVShowFalse","clonedNode","cloneVNode","privateShow","push","rawChildSpan","clonedChild","span","defaultSpan","suffixSpan","maybeSuffixNode","suffixPropValue","suffix","privateSpan","privateColStart","spanCounter","done","childOffset","offset","childSpan","Math","min","privateOffset","remainder","map","VResizeObserver","onResize"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}