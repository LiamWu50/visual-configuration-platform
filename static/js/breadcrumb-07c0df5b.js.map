{"version":3,"file":"breadcrumb-07c0df5b.js","sources":["../../../node_modules/naive-ui/es/breadcrumb/src/styles/index.cssr.js","../../../node_modules/naive-ui/es/breadcrumb/src/Breadcrumb.js","../../../node_modules/naive-ui/es/breadcrumb/src/BreadcrumbItem.js","../../../node_modules/naive-ui/es/_utils/composable/use-browser-location.js","../../../src/views/design-space/layout/breadcrumb.tsx"],"sourcesContent":["import { c, cB, cE, cM } from '../../../_utils/cssr';\n// vars:\n// --n-font-size\n// --n-bezier\n// --n-item-text-color\n// --n-item-text-color-hover\n// --n-item-text-color-pressed\n// --n-item-text-color-active\n// --n-separator-color\n// --n-font-weight-active\n// --n-item-border-radius\n// --n-item-color-hover\n// --n-item-color-active\n// --n-item-line-height\nexport default cB('breadcrumb', `\n white-space: nowrap;\n cursor: default;\n line-height: var(--n-item-line-height);\n`, [c('ul', `\n list-style: none;\n padding: 0;\n margin: 0;\n `), c('a', `\n color: inherit;\n text-decoration: inherit;\n `), cB('breadcrumb-item', `\n font-size: var(--n-font-size);\n transition: color .3s var(--n-bezier);\n display: inline-flex;\n align-items: center;\n `, [cB('icon', `\n font-size: 18px;\n vertical-align: -.2em;\n transition: color .3s var(--n-bezier);\n color: var(--n-item-text-color);\n `), c('&:not(:last-child)', [cM('clickable', [cE('link', `\n cursor: pointer;\n `, [c('&:hover', `\n background-color: var(--n-item-color-hover);\n `), c('&:active', `\n background-color: var(--n-item-color-pressed); \n `)])])]), cE('link', `\n padding: 4px;\n border-radius: var(--n-item-border-radius);\n transition:\n background-color .3s var(--n-bezier),\n color .3s var(--n-bezier);\n color: var(--n-item-text-color);\n position: relative;\n `, [c('&:hover', `\n color: var(--n-item-text-color-hover);\n `, [cB('icon', `\n color: var(--n-item-text-color-hover);\n `)]), c('&:active', `\n color: var(--n-item-text-color-pressed);\n `, [cB('icon', `\n color: var(--n-item-text-color-pressed);\n `)])]), cE('separator', `\n margin: 0 8px;\n color: var(--n-separator-color);\n transition: color .3s var(--n-bezier);\n user-select: none;\n -webkit-user-select: none;\n `), c('&:last-child', [cE('link', `\n font-weight: var(--n-font-weight-active);\n cursor: unset;\n color: var(--n-item-text-color-active);\n `, [cB('icon', `\n color: var(--n-item-text-color-active);\n `)]), cE('separator', `\n display: none;\n `)])])]);","import { h, computed, defineComponent, provide, toRef } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { breadcrumbLight } from '../styles';\nimport style from './styles/index.cssr';\nimport { createInjectionKey } from '../../_utils';\nexport const breadcrumbInjectionKey = createInjectionKey('n-breadcrumb');\nexport const breadcrumbProps = Object.assign(Object.assign({}, useTheme.props), { separator: {\n        type: String,\n        default: '/'\n    } });\nexport default defineComponent({\n    name: 'Breadcrumb',\n    props: breadcrumbProps,\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Breadcrumb', '-breadcrumb', style, breadcrumbLight, props, mergedClsPrefixRef);\n        provide(breadcrumbInjectionKey, {\n            separatorRef: toRef(props, 'separator'),\n            mergedClsPrefixRef\n        });\n        const cssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut }, self: { separatorColor, itemTextColor, itemTextColorHover, itemTextColorPressed, itemTextColorActive, fontSize, fontWeightActive, itemBorderRadius, itemColorHover, itemColorPressed, itemLineHeight } } = themeRef.value;\n            return {\n                '--n-font-size': fontSize,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-item-text-color': itemTextColor,\n                '--n-item-text-color-hover': itemTextColorHover,\n                '--n-item-text-color-pressed': itemTextColorPressed,\n                '--n-item-text-color-active': itemTextColorActive,\n                '--n-separator-color': separatorColor,\n                '--n-item-color-hover': itemColorHover,\n                '--n-item-color-pressed': itemColorPressed,\n                '--n-item-border-radius': itemBorderRadius,\n                '--n-font-weight-active': fontWeightActive,\n                '--n-item-line-height': itemLineHeight\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('breadcrumb', undefined, cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        var _a;\n        (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n        return (h(\"nav\", { class: [`${this.mergedClsPrefix}-breadcrumb`, this.themeClass], style: this.cssVars, \"aria-label\": \"Breadcrumb\" },\n            h(\"ul\", null, this.$slots)));\n    }\n});\n","import { h, defineComponent, inject, computed } from 'vue';\nimport { resolveSlot, warn } from '../../_utils';\nimport { useBrowserLocation } from '../../_utils/composable/use-browser-location';\nimport { breadcrumbInjectionKey } from './Breadcrumb';\nexport const breadcrumbItemProps = {\n    separator: String,\n    href: String,\n    clickable: {\n        type: Boolean,\n        default: true\n    },\n    onClick: Function\n};\nexport default defineComponent({\n    name: 'BreadcrumbItem',\n    props: breadcrumbItemProps,\n    setup(props, { slots }) {\n        const NBreadcrumb = inject(breadcrumbInjectionKey, null);\n        if (!NBreadcrumb) {\n            if (process.env.NODE_ENV !== 'production') {\n                warn('breadcrumb', '`n-breadcrumb-item` must be placed inside `n-breadcrumb`.');\n            }\n            return () => null;\n        }\n        const { separatorRef, mergedClsPrefixRef } = NBreadcrumb;\n        const browserLocationRef = useBrowserLocation();\n        const htmlTagRef = computed(() => (props.href ? 'a' : 'span'));\n        const ariaCurrentRef = computed(() => browserLocationRef.value.href === props.href ? 'location' : null);\n        return () => {\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            return (h(\"li\", { class: [\n                    `${mergedClsPrefix}-breadcrumb-item`,\n                    props.clickable && `${mergedClsPrefix}-breadcrumb-item--clickable`\n                ] },\n                h(htmlTagRef.value, {\n                    class: `${mergedClsPrefix}-breadcrumb-item__link`,\n                    'aria-current': ariaCurrentRef.value,\n                    href: props.href,\n                    onClick: props.onClick\n                }, slots),\n                h(\"span\", { class: `${mergedClsPrefix}-breadcrumb-item__separator`, \"aria-hidden\": \"true\" }, resolveSlot(slots.separator, () => {\n                    var _a;\n                    return [\n                        (_a = props.separator) !== null && _a !== void 0 ? _a : separatorRef.value\n                    ];\n                }))));\n        };\n    }\n});\n","import { onMounted, onUnmounted, ref } from 'vue';\nimport { isBrowser } from '../env/is-browser';\nexport const useBrowserLocation = (customWindow = isBrowser ? window : null) => {\n    const getWindowLocation = () => {\n        const { hash, host, hostname, href, origin, pathname, port, protocol, search } = (customWindow === null || customWindow === void 0 ? void 0 : customWindow.location) || {};\n        return {\n            hash,\n            host,\n            hostname,\n            href,\n            origin,\n            pathname,\n            port,\n            protocol,\n            search\n        };\n    };\n    const updateLocation = () => {\n        locationState.value = getWindowLocation();\n    };\n    const locationState = ref(getWindowLocation());\n    onMounted(() => {\n        if (customWindow) {\n            customWindow.addEventListener('popstate', updateLocation);\n            customWindow.addEventListener('hashchange', updateLocation);\n        }\n    });\n    onUnmounted(() => {\n        if (customWindow) {\n            customWindow.removeEventListener('popstate', updateLocation);\n            customWindow.removeEventListener('hashchange', updateLocation);\n        }\n    });\n    return locationState;\n};\n","import { NBreadcrumb, NBreadcrumbItem, NDropdown } from 'naive-ui'\nimport { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'Breadcrumb',\n  setup() {\n    return {\n      options: [\n        {\n          label: '操作 1',\n          key: 1\n        },\n        {\n          label: '操作 2',\n          key: 2\n        }\n      ]\n    }\n  },\n  render() {\n    const triggerStyle = {\n      color: 'hsla(var(--theme-color),0.9)',\n      fontWeight: 'bold'\n    } as CSSProperties\n\n    return (\n      <NBreadcrumb style='marginLeft: 12px'>\n        <NBreadcrumbItem>草稿箱</NBreadcrumbItem>\n        <NBreadcrumbItem>\n          <NDropdown options={this.options}>\n            <div style={triggerStyle}>测试大屏可视化系统</div>\n          </NDropdown>\n        </NBreadcrumbItem>\n      </NBreadcrumb>\n    )\n  }\n})\n"],"names":["style","cB","c","cM","cE","breadcrumbInjectionKey","createInjectionKey","NBreadcrumb","defineComponent","name","props","Object","assign","useTheme","separator","type","String","default","setup","mergedClsPrefixRef","inlineThemeDisabled","useConfig","themeRef","breadcrumbLight","provide","separatorRef","toRef","cssVarsRef","computed","common","cubicBezierEaseInOut","self","separatorColor","itemTextColor","itemTextColorHover","itemTextColorPressed","itemTextColorActive","fontSize","fontWeightActive","itemBorderRadius","itemColorHover","itemColorPressed","itemLineHeight","value","themeClassHandle","useThemeClass","mergedClsPrefix","cssVars","themeClass","onRender","render","_a","this","call","h","class","$slots","NBreadcrumbItem","href","clickable","Boolean","onClick","Function","slots","inject","warn","browserLocationRef","customWindow","isBrowser","window","getWindowLocation","hash","host","hostname","origin","pathname","port","protocol","search","location","updateLocation","locationState","ref","onMounted","addEventListener","onUnmounted","removeEventListener","useBrowserLocation","htmlTagRef","ariaCurrentRef","resolveSlot","Breadcrumb","options","label","key","triggerStyle","color","fontWeight","_createTextVNode"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}