{"version":3,"file":"Dropdown-d7490a32.js","sources":["../../../node_modules/naive-ui/es/_utils/vue/create-ref-setter.js","../../../node_modules/naive-ui/es/dropdown/src/DropdownDivider.js","../../../node_modules/naive-ui/es/dropdown/src/context.js","../../../node_modules/naive-ui/es/dropdown/src/utils.js","../../../node_modules/naive-ui/es/dropdown/src/DropdownOption.js","../../../node_modules/naive-ui/es/_utils/composable/use-deferred-true.js","../../../node_modules/naive-ui/es/dropdown/src/DropdownGroupHeader.js","../../../node_modules/naive-ui/es/dropdown/src/DropdownGroup.js","../../../node_modules/naive-ui/es/dropdown/src/DropdownRenderOption.js","../../../node_modules/naive-ui/es/dropdown/src/DropdownMenu.js","../../../node_modules/naive-ui/es/dropdown/src/styles/index.cssr.js","../../../node_modules/naive-ui/es/dropdown/src/Dropdown.js","../../../node_modules/vooks/es/use-keyboard.js"],"sourcesContent":["export function createRefSetter(ref) {\n    return (inst) => {\n        if (inst) {\n            ref.value = inst.$el;\n        }\n        else {\n            ref.value = null;\n        }\n    };\n}\n","import { h, defineComponent } from 'vue';\nexport default defineComponent({\n    name: 'DropdownDivider',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        }\n    },\n    render() {\n        return h(\"div\", { class: `${this.clsPrefix}-dropdown-divider` });\n    }\n});\n","import { createInjectionKey } from '../../_utils';\nexport const dropdownMenuInjectionKey = createInjectionKey('n-dropdown-menu');\nexport const dropdownInjectionKey = createInjectionKey('n-dropdown');\nexport const dropdownOptionInjectionKey = createInjectionKey('n-dropdown-option');\n","export function isSubmenuNode(rawNode, childrenField) {\n    return (rawNode.type === 'submenu' ||\n        (rawNode.type === undefined && rawNode[childrenField] !== undefined));\n}\nexport function isGroupNode(rawNode) {\n    return rawNode.type === 'group';\n}\nexport function isDividerNode(rawNode) {\n    return rawNode.type === 'divider';\n}\nexport function isRenderNode(rawNode) {\n    return rawNode.type === 'render';\n}\n","import { h, computed, inject, ref, Transition, defineComponent, provide, mergeProps } from 'vue';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { useMemo } from 'vooks';\nimport { ChevronRightIcon } from '../../_internal/icons';\nimport { render, useDeferredTrue } from '../../_utils';\nimport { NIcon } from '../../icon';\n// eslint-disable-next-line import/no-cycle\nimport NDropdownMenu from './DropdownMenu';\nimport { dropdownMenuInjectionKey, dropdownInjectionKey, dropdownOptionInjectionKey } from './context';\nimport { popoverBodyInjectionKey } from '../../popover/src/interface';\nimport { isSubmenuNode } from './utils';\nimport { happensIn } from 'seemly';\nexport default defineComponent({\n    name: 'DropdownOption',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        tmNode: {\n            type: Object,\n            required: true\n        },\n        parentKey: {\n            type: [String, Number],\n            default: null\n        },\n        placement: {\n            type: String,\n            default: 'right-start'\n        },\n        props: Object,\n        scrollable: Boolean\n    },\n    setup(props) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NDropdown = inject(dropdownInjectionKey);\n        const { hoverKeyRef, keyboardKeyRef, lastToggledSubmenuKeyRef, pendingKeyPathRef, activeKeyPathRef, animatedRef, mergedShowRef, renderLabelRef, renderIconRef, labelFieldRef, childrenFieldRef, renderOptionRef, nodePropsRef, menuPropsRef } = NDropdown;\n        const NDropdownOption = inject(dropdownOptionInjectionKey, null);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NDropdownMenu = inject(dropdownMenuInjectionKey);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NPopoverBody = inject(popoverBodyInjectionKey);\n        const rawNodeRef = computed(() => props.tmNode.rawNode);\n        const hasSubmenuRef = computed(() => {\n            const { value: childrenField } = childrenFieldRef;\n            return isSubmenuNode(props.tmNode.rawNode, childrenField);\n        });\n        const mergedDisabledRef = computed(() => {\n            const { disabled } = props.tmNode;\n            return disabled;\n        });\n        const showSubmenuRef = computed(() => {\n            if (!hasSubmenuRef.value)\n                return false;\n            const { key, disabled } = props.tmNode;\n            if (disabled)\n                return false;\n            const { value: hoverKey } = hoverKeyRef;\n            const { value: keyboardKey } = keyboardKeyRef;\n            const { value: lastToggledSubmenuKey } = lastToggledSubmenuKeyRef;\n            const { value: pendingKeyPath } = pendingKeyPathRef;\n            if (hoverKey !== null)\n                return pendingKeyPath.includes(key);\n            if (keyboardKey !== null) {\n                return (pendingKeyPath.includes(key) &&\n                    pendingKeyPath[pendingKeyPath.length - 1] !== key);\n            }\n            if (lastToggledSubmenuKey !== null)\n                return pendingKeyPath.includes(key);\n            return false;\n        });\n        const shouldDelayRef = computed(() => {\n            return keyboardKeyRef.value === null && !animatedRef.value;\n        });\n        const deferredShowSubmenuRef = useDeferredTrue(showSubmenuRef, 300, shouldDelayRef);\n        const parentEnteringSubmenuRef = computed(() => {\n            return !!(NDropdownOption === null || NDropdownOption === void 0 ? void 0 : NDropdownOption.enteringSubmenuRef.value);\n        });\n        const enteringSubmenuRef = ref(false);\n        provide(dropdownOptionInjectionKey, {\n            enteringSubmenuRef\n        });\n        // methods\n        function handleSubmenuBeforeEnter() {\n            enteringSubmenuRef.value = true;\n        }\n        function handleSubmenuAfterEnter() {\n            enteringSubmenuRef.value = false;\n        }\n        function handleMouseEnter() {\n            const { parentKey, tmNode } = props;\n            if (tmNode.disabled)\n                return;\n            if (!mergedShowRef.value)\n                return;\n            lastToggledSubmenuKeyRef.value = parentKey;\n            keyboardKeyRef.value = null;\n            hoverKeyRef.value = tmNode.key;\n        }\n        function handleMouseMove() {\n            const { tmNode } = props;\n            if (tmNode.disabled)\n                return;\n            if (!mergedShowRef.value)\n                return;\n            if (hoverKeyRef.value === tmNode.key)\n                return;\n            handleMouseEnter();\n        }\n        function handleMouseLeave(e) {\n            if (props.tmNode.disabled)\n                return;\n            if (!mergedShowRef.value)\n                return;\n            const { relatedTarget } = e;\n            if (relatedTarget &&\n                !happensIn({ target: relatedTarget }, 'dropdownOption') &&\n                !happensIn({ target: relatedTarget }, 'scrollbarRail')) {\n                hoverKeyRef.value = null;\n            }\n        }\n        function handleClick() {\n            const { value: hasSubmenu } = hasSubmenuRef;\n            const { tmNode } = props;\n            if (!mergedShowRef.value)\n                return;\n            if (!hasSubmenu && !tmNode.disabled) {\n                NDropdown.doSelect(tmNode.key, tmNode.rawNode);\n                NDropdown.doUpdateShow(false);\n            }\n        }\n        return {\n            labelField: labelFieldRef,\n            renderLabel: renderLabelRef,\n            renderIcon: renderIconRef,\n            siblingHasIcon: NDropdownMenu.showIconRef,\n            siblingHasSubmenu: NDropdownMenu.hasSubmenuRef,\n            menuProps: menuPropsRef,\n            popoverBody: NPopoverBody,\n            animated: animatedRef,\n            mergedShowSubmenu: computed(() => {\n                return deferredShowSubmenuRef.value && !parentEnteringSubmenuRef.value;\n            }),\n            rawNode: rawNodeRef,\n            hasSubmenu: hasSubmenuRef,\n            pending: useMemo(() => {\n                const { value: pendingKeyPath } = pendingKeyPathRef;\n                const { key } = props.tmNode;\n                return pendingKeyPath.includes(key);\n            }),\n            childActive: useMemo(() => {\n                const { value: activeKeyPath } = activeKeyPathRef;\n                const { key } = props.tmNode;\n                const index = activeKeyPath.findIndex((k) => key === k);\n                if (index === -1)\n                    return false;\n                return index < activeKeyPath.length - 1;\n            }),\n            active: useMemo(() => {\n                const { value: activeKeyPath } = activeKeyPathRef;\n                const { key } = props.tmNode;\n                const index = activeKeyPath.findIndex((k) => key === k);\n                if (index === -1)\n                    return false;\n                return index === activeKeyPath.length - 1;\n            }),\n            mergedDisabled: mergedDisabledRef,\n            renderOption: renderOptionRef,\n            nodeProps: nodePropsRef,\n            handleClick,\n            handleMouseMove,\n            handleMouseEnter,\n            handleMouseLeave,\n            handleSubmenuBeforeEnter,\n            handleSubmenuAfterEnter\n        };\n    },\n    render() {\n        var _a, _b;\n        const { animated, rawNode, mergedShowSubmenu, clsPrefix, siblingHasIcon, siblingHasSubmenu, renderLabel, renderIcon, renderOption, nodeProps, props, scrollable } = this;\n        let submenuVNode = null;\n        if (mergedShowSubmenu) {\n            const submenuNodeProps = (_a = this.menuProps) === null || _a === void 0 ? void 0 : _a.call(this, rawNode, \n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            rawNode.children);\n            submenuVNode = (h(NDropdownMenu, Object.assign({}, submenuNodeProps, { clsPrefix: clsPrefix, scrollable: this.scrollable, tmNodes: this.tmNode.children, parentKey: this.tmNode.key })));\n        }\n        const builtinProps = {\n            class: [\n                `${clsPrefix}-dropdown-option-body`,\n                this.pending && `${clsPrefix}-dropdown-option-body--pending`,\n                this.active && `${clsPrefix}-dropdown-option-body--active`,\n                this.childActive && `${clsPrefix}-dropdown-option-body--child-active`,\n                this.mergedDisabled && `${clsPrefix}-dropdown-option-body--disabled`\n            ],\n            onMousemove: this.handleMouseMove,\n            onMouseenter: this.handleMouseEnter,\n            onMouseleave: this.handleMouseLeave,\n            onClick: this.handleClick\n        };\n        const optionNodeProps = nodeProps === null || nodeProps === void 0 ? void 0 : nodeProps(rawNode);\n        const node = (h(\"div\", Object.assign({ class: [`${clsPrefix}-dropdown-option`, optionNodeProps === null || optionNodeProps === void 0 ? void 0 : optionNodeProps.class], \"data-dropdown-option\": true }, optionNodeProps),\n            h('div', mergeProps(builtinProps, props), [\n                h(\"div\", { class: [\n                        `${clsPrefix}-dropdown-option-body__prefix`,\n                        siblingHasIcon &&\n                            `${clsPrefix}-dropdown-option-body__prefix--show-icon`\n                    ] }, [renderIcon ? renderIcon(rawNode) : render(rawNode.icon)]),\n                h(\"div\", { \"data-dropdown-option\": true, class: `${clsPrefix}-dropdown-option-body__label` }, renderLabel\n                    ? renderLabel(rawNode)\n                    : render((_b = rawNode[this.labelField]) !== null && _b !== void 0 ? _b : rawNode.title)),\n                h(\"div\", { \"data-dropdown-option\": true, class: [\n                        `${clsPrefix}-dropdown-option-body__suffix`,\n                        siblingHasSubmenu &&\n                            `${clsPrefix}-dropdown-option-body__suffix--has-submenu`\n                    ] }, this.hasSubmenu ? (h(NIcon, null, {\n                    default: () => h(ChevronRightIcon, null)\n                })) : null)\n            ]),\n            this.hasSubmenu ? (h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(\"div\", { class: `${clsPrefix}-dropdown-offset-container` },\n                            h(VFollower, { show: this.mergedShowSubmenu, placement: this.placement, to: scrollable\n                                    ? this.popoverBody || undefined\n                                    : undefined, teleportDisabled: !scrollable }, {\n                                default: () => {\n                                    return (h(\"div\", { class: `${clsPrefix}-dropdown-menu-wrapper` }, animated ? (h(Transition, { onBeforeEnter: this.handleSubmenuBeforeEnter, onAfterEnter: this.handleSubmenuAfterEnter, name: \"fade-in-scale-up-transition\", appear: true }, {\n                                        default: () => submenuVNode\n                                    })) : (submenuVNode)));\n                                }\n                            })))\n                    })\n                ]\n            })) : null));\n        if (renderOption) {\n            return renderOption({ node, option: rawNode });\n        }\n        return node;\n    }\n});\n","import { ref, watch } from 'vue';\nexport function useDeferredTrue(valueRef, delay, shouldDelayRef) {\n    if (!delay)\n        return valueRef;\n    const delayedRef = ref(valueRef.value);\n    let timerId = null;\n    watch(valueRef, (value) => {\n        if (timerId !== null)\n            window.clearTimeout(timerId);\n        if (value === true) {\n            if (shouldDelayRef && !shouldDelayRef.value) {\n                delayedRef.value = true;\n            }\n            else {\n                timerId = window.setTimeout(() => {\n                    delayedRef.value = true;\n                }, delay);\n            }\n        }\n        else {\n            delayedRef.value = false;\n        }\n    });\n    return delayedRef;\n}\n","import { defineComponent, h, inject } from 'vue';\nimport { render } from '../../_utils';\nimport { dropdownInjectionKey, dropdownMenuInjectionKey } from './context';\nexport default defineComponent({\n    name: 'DropdownGroupHeader',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        tmNode: {\n            type: Object,\n            required: true\n        }\n    },\n    setup() {\n        const { showIconRef, hasSubmenuRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(dropdownMenuInjectionKey);\n        const { renderLabelRef, labelFieldRef, nodePropsRef, renderOptionRef } = \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        inject(dropdownInjectionKey);\n        return {\n            labelField: labelFieldRef,\n            showIcon: showIconRef,\n            hasSubmenu: hasSubmenuRef,\n            renderLabel: renderLabelRef,\n            nodeProps: nodePropsRef,\n            renderOption: renderOptionRef\n        };\n    },\n    render() {\n        var _a;\n        const { clsPrefix, hasSubmenu, showIcon, nodeProps, renderLabel, renderOption } = this;\n        const { rawNode } = this.tmNode;\n        const node = (h(\"div\", Object.assign({ class: `${clsPrefix}-dropdown-option` }, nodeProps === null || nodeProps === void 0 ? void 0 : nodeProps(rawNode)),\n            h(\"div\", { class: `${clsPrefix}-dropdown-option-body ${clsPrefix}-dropdown-option-body--group` },\n                h(\"div\", { \"data-dropdown-option\": true, class: [\n                        `${clsPrefix}-dropdown-option-body__prefix`,\n                        showIcon && `${clsPrefix}-dropdown-option-body__prefix--show-icon`\n                    ] }, render(rawNode.icon)),\n                h(\"div\", { class: `${clsPrefix}-dropdown-option-body__label`, \"data-dropdown-option\": true }, renderLabel\n                    ? renderLabel(rawNode)\n                    : render((_a = rawNode.title) !== null && _a !== void 0 ? _a : rawNode[this.labelField])),\n                h(\"div\", { class: [\n                        `${clsPrefix}-dropdown-option-body__suffix`,\n                        hasSubmenu &&\n                            `${clsPrefix}-dropdown-option-body__suffix--has-submenu`\n                    ], \"data-dropdown-option\": true }))));\n        if (renderOption) {\n            return renderOption({ node, option: rawNode });\n        }\n        return node;\n    }\n});\n","import { defineComponent, Fragment, h } from 'vue';\nimport { warn } from '../../_utils';\n// eslint-disable-next-line import/no-cycle\nimport NDropdownOption from './DropdownOption';\nimport NDropdownDivider from './DropdownDivider';\nimport NDropdownGroupHeader from './DropdownGroupHeader';\nimport { isDividerNode } from './utils';\nexport default defineComponent({\n    name: 'NDropdownGroup',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        tmNode: {\n            type: Object,\n            required: true\n        },\n        parentKey: {\n            type: [String, Number],\n            default: null\n        }\n    },\n    render() {\n        const { tmNode, parentKey, clsPrefix } = this;\n        const { children } = tmNode;\n        return (h(Fragment, null,\n            h(NDropdownGroupHeader, { clsPrefix: clsPrefix, tmNode: tmNode, key: tmNode.key }), children === null || children === void 0 ? void 0 :\n            children.map((child) => {\n                const { rawNode } = child;\n                if (rawNode.show === false)\n                    return null;\n                if (isDividerNode(rawNode)) {\n                    return h(NDropdownDivider, {\n                        clsPrefix,\n                        key: child.key\n                    });\n                }\n                if (child.isGroup) {\n                    warn('dropdown', '`group` node is not allowed to be put in `group` node.');\n                    return null;\n                }\n                return (h(NDropdownOption, { clsPrefix: clsPrefix, tmNode: child, parentKey: parentKey, key: child.key }));\n            })));\n    }\n});\n","import { h, defineComponent } from 'vue';\nexport default defineComponent({\n    name: 'DropdownRenderOption',\n    props: {\n        tmNode: {\n            type: Object,\n            required: true\n        }\n    },\n    render() {\n        const { rawNode: { render, props } } = this.tmNode;\n        return h('div', props, [render === null || render === void 0 ? void 0 : render()]);\n    }\n});\n","import { computed, defineComponent, h, inject, provide, ref } from 'vue';\nimport { renderArrow } from '../../popover/src/PopoverBody';\nimport { NxScrollbar } from '../../_internal/scrollbar';\nimport NDropdownDivider from './DropdownDivider';\n// eslint-disable-next-line import/no-cycle\nimport NDropdownGroup from './DropdownGroup';\n// eslint-disable-next-line import/no-cycle\nimport NDropdownOption from './DropdownOption';\nimport NDropdownRenderOption from './DropdownRenderOption';\nimport { isSubmenuNode, isGroupNode, isDividerNode, isRenderNode } from './utils';\nimport { dropdownInjectionKey, dropdownMenuInjectionKey } from './context';\nimport { modalBodyInjectionKey } from '../../modal/src/interface';\nimport { drawerBodyInjectionKey } from '../../drawer/src/interface';\nimport { popoverBodyInjectionKey } from '../../popover/src/interface';\nexport default defineComponent({\n    name: 'DropdownMenu',\n    props: {\n        scrollable: Boolean,\n        showArrow: Boolean,\n        arrowStyle: [String, Object],\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        tmNodes: {\n            type: Array,\n            default: () => []\n        },\n        parentKey: {\n            type: [String, Number],\n            default: null\n        }\n    },\n    setup(props) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const { renderIconRef, childrenFieldRef } = inject(dropdownInjectionKey);\n        provide(dropdownMenuInjectionKey, {\n            showIconRef: computed(() => {\n                const renderIcon = renderIconRef.value;\n                return props.tmNodes.some((tmNode) => {\n                    var _a;\n                    if (tmNode.isGroup) {\n                        return (_a = tmNode.children) === null || _a === void 0 ? void 0 : _a.some(({ rawNode: rawChild }) => renderIcon ? renderIcon(rawChild) : rawChild.icon);\n                    }\n                    const { rawNode } = tmNode;\n                    return renderIcon ? renderIcon(rawNode) : rawNode.icon;\n                });\n            }),\n            hasSubmenuRef: computed(() => {\n                const { value: childrenField } = childrenFieldRef;\n                return props.tmNodes.some((tmNode) => {\n                    var _a;\n                    if (tmNode.isGroup) {\n                        return (_a = tmNode.children) === null || _a === void 0 ? void 0 : _a.some(({ rawNode: rawChild }) => isSubmenuNode(rawChild, childrenField));\n                    }\n                    const { rawNode } = tmNode;\n                    return isSubmenuNode(rawNode, childrenField);\n                });\n            })\n        });\n        const bodyRef = ref(null);\n        provide(modalBodyInjectionKey, null);\n        provide(drawerBodyInjectionKey, null);\n        provide(popoverBodyInjectionKey, bodyRef);\n        return {\n            bodyRef\n        };\n    },\n    render() {\n        const { parentKey, clsPrefix, scrollable } = this;\n        const menuOptionsNode = this.tmNodes.map((tmNode) => {\n            const { rawNode } = tmNode;\n            if (rawNode.show === false)\n                return null;\n            if (isRenderNode(rawNode)) {\n                return (h(NDropdownRenderOption, { tmNode: tmNode, key: tmNode.key }));\n            }\n            if (isDividerNode(rawNode)) {\n                return h(NDropdownDivider, { clsPrefix: clsPrefix, key: tmNode.key });\n            }\n            if (isGroupNode(rawNode)) {\n                return (h(NDropdownGroup, { clsPrefix: clsPrefix, tmNode: tmNode, parentKey: parentKey, key: tmNode.key }));\n            }\n            return (h(NDropdownOption, { clsPrefix: clsPrefix, tmNode: tmNode, parentKey: parentKey, key: tmNode.key, props: rawNode.props, scrollable: scrollable }));\n        });\n        return (h(\"div\", { class: [\n                `${clsPrefix}-dropdown-menu`,\n                scrollable && `${clsPrefix}-dropdown-menu--scrollable`\n            ], ref: \"bodyRef\" },\n            scrollable ? (h(NxScrollbar, { contentClass: `${clsPrefix}-dropdown-menu__content` }, {\n                default: () => menuOptionsNode\n            })) : (menuOptionsNode),\n            this.showArrow\n                ? renderArrow({\n                    clsPrefix,\n                    arrowStyle: this.arrowStyle\n                })\n                : null));\n    }\n});\n","import { c, cB, cM, cE, cNotM } from '../../../_utils/cssr';\nimport { fadeInScaleUpTransition } from '../../../_styles/transitions/fade-in-scale-up.cssr';\n// vars:\n// --n-bezier\n// --n-font-size\n// --n-padding\n// --n-border-radius\n// --n-option-height\n// --n-option-prefix-width\n// --n-option-icon-prefix-width\n// --n-option-suffix-width\n// --n-option-icon-suffix-width\n// --n-color\n// --n-option-color-hover\n// --n-option-color-active\n// --n-divider-color\n// --n-option-text-color\n// --n-option-text-color-hover\n// --n-option-text-color-active\n// --n-option-text-color-child-active\n// --n-prefix-color\n// --n-suffix-color\n// --n-option-icon-size\n// --n-option-opacity-disabled\n// shared with popover\n// --n-box-shadow\nexport default cB('dropdown-menu', `\n transform-origin: var(--v-transform-origin);\n background-color: var(--n-color);\n border-radius: var(--n-border-radius);\n box-shadow: var(--n-box-shadow);\n position: relative;\n transition:\n background-color .3s var(--n-bezier),\n box-shadow .3s var(--n-bezier);\n`, [fadeInScaleUpTransition(), cB('dropdown-option', `\n position: relative;\n `, [c('a', `\n text-decoration: none;\n color: inherit;\n outline: none;\n `, [c('&::before', `\n content: \"\";\n position: absolute;\n left: 0;\n right: 0;\n top: 0;\n bottom: 0;\n `)]), cB('dropdown-option-body', `\n display: flex;\n cursor: pointer;\n position: relative;\n height: var(--n-option-height);\n line-height: var(--n-option-height);\n font-size: var(--n-font-size);\n color: var(--n-option-text-color);\n transition: color .3s var(--n-bezier);\n `, [c('&::before', `\n content: \"\";\n position: absolute;\n top: 0;\n bottom: 0;\n left: 4px;\n right: 4px;\n transition: background-color .3s var(--n-bezier);\n border-radius: var(--n-border-radius);\n `), cNotM('disabled', [cM('pending', `\n color: var(--n-option-text-color-hover);\n `, [cE('prefix, suffix', `\n color: var(--n-option-text-color-hover);\n `), c('&::before', 'background-color: var(--n-option-color-hover);')]), cM('active', `\n color: var(--n-option-text-color-active);\n `, [cE('prefix, suffix', `\n color: var(--n-option-text-color-active);\n `), c('&::before', 'background-color: var(--n-option-color-active);')]), cM('child-active', `\n color: var(--n-option-text-color-child-active);\n `, [cE('prefix, suffix', `\n color: var(--n-option-text-color-child-active);\n `)])]), cM('disabled', `\n cursor: not-allowed;\n opacity: var(--n-option-opacity-disabled);\n `), cM('group', `\n font-size: calc(var(--n-font-size) - 1px);\n color: var(--n-group-header-text-color);\n `, [cE('prefix', `\n width: calc(var(--n-option-prefix-width) / 2);\n `, [cM('show-icon', `\n width: calc(var(--n-option-icon-prefix-width) / 2);\n `)])]), cE('prefix', `\n width: var(--n-option-prefix-width);\n display: flex;\n justify-content: center;\n align-items: center;\n color: var(--n-prefix-color);\n transition: color .3s var(--n-bezier);\n z-index: 1;\n `, [cM('show-icon', `\n width: var(--n-option-icon-prefix-width);\n `), cB('icon', `\n font-size: var(--n-option-icon-size);\n `)]), cE('label', `\n white-space: nowrap;\n flex: 1;\n z-index: 1;\n `), cE('suffix', `\n box-sizing: border-box;\n flex-grow: 0;\n flex-shrink: 0;\n display: flex;\n justify-content: flex-end;\n align-items: center;\n min-width: var(--n-option-suffix-width);\n padding: 0 8px;\n transition: color .3s var(--n-bezier);\n color: var(--n-suffix-color);\n z-index: 1;\n `, [cM('has-submenu', `\n width: var(--n-option-icon-suffix-width);\n `), cB('icon', `\n font-size: var(--n-option-icon-size);\n `)]), cB('dropdown-menu', 'pointer-events: all;')]), cB('dropdown-offset-container', `\n pointer-events: none;\n position: absolute;\n left: 0;\n right: 0;\n top: -4px;\n bottom: -4px;\n `)]), cB('dropdown-divider', `\n transition: background-color .3s var(--n-bezier);\n background-color: var(--n-divider-color);\n height: 1px;\n margin: 4px 0;\n `), cB('dropdown-menu-wrapper', `\n transform-origin: var(--v-transform-origin);\n width: fit-content;\n `), c('>', [cB('scrollbar', `\n height: inherit;\n max-height: inherit;\n `)]), cNotM('scrollable', `\n padding: var(--n-padding);\n `), cM('scrollable', [cE('content', `\n padding: var(--n-padding);\n `)])]);","import { defineComponent, h, computed, ref, toRef, watch, provide, mergeProps } from 'vue';\nimport { createTreeMate } from 'treemate';\nimport { useMergedState, useKeyboard, useMemo } from 'vooks';\nimport { popoverBaseProps } from '../../popover/src/Popover';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { NPopover } from '../../popover';\nimport { keep, call, createKey, createRefSetter } from '../../_utils';\nimport { dropdownLight } from '../styles';\nimport NDropdownMenu from './DropdownMenu';\nimport style from './styles/index.cssr';\nimport { dropdownInjectionKey } from './context';\nconst dropdownBaseProps = {\n    animated: {\n        type: Boolean,\n        default: true\n    },\n    keyboard: {\n        type: Boolean,\n        default: true\n    },\n    size: {\n        type: String,\n        default: 'medium'\n    },\n    inverted: Boolean,\n    placement: {\n        type: String,\n        default: 'bottom'\n    },\n    onSelect: [Function, Array],\n    options: {\n        type: Array,\n        default: () => []\n    },\n    menuProps: Function,\n    showArrow: Boolean,\n    renderLabel: Function,\n    renderIcon: Function,\n    renderOption: Function,\n    nodeProps: Function,\n    labelField: {\n        type: String,\n        default: 'label'\n    },\n    keyField: {\n        type: String,\n        default: 'key'\n    },\n    childrenField: {\n        type: String,\n        default: 'children'\n    },\n    // for menu, not documented\n    value: [String, Number]\n};\nconst popoverPropKeys = Object.keys(popoverBaseProps);\nexport const dropdownProps = Object.assign(Object.assign(Object.assign({}, popoverBaseProps), dropdownBaseProps), useTheme.props);\nexport default defineComponent({\n    name: 'Dropdown',\n    inheritAttrs: false,\n    props: dropdownProps,\n    setup(props) {\n        const uncontrolledShowRef = ref(false);\n        const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n        const treemateRef = computed(() => {\n            const { keyField, childrenField } = props;\n            return createTreeMate(props.options, {\n                getKey(node) {\n                    return node[keyField];\n                },\n                getDisabled(node) {\n                    return node.disabled === true;\n                },\n                getIgnored(node) {\n                    return node.type === 'divider' || node.type === 'render';\n                },\n                getChildren(node) {\n                    return node[childrenField];\n                }\n            });\n        });\n        const tmNodesRef = computed(() => {\n            return treemateRef.value.treeNodes;\n        });\n        const hoverKeyRef = ref(null);\n        const keyboardKeyRef = ref(null);\n        const lastToggledSubmenuKeyRef = ref(null);\n        const pendingKeyRef = computed(() => {\n            var _a, _b, _c;\n            return ((_c = (_b = (_a = hoverKeyRef.value) !== null && _a !== void 0 ? _a : keyboardKeyRef.value) !== null && _b !== void 0 ? _b : lastToggledSubmenuKeyRef.value) !== null && _c !== void 0 ? _c : null);\n        });\n        const pendingKeyPathRef = computed(() => treemateRef.value.getPath(pendingKeyRef.value).keyPath);\n        const activeKeyPathRef = computed(() => treemateRef.value.getPath(props.value).keyPath);\n        const keyboardEnabledRef = useMemo(() => {\n            return props.keyboard && mergedShowRef.value;\n        });\n        useKeyboard({\n            keydown: {\n                ArrowUp: {\n                    prevent: true,\n                    handler: handleKeydownUp\n                },\n                ArrowRight: {\n                    prevent: true,\n                    handler: handleKeydownRight\n                },\n                ArrowDown: {\n                    prevent: true,\n                    handler: handleKeydownDown\n                },\n                ArrowLeft: {\n                    prevent: true,\n                    handler: handleKeydownLeft\n                },\n                Enter: {\n                    prevent: true,\n                    handler: handleKeydownEnter\n                },\n                Escape: handleKeydownEsc\n            }\n        }, keyboardEnabledRef);\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Dropdown', '-dropdown', style, dropdownLight, props, mergedClsPrefixRef);\n        provide(dropdownInjectionKey, {\n            labelFieldRef: toRef(props, 'labelField'),\n            childrenFieldRef: toRef(props, 'childrenField'),\n            renderLabelRef: toRef(props, 'renderLabel'),\n            renderIconRef: toRef(props, 'renderIcon'),\n            hoverKeyRef,\n            keyboardKeyRef,\n            lastToggledSubmenuKeyRef,\n            pendingKeyPathRef,\n            activeKeyPathRef,\n            animatedRef: toRef(props, 'animated'),\n            mergedShowRef,\n            nodePropsRef: toRef(props, 'nodeProps'),\n            renderOptionRef: toRef(props, 'renderOption'),\n            menuPropsRef: toRef(props, 'menuProps'),\n            doSelect,\n            doUpdateShow\n        });\n        // watch\n        watch(mergedShowRef, (value) => {\n            if (!props.animated && !value) {\n                clearPendingState();\n            }\n        });\n        // methods\n        function doSelect(key, node) {\n            const { onSelect } = props;\n            if (onSelect)\n                call(onSelect, key, node);\n        }\n        function doUpdateShow(value) {\n            const { 'onUpdate:show': _onUpdateShow, onUpdateShow } = props;\n            if (_onUpdateShow)\n                call(_onUpdateShow, value);\n            if (onUpdateShow)\n                call(onUpdateShow, value);\n            uncontrolledShowRef.value = value;\n        }\n        function clearPendingState() {\n            hoverKeyRef.value = null;\n            keyboardKeyRef.value = null;\n            lastToggledSubmenuKeyRef.value = null;\n        }\n        function handleKeydownEsc() {\n            doUpdateShow(false);\n        }\n        function handleKeydownLeft() {\n            handleKeydown('left');\n        }\n        function handleKeydownRight() {\n            handleKeydown('right');\n        }\n        function handleKeydownUp() {\n            handleKeydown('up');\n        }\n        function handleKeydownDown() {\n            handleKeydown('down');\n        }\n        function handleKeydownEnter() {\n            const pendingNode = getPendingNode();\n            if ((pendingNode === null || pendingNode === void 0 ? void 0 : pendingNode.isLeaf) && mergedShowRef.value) {\n                doSelect(pendingNode.key, pendingNode.rawNode);\n                doUpdateShow(false);\n            }\n        }\n        function getPendingNode() {\n            var _a;\n            const { value: treeMate } = treemateRef;\n            const { value: pendingKey } = pendingKeyRef;\n            if (!treeMate || pendingKey === null)\n                return null;\n            return (_a = treeMate.getNode(pendingKey)) !== null && _a !== void 0 ? _a : null;\n        }\n        function handleKeydown(direction) {\n            const { value: pendingKey } = pendingKeyRef;\n            const { value: { getFirstAvailableNode } } = treemateRef;\n            let nextKeyboardKey = null;\n            if (pendingKey === null) {\n                const firstNode = getFirstAvailableNode();\n                if (firstNode !== null) {\n                    nextKeyboardKey = firstNode.key;\n                }\n            }\n            else {\n                const currentNode = getPendingNode();\n                if (currentNode) {\n                    let nextNode;\n                    switch (direction) {\n                        case 'down':\n                            nextNode = currentNode.getNext();\n                            break;\n                        case 'up':\n                            nextNode = currentNode.getPrev();\n                            break;\n                        case 'right':\n                            nextNode = currentNode.getChild();\n                            break;\n                        case 'left':\n                            nextNode = currentNode.getParent();\n                            break;\n                    }\n                    if (nextNode)\n                        nextKeyboardKey = nextNode.key;\n                }\n            }\n            if (nextKeyboardKey !== null) {\n                hoverKeyRef.value = null;\n                keyboardKeyRef.value = nextKeyboardKey;\n            }\n        }\n        const cssVarsRef = computed(() => {\n            const { size, inverted } = props;\n            const { common: { cubicBezierEaseInOut }, self } = themeRef.value;\n            const { padding, dividerColor, borderRadius, optionOpacityDisabled, [createKey('optionIconSuffixWidth', size)]: optionIconSuffixWidth, [createKey('optionSuffixWidth', size)]: optionSuffixWidth, [createKey('optionIconPrefixWidth', size)]: optionIconPrefixWidth, [createKey('optionPrefixWidth', size)]: optionPrefixWidth, [createKey('fontSize', size)]: fontSize, [createKey('optionHeight', size)]: optionHeight, [createKey('optionIconSize', size)]: optionIconSize } = self;\n            const vars = {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-font-size': fontSize,\n                '--n-padding': padding,\n                '--n-border-radius': borderRadius,\n                '--n-option-height': optionHeight,\n                '--n-option-prefix-width': optionPrefixWidth,\n                '--n-option-icon-prefix-width': optionIconPrefixWidth,\n                '--n-option-suffix-width': optionSuffixWidth,\n                '--n-option-icon-suffix-width': optionIconSuffixWidth,\n                '--n-option-icon-size': optionIconSize,\n                '--n-divider-color': dividerColor,\n                '--n-option-opacity-disabled': optionOpacityDisabled\n            };\n            // writing like this is the fastest method\n            if (inverted) {\n                vars['--n-color'] = self.colorInverted;\n                vars['--n-option-color-hover'] = self.optionColorHoverInverted;\n                vars['--n-option-color-active'] = self.optionColorActiveInverted;\n                vars['--n-option-text-color'] = self.optionTextColorInverted;\n                vars['--n-option-text-color-hover'] = self.optionTextColorHoverInverted;\n                vars['--n-option-text-color-active'] =\n                    self.optionTextColorActiveInverted;\n                vars['--n-option-text-color-child-active'] =\n                    self.optionTextColorChildActiveInverted;\n                vars['--n-prefix-color'] = self.prefixColorInverted;\n                vars['--n-suffix-color'] = self.suffixColorInverted;\n                vars['--n-group-header-text-color'] = self.groupHeaderTextColorInverted;\n            }\n            else {\n                vars['--n-color'] = self.color;\n                vars['--n-option-color-hover'] = self.optionColorHover;\n                vars['--n-option-color-active'] = self.optionColorActive;\n                vars['--n-option-text-color'] = self.optionTextColor;\n                vars['--n-option-text-color-hover'] = self.optionTextColorHover;\n                vars['--n-option-text-color-active'] = self.optionTextColorActive;\n                vars['--n-option-text-color-child-active'] =\n                    self.optionTextColorChildActive;\n                vars['--n-prefix-color'] = self.prefixColor;\n                vars['--n-suffix-color'] = self.suffixColor;\n                vars['--n-group-header-text-color'] = self.groupHeaderTextColor;\n            }\n            return vars;\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('dropdown', computed(() => `${props.size[0]}${props.inverted ? 'i' : ''}`), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedTheme: themeRef,\n            // data\n            tmNodes: tmNodesRef,\n            // show\n            mergedShow: mergedShowRef,\n            // methods\n            handleAfterLeave: () => {\n                if (!props.animated)\n                    return;\n                clearPendingState();\n            },\n            doUpdateShow,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const renderPopoverBody = (className, ref, style, onMouseenter, onMouseleave) => {\n            var _a;\n            const { mergedClsPrefix, menuProps } = this;\n            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n            const menuNodeProps = (menuProps === null || menuProps === void 0 ? void 0 : menuProps(undefined, this.tmNodes.map((v) => v.rawNode))) || {};\n            const dropdownProps = {\n                ref: createRefSetter(ref),\n                class: [className, `${mergedClsPrefix}-dropdown`, this.themeClass],\n                clsPrefix: mergedClsPrefix,\n                tmNodes: this.tmNodes,\n                style: [style, this.cssVars],\n                showArrow: this.showArrow,\n                arrowStyle: this.arrowStyle,\n                scrollable: this.scrollable,\n                onMouseenter,\n                onMouseleave\n            };\n            return h(NDropdownMenu, mergeProps(this.$attrs, dropdownProps, menuNodeProps));\n        };\n        const { mergedTheme } = this;\n        const popoverProps = {\n            show: this.mergedShow,\n            theme: mergedTheme.peers.Popover,\n            themeOverrides: mergedTheme.peerOverrides.Popover,\n            internalOnAfterLeave: this.handleAfterLeave,\n            internalRenderBody: renderPopoverBody,\n            onUpdateShow: this.doUpdateShow,\n            'onUpdate:show': undefined\n        };\n        return (h(NPopover, Object.assign({}, keep(this.$props, popoverPropKeys), popoverProps), {\n            trigger: () => { var _a, _b; return (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a); }\n        }));\n    }\n});\n","import { onBeforeMount, onBeforeUnmount, reactive, readonly, watch } from 'vue';\nimport { on, off } from 'evtd';\nimport { hasInstance } from './utils';\nexport default function useKeyboard(options = {}, enabledRef) {\n    const state = reactive({\n        ctrl: false,\n        command: false,\n        win: false,\n        shift: false,\n        tab: false\n    });\n    const { keydown, keyup } = options;\n    const keydownHandler = (e) => {\n        switch (e.key) {\n            case 'Control':\n                state.ctrl = true;\n                break;\n            case 'Meta':\n                state.command = true;\n                state.win = true;\n                break;\n            case 'Shift':\n                state.shift = true;\n                break;\n            case 'Tab':\n                state.tab = true;\n                break;\n        }\n        if (keydown !== undefined) {\n            Object.keys(keydown).forEach(key => {\n                if (key !== e.key)\n                    return;\n                const handler = keydown[key];\n                if (typeof handler === 'function') {\n                    handler(e);\n                }\n                else {\n                    const { stop = false, prevent = false } = handler;\n                    if (stop)\n                        e.stopPropagation();\n                    if (prevent)\n                        e.preventDefault();\n                    handler.handler(e);\n                }\n            });\n        }\n    };\n    const keyupHandler = (e) => {\n        switch (e.key) {\n            case 'Control':\n                state.ctrl = false;\n                break;\n            case 'Meta':\n                state.command = false;\n                state.win = false;\n                break;\n            case 'Shift':\n                state.shift = false;\n                break;\n            case 'Tab':\n                state.tab = false;\n                break;\n        }\n        if (keyup !== undefined) {\n            Object.keys(keyup).forEach(key => {\n                if (key !== e.key)\n                    return;\n                const handler = keyup[key];\n                if (typeof handler === 'function') {\n                    handler(e);\n                }\n                else {\n                    const { stop = false, prevent = false } = handler;\n                    if (stop)\n                        e.stopPropagation();\n                    if (prevent)\n                        e.preventDefault();\n                    handler.handler(e);\n                }\n            });\n        }\n    };\n    const setup = () => {\n        if (enabledRef === undefined || enabledRef.value) {\n            on('keydown', document, keydownHandler);\n            on('keyup', document, keyupHandler);\n        }\n        if (enabledRef !== undefined) {\n            watch(enabledRef, value => {\n                if (value) {\n                    on('keydown', document, keydownHandler);\n                    on('keyup', document, keyupHandler);\n                }\n                else {\n                    off('keydown', document, keydownHandler);\n                    off('keyup', document, keyupHandler);\n                }\n            });\n        }\n    };\n    if (hasInstance()) {\n        onBeforeMount(setup);\n        onBeforeUnmount(() => {\n            if (enabledRef === undefined || enabledRef.value) {\n                off('keydown', document, keydownHandler);\n                off('keyup', document, keyupHandler);\n            }\n        });\n    }\n    else {\n        setup();\n    }\n    return readonly(state);\n}\n"],"names":["createRefSetter","ref","inst","value","$el","NDropdownDivider","defineComponent","name","props","clsPrefix","type","String","required","render","h","class","this","dropdownMenuInjectionKey","createInjectionKey","dropdownInjectionKey","dropdownOptionInjectionKey","isSubmenuNode","rawNode","childrenField","isDividerNode","NDropdownOption","tmNode","Object","parentKey","Number","default","placement","scrollable","Boolean","setup","NDropdown","inject","hoverKeyRef","keyboardKeyRef","lastToggledSubmenuKeyRef","pendingKeyPathRef","activeKeyPathRef","animatedRef","mergedShowRef","renderLabelRef","renderIconRef","labelFieldRef","childrenFieldRef","renderOptionRef","nodePropsRef","menuPropsRef","NDropdownMenu","NPopoverBody","popoverBodyInjectionKey","rawNodeRef","computed","hasSubmenuRef","mergedDisabledRef","disabled","deferredShowSubmenuRef","valueRef","delay","shouldDelayRef","delayedRef","timerId","watch","window","clearTimeout","setTimeout","useDeferredTrue","key","hoverKey","keyboardKey","lastToggledSubmenuKey","pendingKeyPath","includes","length","parentEnteringSubmenuRef","enteringSubmenuRef","handleMouseEnter","provide","labelField","renderLabel","renderIcon","siblingHasIcon","showIconRef","siblingHasSubmenu","menuProps","popoverBody","animated","mergedShowSubmenu","hasSubmenu","pending","useMemo","childActive","activeKeyPath","index","findIndex","k","active","mergedDisabled","renderOption","nodeProps","handleClick","doSelect","doUpdateShow","handleMouseMove","handleMouseLeave","e","relatedTarget","happensIn","target","handleSubmenuBeforeEnter","handleSubmenuAfterEnter","_a","_b","submenuVNode","submenuNodeProps","call","children","assign","tmNodes","builtinProps","onMousemove","onMouseenter","onMouseleave","onClick","optionNodeProps","node","mergeProps","icon","title","NIcon","ChevronRightIcon","VBinder","VTarget","VFollower","show","to","teleportDisabled","Transition","onBeforeEnter","onAfterEnter","appear","option","NDropdownGroupHeader","showIcon","NDropdownGroup","Fragment","map","child","isGroup","warn","NDropdownRenderOption","showArrow","arrowStyle","Array","some","rawChild","bodyRef","modalBodyInjectionKey","drawerBodyInjectionKey","menuOptionsNode","isRenderNode","isGroupNode","NxScrollbar","contentClass","renderArrow","style","cB","fadeInScaleUpTransition","c","cNotM","cM","cE","dropdownBaseProps","keyboard","size","inverted","onSelect","Function","options","keyField","popoverPropKeys","keys","popoverBaseProps","inheritAttrs","useTheme","uncontrolledShowRef","useMergedState","toRef","treemateRef","createTreeMate","getKey","getDisabled","getIgnored","getChildren","tmNodesRef","treeNodes","pendingKeyRef","_c","getPath","keyPath","enabledRef","state","reactive","ctrl","command","win","shift","tab","keydown","keyup","keydownHandler","forEach","handler","stop","prevent","stopPropagation","preventDefault","keyupHandler","on","document","off","hasInstance","onBeforeMount","onBeforeUnmount","readonly","useKeyboard","ArrowUp","handleKeydown","ArrowRight","ArrowDown","ArrowLeft","Enter","pendingNode","getPendingNode","isLeaf","Escape","mergedClsPrefixRef","inlineThemeDisabled","useConfig","themeRef","dropdownLight","_onUpdateShow","onUpdateShow","clearPendingState","treeMate","pendingKey","getNode","direction","getFirstAvailableNode","nextKeyboardKey","firstNode","currentNode","nextNode","getNext","getPrev","getChild","getParent","cssVarsRef","common","cubicBezierEaseInOut","self","padding","dividerColor","borderRadius","optionOpacityDisabled","createKey","optionIconSuffixWidth","optionSuffixWidth","optionIconPrefixWidth","optionPrefixWidth","fontSize","optionHeight","optionIconSize","vars","colorInverted","optionColorHoverInverted","optionColorActiveInverted","optionTextColorInverted","optionTextColorHoverInverted","optionTextColorActiveInverted","optionTextColorChildActiveInverted","prefixColorInverted","suffixColorInverted","groupHeaderTextColorInverted","color","optionColorHover","optionColorActive","optionTextColor","optionTextColorHover","optionTextColorActive","optionTextColorChildActive","prefixColor","suffixColor","groupHeaderTextColor","themeClassHandle","useThemeClass","mergedClsPrefix","mergedTheme","mergedShow","handleAfterLeave","cssVars","themeClass","onRender","popoverProps","theme","peers","Popover","themeOverrides","peerOverrides","internalOnAfterLeave","internalRenderBody","className","menuNodeProps","v","dropdownProps","$attrs","NPopover","keep","$props","trigger","$slots"],"mappings":"2rBAAO,SAASA,EAAgBC,GAC5B,OAAQC,IAEAD,EAAIE,MADJD,EACYA,EAAKE,IAGL,IACf,CAET,CCRA,MAAAC,EAAeC,EAAgB,CAC3BC,KAAM,kBACNC,MAAO,CACHC,UAAW,CACPC,KAAMC,OACNC,UAAU,IAGlB,MAAAC,GACW,OAAAC,EAAE,MAAO,CAAEC,MAAO,GAAGC,KAAKP,8BACpC,ICVQQ,EAA2BC,EAAmB,mBAC9CC,EAAuBD,EAAmB,cAC1CE,GAA6BF,EAAmB,qBCHtD,SAASG,GAAcC,EAASC,GAC3B,MAAiB,YAAjBD,EAAQZ,WACM,IAAjBY,EAAQZ,WAAiD,IAA3BY,EAAQC,EAC/C,CAIO,SAASC,GAAcF,GAC1B,MAAwB,YAAjBA,EAAQZ,IACnB,CCGA,MAAAe,GAAenB,EAAgB,CAC3BC,KAAM,iBACNC,MAAO,CACHC,UAAW,CACPC,KAAMC,OACNC,UAAU,GAEdc,OAAQ,CACJhB,KAAMiB,OACNf,UAAU,GAEdgB,UAAW,CACPlB,KAAM,CAACC,OAAQkB,QACfC,QAAS,MAEbC,UAAW,CACPrB,KAAMC,OACNmB,QAAS,eAEbtB,MAAOmB,OACPK,WAAYC,SAEhB,KAAAC,CAAM1B,GAEI2B,MAAAA,EAAYC,EAAOjB,IACnBkB,YAAEA,EAAAC,eAAaA,EAAgBC,yBAAAA,EAAAC,kBAA0BA,mBAAmBC,EAAkBC,YAAAA,EAAAC,cAAaA,EAAeC,eAAAA,EAAAC,cAAgBA,gBAAeC,EAAeC,iBAAAA,EAAAC,gBAAkBA,EAAiBC,aAAAA,EAAAC,aAAcA,GAAiBf,EAC1OV,EAAkBW,EAAOhB,GAA4B,MAErD+B,EAAgBf,EAAOnB,GAEvBmC,EAAehB,EAAOiB,GACtBC,EAAaC,GAAS,IAAM/C,EAAMkB,OAAOJ,UACzCkC,EAAgBD,GAAS,KACrB,MAAEpD,MAAOoB,GAAkBwB,EACjC,OAAO1B,GAAcb,EAAMkB,OAAOJ,QAASC,EAAa,IAEtDkC,EAAoBF,GAAS,KACzB,MAAAG,SAAEA,GAAalD,EAAMkB,OACpB,OAAAgC,CAAA,IAyBLC,EC1EP,SAAyBC,EAAUC,EAAOC,GAC7C,IAAKD,EACM,OAAAD,EACL,MAAAG,EAAa9D,EAAI2D,EAASzD,OAChC,IAAI6D,EAAU,KAkBP,OAjBDC,EAAAL,GAAWzD,IACG,OAAZ6D,GACAE,OAAOC,aAAaH,IACV,IAAV7D,EACI2D,IAAmBA,EAAe3D,MAClC4D,EAAW5D,OAAQ,EAGT6D,EAAAE,OAAOE,YAAW,KACxBL,EAAW5D,OAAQ,CAAA,GACpB0D,GAIPE,EAAW5D,OAAQ,CACtB,IAEE4D,CACX,CDmDuCM,CAvBRd,GAAS,KAC5B,IAAKC,EAAcrD,MACR,OAAA,EACX,MAAMmE,IAAEA,EAAAZ,SAAKA,GAAalD,EAAMkB,OAC5B,GAAAgC,EACO,OAAA,EACL,MAAEvD,MAAOoE,GAAalC,GACpBlC,MAAOqE,GAAgBlC,GACvBnC,MAAOsE,GAA0BlC,GACjCpC,MAAOuE,GAAmBlC,EAClC,OAAiB,OAAb+B,EACOG,EAAeC,SAASL,GACf,OAAhBE,EACQE,EAAeC,SAASL,IAC5BI,EAAeA,EAAeE,OAAS,KAAON,EAExB,OAA1BG,GACOC,EAAeC,SAASL,EAC5B,IAKoD,IAHxCf,GAAS,IACI,OAAzBjB,EAAenC,QAAmBuC,EAAYvC,SAGnD0E,EAA2BtB,GAAS,OAC5B9B,aAAyD,EAASA,EAAgBqD,mBAAmB3E,SAE7G2E,EAAqB7E,GAAI,GAW/B,SAAS8E,IACC,MAAAnD,UAAEA,EAAWF,OAAAA,GAAWlB,EAC1BkB,EAAOgC,UAENf,EAAcxC,QAEnBoC,EAAyBpC,MAAQyB,EACjCU,EAAenC,MAAQ,KACvBkC,EAAYlC,MAAQuB,EAAO4C,IAC9B,CAiCM,OApDPU,EAAQ5D,GAA4B,CAChC0D,uBAmDG,CACHG,WAAYnC,EACZoC,YAAatC,EACbuC,WAAYtC,EACZuC,eAAgBjC,EAAckC,YAC9BC,kBAAmBnC,EAAcK,cACjC+B,UAAWrC,EACXsC,YAAapC,EACbqC,SAAU/C,EACVgD,kBAAmBnC,GAAS,IACjBI,EAAuBxD,QAAU0E,EAAyB1E,QAErEmB,QAASgC,EACTqC,WAAYnC,EACZoC,QAASC,GAAQ,KACP,MAAE1F,MAAOuE,GAAmBlC,GAC5B8B,IAAEA,GAAQ9D,EAAMkB,OACf,OAAAgD,EAAeC,SAASL,EAAG,IAEtCwB,YAAaD,GAAQ,KACX,MAAE1F,MAAO4F,GAAkBtD,GAC3B6B,IAAEA,GAAQ9D,EAAMkB,OAChBsE,EAAQD,EAAcE,WAAWC,GAAM5B,IAAQ4B,IACrD,OAAc,IAAVF,GAEGA,EAAQD,EAAcnB,OAAS,CAAA,IAE1CuB,OAAQN,GAAQ,KACN,MAAE1F,MAAO4F,GAAkBtD,GAC3B6B,IAAEA,GAAQ9D,EAAMkB,OAChBsE,EAAQD,EAAcE,WAAWC,GAAM5B,IAAQ4B,IACrD,OAAc,IAAVF,GAEGA,IAAUD,EAAcnB,OAAS,CAAA,IAE5CwB,eAAgB3C,EAChB4C,aAAcrD,EACdsD,UAAWrD,EACXsD,YAhDJ,WACU,MAAEpG,MAAOwF,GAAenC,GACxB9B,OAAEA,GAAWlB,EACdmC,EAAcxC,QAEdwF,GAAejE,EAAOgC,WACvBvB,EAAUqE,SAAS9E,EAAO4C,IAAK5C,EAAOJ,SACtCa,EAAUsE,cAAa,IAE9B,EAwCGC,gBAvEJ,WACU,MAAAhF,OAAEA,GAAWlB,EACfkB,EAAOgC,UAENf,EAAcxC,OAEfkC,EAAYlC,QAAUuB,EAAO4C,QAGpC,EA+DGS,mBACA4B,iBA/DJ,SAA0BC,GACtB,GAAIpG,EAAMkB,OAAOgC,SACb,OACJ,IAAKf,EAAcxC,MACf,OACE,MAAA0G,cAAEA,GAAkBD,GACtBC,GACCC,EAAU,CAAEC,OAAQF,GAAiB,mBACrCC,EAAU,CAAEC,OAAQF,GAAiB,mBACtCxE,EAAYlC,MAAQ,KAE3B,EAqDG6G,yBA1FJ,WACIlC,EAAmB3E,OAAQ,CAC9B,EAyFG8G,wBAxFJ,WACInC,EAAmB3E,OAAQ,CAC9B,EAwFJ,EACD,MAAAU,GACI,IAAIqG,EAAIC,EACR,MAAM1B,SAAEA,EAAAnE,QAAUA,EAASoE,kBAAAA,EAAAjF,UAAmBA,EAAW2E,eAAAA,EAAAE,kBAAgBA,EAAmBJ,YAAAA,EAAAC,WAAaA,EAAYkB,aAAAA,EAAAC,UAAcA,EAAW9F,MAAAA,EAAAwB,WAAOA,GAAehB,KACpK,IAAIoG,EAAe,KACnB,GAAI1B,EAAmB,CACb,MAAA2B,EAA6C,QAAzBH,EAAKlG,KAAKuE,iBAA8B,IAAP2B,OAAgB,EAASA,EAAGI,KAAKtG,KAAMM,EAElGA,EAAQiG,UACQH,EAAAtG,EAAEqC,GAAexB,OAAO6F,OAAO,GAAIH,EAAkB,CAAE5G,YAAsBuB,WAAYhB,KAAKgB,WAAYyF,QAASzG,KAAKU,OAAO6F,SAAU3F,UAAWZ,KAAKU,OAAO4C,MACnL,CACD,MAAMoD,EAAe,CACjB3G,MAAO,CACH,GAAGN,yBACHO,KAAK4E,SAAW,GAAGnF,kCACnBO,KAAKmF,QAAU,GAAG1F,iCAClBO,KAAK8E,aAAe,GAAGrF,uCACvBO,KAAKoF,gBAAkB,GAAG3F,oCAE9BkH,YAAa3G,KAAK0F,gBAClBkB,aAAc5G,KAAK+D,iBACnB8C,aAAc7G,KAAK2F,iBACnBmB,QAAS9G,KAAKuF,aAEZwB,EAAkBzB,aAA6C,EAASA,EAAUhF,GAClF0G,EAAQlH,EAAE,MAAOa,OAAO6F,OAAO,CAAEzG,MAAO,CAAC,GAAGN,oBAA6BsH,aAAyD,EAASA,EAAgBhH,OAAQ,wBAAwB,GAAQgH,GACrMjH,EAAE,MAAOmH,EAAWP,EAAclH,GAAQ,CACtCM,EAAE,MAAO,CAAEC,MAAO,CACV,GAAGN,iCACH2E,GACI,GAAG3E,8CACN,CAAC0E,EAAaA,EAAW7D,GAAWT,EAAOS,EAAQ4G,QAC5DpH,EAAE,MAAO,CAAE,wBAAwB,EAAMC,MAAO,GAAGN,iCAA2CyE,EACxFA,EAAY5D,GACZT,EAA2C,QAAnCsG,EAAK7F,EAAQN,KAAKiE,mBAAgC,IAAPkC,EAAgBA,EAAK7F,EAAQ6G,QACtFrH,EAAE,MAAO,CAAE,wBAAwB,EAAMC,MAAO,CACxC,GAAGN,iCACH6E,GACI,GAAG7E,gDACNO,KAAK2E,WAAc7E,EAAEsH,EAAO,KAAM,CACvCtG,QAAS,IAAMhB,EAAEuH,EAAkB,QACjC,QAEVrH,KAAK2E,WAAc7E,EAAEwH,EAAS,KAAM,CAChCxG,QAAS,IAAM,CACXhB,EAAEyH,EAAS,KAAM,CACbzG,QAAS,IAAOhB,EAAE,MAAO,CAAEC,MAAO,GAAGN,+BACjCK,EAAE0H,EAAW,CAAEC,KAAMzH,KAAK0E,kBAAmB3D,UAAWf,KAAKe,UAAW2G,GAAI1G,GAClEhB,KAAKwE,kBACL,EAAWmD,kBAAmB3G,GAAc,CAClDF,QAAS,IACGhB,EAAE,MAAO,CAAEC,MAAO,GAAGN,2BAAqCgF,EAAY3E,EAAE8H,EAAY,CAAEC,cAAe7H,KAAKgG,yBAA0B8B,aAAc9H,KAAKiG,wBAAyB1G,KAAM,8BAA+BwI,QAAQ,GAAQ,CACzOjH,QAAS,IAAMsF,IACZA,WAKzB,MACV,OAAIf,EACOA,EAAa,CAAE2B,OAAMgB,OAAQ1H,IAEjC0G,CACV,IE7OLiB,GAAe3I,EAAgB,CAC3BC,KAAM,sBACNC,MAAO,CACHC,UAAW,CACPC,KAAMC,OACNC,UAAU,GAEdc,OAAQ,CACJhB,KAAMiB,OACNf,UAAU,IAGlB,KAAAsB,GACU,MAAAmD,YAAEA,EAAA7B,cAAaA,GAEhBpB,EAAOnB,IACN2B,eAAEA,EAAAE,cAAgBA,EAAeG,aAAAA,EAAAD,gBAAcA,GAErDZ,EAAOjB,GACA,MAAA,CACH8D,WAAYnC,EACZoG,SAAU7D,EACVM,WAAYnC,EACZ0B,YAAatC,EACb0D,UAAWrD,EACXoD,aAAcrD,EAErB,EACD,MAAAnC,GACQ,IAAAqG,EACJ,MAAMzG,UAAEA,EAAWkF,WAAAA,EAAAuD,SAAYA,YAAU5C,EAAWpB,YAAAA,EAAAmB,aAAaA,GAAiBrF,MAC5EM,QAAEA,GAAYN,KAAKU,OACnBsG,EAAQlH,EAAE,MAAOa,OAAO6F,OAAO,CAAEzG,MAAO,GAAGN,qBAA+B6F,aAA6C,EAASA,EAAUhF,IAC5IR,EAAE,MAAO,CAAEC,MAAO,GAAGN,0BAAkCA,iCACnDK,EAAE,MAAO,CAAE,wBAAwB,EAAMC,MAAO,CACxC,GAAGN,iCACHyI,GAAY,GAAGzI,8CACdI,EAAOS,EAAQ4G,OACxBpH,EAAE,MAAO,CAAEC,MAAO,GAAGN,gCAAyC,wBAAwB,GAAQyE,EACxFA,EAAY5D,GACZT,EAAgC,QAAxBqG,EAAK5F,EAAQ6G,aAA0B,IAAPjB,EAAgBA,EAAK5F,EAAQN,KAAKiE,cAChFnE,EAAE,MAAO,CAAEC,MAAO,CACV,GAAGN,iCACHkF,GACI,GAAGlF,+CACR,wBAAwB,MACvC,OAAI4F,EACOA,EAAa,CAAE2B,OAAMgB,OAAQ1H,IAEjC0G,CACV,IC9CLmB,GAAe7I,EAAgB,CAC3BC,KAAM,iBACNC,MAAO,CACHC,UAAW,CACPC,KAAMC,OACNC,UAAU,GAEdc,OAAQ,CACJhB,KAAMiB,OACNf,UAAU,GAEdgB,UAAW,CACPlB,KAAM,CAACC,OAAQkB,QACfC,QAAS,OAGjB,MAAAjB,GACI,MAAMa,OAAEA,EAAAE,UAAQA,EAAWnB,UAAAA,GAAcO,MACnCuG,SAAEA,GAAa7F,EACb,OAAAZ,EAAEsI,EAAU,KAChBtI,EAAEmI,GAAsB,CAAExI,YAAsBiB,SAAgB4C,IAAK5C,EAAO4C,MAAQiD,aAA2C,EAC/HA,EAAS8B,KAAKC,IACJ,MAAAhI,QAAEA,GAAYgI,EACpB,OAAqB,IAAjBhI,EAAQmH,KACD,KACPjH,GAAcF,GACPR,EAAET,EAAkB,CACvBI,YACA6D,IAAKgF,EAAMhF,MAGfgF,EAAMC,SACNC,EAAK,WAAY,0DACV,MAEH1I,EAAEW,GAAiB,CAAEhB,YAAsBiB,OAAQ4H,EAAO1H,YAAsB0C,IAAKgF,EAAMhF,KAAK,IAEnH,IC3CLmF,GAAenJ,EAAgB,CAC3BC,KAAM,uBACNC,MAAO,CACHkB,OAAQ,CACJhB,KAAMiB,OACNf,UAAU,IAGlB,MAAAC,GACU,MAAES,SAAWT,OAAAA,QAAQL,IAAYQ,KAAKU,OACrC,OAAAZ,EAAE,MAAON,EAAO,CAACK,aAAuC,EAASA,KAC3E,ICELsC,GAAe7C,EAAgB,CAC3BC,KAAM,eACNC,MAAO,CACHwB,WAAYC,QACZyH,UAAWzH,QACX0H,WAAY,CAAChJ,OAAQgB,QACrBlB,UAAW,CACPC,KAAMC,OACNC,UAAU,GAEd6G,QAAS,CACL/G,KAAMkJ,MACN9H,QAAS,IAAM,IAEnBF,UAAW,CACPlB,KAAM,CAACC,OAAQkB,QACfC,QAAS,OAGjB,KAAAI,CAAM1B,GAEF,MAAMqC,cAAEA,EAAAE,iBAAeA,GAAqBX,EAAOjB,GACnD6D,EAAQ/D,EAA0B,CAC9BoE,YAAa9B,GAAS,KAClB,MAAM4B,EAAatC,EAAc1C,MACjC,OAAOK,EAAMiH,QAAQoC,MAAMnI,IACnB,IAAAwF,EACJ,GAAIxF,EAAO6H,QACP,OAAkC,QAA1BrC,EAAKxF,EAAO6F,gBAA6B,IAAPL,OAAgB,EAASA,EAAG2C,MAAK,EAAGvI,QAASwI,KAAe3E,EAAaA,EAAW2E,GAAYA,EAAS5B,OAEjJ,MAAA5G,QAAEA,GAAYI,EACpB,OAAOyD,EAAaA,EAAW7D,GAAWA,EAAQ4G,IAAA,GACrD,IAEL1E,cAAeD,GAAS,KACd,MAAEpD,MAAOoB,GAAkBwB,EACjC,OAAOvC,EAAMiH,QAAQoC,MAAMnI,IACnB,IAAAwF,EACJ,GAAIxF,EAAO6H,QACP,OAAkC,QAA1BrC,EAAKxF,EAAO6F,gBAA6B,IAAPL,OAAgB,EAASA,EAAG2C,MAAK,EAAGvI,QAASwI,KAAezI,GAAcyI,EAAUvI,KAE5H,MAAAD,QAAEA,GAAYI,EACb,OAAAL,GAAcC,EAASC,EAAa,GAC9C,MAGH,MAAAwI,EAAU9J,EAAI,MAIb,OAHP+E,EAAQgF,EAAuB,MAC/BhF,EAAQiF,EAAwB,MAChCjF,EAAQ3B,EAAyB0G,GAC1B,CACHA,UAEP,EACD,MAAAlJ,GACI,MAAMe,UAAEA,EAAAnB,UAAWA,EAAWuB,WAAAA,GAAehB,KACvCkJ,EAAkBlJ,KAAKyG,QAAQ4B,KAAK3H,IAChC,MAAAJ,QAAEA,GAAYI,EACpB,OAAqB,IAAjBJ,EAAQmH,KACD,KN/DhB,SAAsBnH,GACzB,MAAwB,WAAjBA,EAAQZ,IACnB,CM8DgByJ,CAAa7I,GACLR,EAAE2I,GAAuB,CAAE/H,SAAgB4C,IAAK5C,EAAO4C,MAE/D9C,GAAcF,GACPR,EAAET,EAAkB,CAAEI,YAAsB6D,IAAK5C,EAAO4C,MN1ExE,SAAqBhD,GACxB,MAAwB,UAAjBA,EAAQZ,IACnB,CM0EgB0J,CAAY9I,GACJR,EAAEqI,GAAgB,CAAE1I,YAAsBiB,SAAgBE,YAAsB0C,IAAK5C,EAAO4C,MAEhGxD,EAAEW,GAAiB,CAAEhB,YAAsBiB,SAAgBE,YAAsB0C,IAAK5C,EAAO4C,IAAK9D,MAAOc,EAAQd,MAAOwB,cAAwB,IAEpJ,OAAAlB,EAAE,MAAO,CAAEC,MAAO,CAClB,GAAGN,kBACHuB,GAAc,GAAGvB,+BAClBR,IAAK,WACR+B,EAAclB,EAAEuJ,EAAa,CAAEC,aAAc,GAAG7J,4BAAsC,CAClFqB,QAAS,IAAMoI,IACZA,EACPlJ,KAAK0I,UACCa,EAAY,CACV9J,YACAkJ,WAAY3I,KAAK2I,aAEnB,KACb,ICxELa,GAAeC,EAAG,gBAAiB,kRAShC,CAACC,IAA2BD,EAAG,kBAAmB,4BAEjD,CAACE,EAAE,IAAK,kEAIR,CAACA,EAAE,YAAa,4FAObF,EAAG,uBAAwB,wPAS9B,CAACE,EAAE,YAAa,2LASfC,EAAM,WAAY,CAACC,EAAG,UAAW,iDAElC,CAACC,EAAG,iBAAkB,kDAErBH,EAAE,YAAa,oDAAqDE,EAAG,SAAU,kDAElF,CAACC,EAAG,iBAAkB,mDAErBH,EAAE,YAAa,qDAAsDE,EAAG,eAAgB,wDAEzF,CAACC,EAAG,iBAAkB,6DAEjBD,EAAG,WAAY,2EAGnBA,EAAG,QAAS,8FAGb,CAACC,EAAG,SAAU,uDAEd,CAACD,EAAG,YAAa,iEAEZC,EAAG,SAAU,uMAQlB,CAACD,EAAG,YAAa,mDAEhBJ,EAAG,OAAQ,iDAETK,EAAG,QAAS,uDAIdA,EAAG,SAAU,2RAYd,CAACD,EAAG,cAAe,mDAElBJ,EAAG,OAAQ,iDAETA,EAAG,gBAAiB,0BAA2BA,EAAG,4BAA6B,2GAO/EA,EAAG,mBAAoB,uIAKzBA,EAAG,wBAAyB,4EAG5BE,EAAE,IAAK,CAACF,EAAG,YAAa,mDAGtBG,EAAM,aAAc,oCAEtBC,EAAG,aAAc,CAACC,EAAG,UAAW,wCCjI/BC,GAAoB,CACtBtF,SAAU,CACN/E,KAAMuB,QACNH,SAAS,GAEbkJ,SAAU,CACNtK,KAAMuB,QACNH,SAAS,GAEbmJ,KAAM,CACFvK,KAAMC,OACNmB,QAAS,UAEboJ,SAAUjJ,QACVF,UAAW,CACPrB,KAAMC,OACNmB,QAAS,UAEbqJ,SAAU,CAACC,SAAUxB,OACrByB,QAAS,CACL3K,KAAMkJ,MACN9H,QAAS,IAAM,IAEnByD,UAAW6F,SACX1B,UAAWzH,QACXiD,YAAakG,SACbjG,WAAYiG,SACZ/E,aAAc+E,SACd9E,UAAW8E,SACXnG,WAAY,CACRvE,KAAMC,OACNmB,QAAS,SAEbwJ,SAAU,CACN5K,KAAMC,OACNmB,QAAS,OAEbP,cAAe,CACXb,KAAMC,OACNmB,QAAS,YAGb3B,MAAO,CAACQ,OAAQkB,SAEd0J,GAAkB5J,OAAO6J,KAAKC,GAEpCtJ,GAAe7B,EAAgB,CAC3BC,KAAM,WACNmL,cAAc,EACdlL,MAJyBmB,OAAO6F,OAAO7F,OAAO6F,OAAO7F,OAAO6F,OAAO,CAAE,EAAEiE,GAAmBV,IAAoBY,EAASnL,OAKvH,KAAA0B,CAAM1B,GACI,MAAAoL,EAAsB3L,GAAI,GAC1B0C,EAAgBkJ,EAAeC,EAAMtL,EAAO,QAASoL,GACrDG,EAAcxI,GAAS,KACnB,MAAA+H,SAAEA,EAAU/J,cAAAA,GAAkBf,EAC7B,OAAAwL,EAAexL,EAAM6K,QAAS,CACjCY,OAAOjE,GACIA,EAAKsD,GAEhBY,YAAYlE,IACiB,IAAlBA,EAAKtE,SAEhByI,WAAWnE,GACc,YAAdA,EAAKtH,MAAoC,WAAdsH,EAAKtH,KAE3C0L,YAAYpE,GACDA,EAAKzG,IAEnB,IAEC8K,EAAa9I,GAAS,IACjBwI,EAAY5L,MAAMmM,YAEvBjK,EAAcpC,EAAI,MAClBqC,EAAiBrC,EAAI,MACrBsC,EAA2BtC,EAAI,MAC/BsM,EAAgBhJ,GAAS,KAC3B,IAAI2D,EAAIC,EAAIqF,EACH,OAAgK,QAAhKA,EAA+F,QAAzFrF,EAAkC,QAA5BD,EAAK7E,EAAYlC,aAA0B,IAAP+G,EAAgBA,EAAK5E,EAAenC,aAA0B,IAAPgH,EAAgBA,EAAK5E,EAAyBpC,aAA0B,IAAPqM,EAAgBA,EAAK,IAAA,IAEpMhK,EAAoBe,GAAS,IAAMwI,EAAY5L,MAAMsM,QAAQF,EAAcpM,OAAOuM,UAClFjK,EAAmBc,GAAS,IAAMwI,EAAY5L,MAAMsM,QAAQjM,EAAML,OAAOuM,WCzFxE,SAAqBrB,EAAU,CAAE,EAAEsB,GAC9C,MAAMC,EAAQC,EAAS,CACnBC,MAAM,EACNC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,KAEHC,QAAEA,EAASC,MAAAA,GAAU/B,EACrBgC,EAAkBzG,IACpB,OAAQA,EAAEtC,KACN,IAAK,UACDsI,EAAME,MAAO,EACb,MACJ,IAAK,OACDF,EAAMG,SAAU,EAChBH,EAAMI,KAAM,EACZ,MACJ,IAAK,QACDJ,EAAMK,OAAQ,EACd,MACJ,IAAK,MACDL,EAAMM,KAAM,OAGJ,IAAZC,GACAxL,OAAO6J,KAAK2B,GAASG,SAAehJ,IAChC,GAAIA,IAAQsC,EAAEtC,IACV,OACE,MAAAiJ,EAAUJ,EAAQ7I,GACpB,GAAmB,mBAAZiJ,EACPA,EAAQ3G,OAEP,CACD,MAAM4G,KAAEA,GAAO,EAAOC,QAAAA,GAAU,GAAUF,EACtCC,GACA5G,EAAE8G,kBACFD,GACA7G,EAAE+G,iBACNJ,EAAQA,QAAQ3G,EACnB,IAER,EAECgH,EAAgBhH,IAClB,OAAQA,EAAEtC,KACN,IAAK,UACDsI,EAAME,MAAO,EACb,MACJ,IAAK,OACDF,EAAMG,SAAU,EAChBH,EAAMI,KAAM,EACZ,MACJ,IAAK,QACDJ,EAAMK,OAAQ,EACd,MACJ,IAAK,MACDL,EAAMM,KAAM,OAGN,IAAVE,GACAzL,OAAO6J,KAAK4B,GAAOE,SAAehJ,IAC9B,GAAIA,IAAQsC,EAAEtC,IACV,OACE,MAAAiJ,EAAUH,EAAM9I,GAClB,GAAmB,mBAAZiJ,EACPA,EAAQ3G,OAEP,CACD,MAAM4G,KAAEA,GAAO,EAAOC,QAAAA,GAAU,GAAUF,EACtCC,GACA5G,EAAE8G,kBACFD,GACA7G,EAAE+G,iBACNJ,EAAQA,QAAQ3G,EACnB,IAER,EAEC1E,EAAQ,WACS,IAAfyK,GAA4BA,EAAWxM,SACpC0N,EAAA,UAAWC,SAAUT,GACrBQ,EAAA,QAASC,SAAUF,SAEP,IAAfjB,GACA1I,EAAM0I,GAAqBxM,IACnBA,GACG0N,EAAA,UAAWC,SAAUT,GACrBQ,EAAA,QAASC,SAAUF,KAGlBG,EAAA,UAAWD,SAAUT,GACrBU,EAAA,QAASD,SAAUF,GAC1B,GAER,EAEDI,KACAC,EAAc/L,GACdgM,GAAgB,WACO,IAAfvB,GAA4BA,EAAWxM,SACnC4N,EAAA,UAAWD,SAAUT,GACrBU,EAAA,QAASD,SAAUF,GAC1B,SAMFO,EAASvB,EACpB,CDjBoBwB,CAAA,CACRjB,QAAS,CACLkB,QAAS,CACLZ,SAAS,EACTF,QA2EZ,WACIe,EAAc,KACjB,GA3EOC,WAAY,CACRd,SAAS,EACTF,QAoEZ,WACIe,EAAc,QACjB,GApEOE,UAAW,CACPf,SAAS,EACTF,QAsEZ,WACIe,EAAc,OACjB,GAtEOG,UAAW,CACPhB,SAAS,EACTF,QAyDZ,WACIe,EAAc,OACjB,GAzDOI,MAAO,CACHjB,SAAS,EACTF,QAiEZ,WACI,MAAMoB,EAAcC,KACfD,aAAiD,EAASA,EAAYE,SAAWlM,EAAcxC,QACvFqG,EAAAmI,EAAYrK,IAAKqK,EAAYrN,SACtCmF,GAAa,GAEpB,GArEOqI,OAgDR,WACIrI,GAAa,EAChB,IA3E0BZ,GAAQ,IACxBrF,EAAMwK,UAAYrI,EAAcxC,SA2B3C,MAAM4O,mBAAEA,EAAAC,oBAAoBA,GAAwBC,EAAUzO,GACxD0O,EAAWvD,EAAS,WAAY,YAAanB,GAAO2E,EAAe3O,EAAOuO,GA0BvE,SAAAvI,EAASlC,EAAK0D,GACb,MAAAmD,SAAEA,GAAa3K,EACjB2K,GACK7D,EAAA6D,EAAU7G,EAAK0D,EAC3B,CACD,SAASvB,EAAatG,GAClB,MAAQ,gBAAiBiP,EAAeC,aAAAA,GAAiB7O,EACrD4O,GACA9H,EAAK8H,EAAejP,GACpBkP,GACA/H,EAAK+H,EAAclP,GACvByL,EAAoBzL,MAAQA,CAC/B,CACD,SAASmP,IACLjN,EAAYlC,MAAQ,KACpBmC,EAAenC,MAAQ,KACvBoC,EAAyBpC,MAAQ,IACpC,CAuBD,SAASyO,IACD,IAAA1H,EACE,MAAE/G,MAAOoP,GAAaxD,GACpB5L,MAAOqP,GAAejD,EAC1B,OAACgD,GAA2B,OAAfC,GAE8B,QAAvCtI,EAAKqI,EAASE,QAAQD,UAAgC,IAAPtI,EAAgBA,EAD5D,IAEd,CACD,SAASoH,EAAcoB,GACb,MAAEvP,MAAOqP,GAAejD,GACtBpM,OAAOwP,sBAAEA,IAA4B5D,EAC7C,IAAI6D,EAAkB,KACtB,GAAmB,OAAfJ,EAAqB,CACrB,MAAMK,EAAYF,IACA,OAAdE,IACAD,EAAkBC,EAAUvL,IAEnC,KACI,CACD,MAAMwL,EAAclB,IACpB,GAAIkB,EAAa,CACT,IAAAC,EACJ,OAAQL,GACJ,IAAK,OACDK,EAAWD,EAAYE,UACvB,MACJ,IAAK,KACDD,EAAWD,EAAYG,UACvB,MACJ,IAAK,QACDF,EAAWD,EAAYI,WACvB,MACJ,IAAK,OACDH,EAAWD,EAAYK,YAG3BJ,IACAH,EAAkBG,EAASzL,IAClC,CACJ,CACuB,OAApBsL,IACAvN,EAAYlC,MAAQ,KACpBmC,EAAenC,MAAQyP,EAE9B,CA7GD5K,EAAQ7D,EAAsB,CAC1B2B,cAAegJ,EAAMtL,EAAO,cAC5BuC,iBAAkB+I,EAAMtL,EAAO,iBAC/BoC,eAAgBkJ,EAAMtL,EAAO,eAC7BqC,cAAeiJ,EAAMtL,EAAO,cAC5B6B,cACAC,iBACAC,2BACAC,oBACAC,mBACAC,YAAaoJ,EAAMtL,EAAO,YAC1BmC,gBACAM,aAAc6I,EAAMtL,EAAO,aAC3BwC,gBAAiB8I,EAAMtL,EAAO,gBAC9B0C,aAAc4I,EAAMtL,EAAO,aAC3BgG,WACAC,iBAGExC,EAAAtB,GAAgBxC,IACbK,EAAMiF,UAAatF,MAEvB,IAwFC,MAAAiQ,EAAa7M,GAAS,KAClB,MAAA0H,KAAEA,EAAMC,SAAAA,GAAa1K,GACnB6P,QAAQC,qBAAEA,GAAwBC,KAAAA,GAASrB,EAAS/O,OACtDqQ,QAAEA,EAASC,aAAAA,EAAAC,aAAcA,EAAcC,sBAAAA,EAAuB,CAACC,EAAU,wBAAyB3F,IAAQ4F,EAAuB,CAACD,EAAU,oBAAqB3F,IAAQ6F,EAAmB,CAACF,EAAU,wBAAyB3F,IAAQ8F,EAAuB,CAACH,EAAU,oBAAqB3F,IAAQ+F,EAAmB,CAACJ,EAAU,WAAY3F,IAAQgG,EAAU,CAACL,EAAU,eAAgB3F,IAAQiG,EAAc,CAACN,EAAU,iBAAkB3F,IAAQkG,GAAmBZ,EAC5ca,EAAO,CACT,aAAcd,EACd,gBAAiBW,EACjB,cAAeT,EACf,oBAAqBE,EACrB,oBAAqBQ,EACrB,0BAA2BF,EAC3B,+BAAgCD,EAChC,0BAA2BD,EAC3B,+BAAgCD,EAChC,uBAAwBM,EACxB,oBAAqBV,EACrB,8BAA+BE,GA8B5B,OA3BHzF,GACKkG,EAAA,aAAeb,EAAKc,cACpBD,EAAA,0BAA4Bb,EAAKe,yBACjCF,EAAA,2BAA6Bb,EAAKgB,0BAClCH,EAAA,yBAA2Bb,EAAKiB,wBAChCJ,EAAA,+BAAiCb,EAAKkB,6BACtCL,EAAA,gCACDb,EAAKmB,8BACJN,EAAA,sCACDb,EAAKoB,mCACJP,EAAA,oBAAsBb,EAAKqB,oBAC3BR,EAAA,oBAAsBb,EAAKsB,oBAC3BT,EAAA,+BAAiCb,EAAKuB,+BAGtCV,EAAA,aAAeb,EAAKwB,MACpBX,EAAA,0BAA4Bb,EAAKyB,iBACjCZ,EAAA,2BAA6Bb,EAAK0B,kBAClCb,EAAA,yBAA2Bb,EAAK2B,gBAChCd,EAAA,+BAAiCb,EAAK4B,qBACtCf,EAAA,gCAAkCb,EAAK6B,sBACvChB,EAAA,sCACDb,EAAK8B,2BACJjB,EAAA,oBAAsBb,EAAK+B,YAC3BlB,EAAA,oBAAsBb,EAAKgC,YAC3BnB,EAAA,+BAAiCb,EAAKiC,sBAExCpB,CAAA,IAELqB,EAAmBzD,EACnB0D,EAAc,WAAYnP,GAAS,IAAM,GAAG/C,EAAMyK,KAAK,KAAKzK,EAAM0K,SAAW,IAAM,OAAOkF,EAAY5P,QACtG,EACC,MAAA,CACHmS,gBAAiB5D,EACjB6D,YAAa1D,EAEbzH,QAAS4E,EAETwG,WAAYlQ,EAEZmQ,iBAAkB,KACTtS,EAAMiF,eAIfgB,eACAsM,QAAS/D,OAAsB,EAAYoB,EAC3C4C,WAAYP,aAA2D,EAASA,EAAiBO,WACjGC,SAAUR,aAA2D,EAASA,EAAiBQ,SAEtG,EACD,MAAApS,GACI,MAmBM+R,YAAEA,GAAgB5R,KAClBkS,EAAe,CACjBzK,KAAMzH,KAAK6R,WACXM,MAAOP,EAAYQ,MAAMC,QACzBC,eAAgBV,EAAYW,cAAcF,QAC1CG,qBAAsBxS,KAAK8R,iBAC3BW,mBAzBsB,CAACC,EAAWzT,EAAKuK,EAAO5C,EAAcC,KACxD,IAAAX,EACE,MAAAyL,gBAAEA,EAAiBpN,UAAAA,GAAcvE,KACd,QAAxBkG,EAAKlG,KAAKiS,gBAA6B,IAAP/L,GAAyBA,EAAGI,KAAKtG,MAClE,MAAM2S,GAAiBpO,aAA6C,EAASA,OAAU,EAAWvE,KAAKyG,QAAQ4B,KAAKuK,GAAMA,EAAEtS,aAAc,GACpIuS,EAAgB,CAClB5T,IAAKD,EAAgBC,GACrBc,MAAO,CAAC2S,EAAW,GAAGf,aAA4B3R,KAAKgS,YACvDvS,UAAWkS,EACXlL,QAASzG,KAAKyG,QACd+C,MAAO,CAACA,EAAOxJ,KAAK+R,SACpBrJ,UAAW1I,KAAK0I,UAChBC,WAAY3I,KAAK2I,WACjB3H,WAAYhB,KAAKgB,WACjB4F,eACAC,gBAEJ,OAAO/G,EAAEqC,GAAe8E,EAAWjH,KAAK8S,OAAQD,EAAeF,GAAc,EAS7EtE,aAAcrO,KAAKyF,aACnB,qBAAiB,GAErB,OAAQ3F,EAAEiT,EAAUpS,OAAO6F,OAAO,CAAE,EAAEwM,EAAKhT,KAAKiT,OAAQ1I,IAAkB2H,GAAe,CACrFgB,QAAS,KAAQ,IAAIhN,EAAIC,EAAY,OAAqC,QAArCA,GAAMD,EAAKlG,KAAKmT,QAAQrS,eAA4B,IAAPqF,OAAgB,EAASA,EAAGG,KAAKJ,EAAE,GAE5H","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}