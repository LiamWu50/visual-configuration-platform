{"version":3,"file":"Grid-9b57f097.js","sources":["../../../node_modules/seemly/es/css/responsive.js","../../../node_modules/vooks/es/use-breakpoints.js","../../../node_modules/naive-ui/es/grid/src/config.js","../../../node_modules/naive-ui/es/grid/src/GridItem.js","../../../node_modules/naive-ui/es/config-provider/src/config.js","../../../node_modules/naive-ui/es/grid/src/Grid.js","../../../node_modules/naive-ui/es/_utils/vue/is-node-v-show-false.js"],"sourcesContent":["export function parseResponsiveProp(reponsiveProp) {\n    if (typeof reponsiveProp === \"number\") {\n        return {\n            '': reponsiveProp.toString()\n        };\n    }\n    const params = {};\n    reponsiveProp.split(/ +/).forEach((pairLiteral) => {\n        if (pairLiteral === '')\n            return;\n        const [prefix, value] = pairLiteral.split(':');\n        if (value === undefined) {\n            params[''] = prefix;\n        }\n        else {\n            params[prefix] = value;\n        }\n    });\n    return params;\n}\nfunction parseResponsivePropValue(reponsiveProp, activeKeyOrSize) {\n    var _a;\n    if (reponsiveProp === undefined || reponsiveProp === null)\n        return undefined;\n    const classObj = parseResponsiveProp(reponsiveProp);\n    if (activeKeyOrSize === undefined)\n        return classObj[''];\n    if (typeof activeKeyOrSize === 'string') {\n        return (_a = classObj[activeKeyOrSize]) !== null && _a !== void 0 ? _a : classObj[''];\n    }\n    else if (Array.isArray(activeKeyOrSize)) {\n        for (let i = activeKeyOrSize.length - 1; i >= 0; --i) {\n            const key = activeKeyOrSize[i];\n            if (key in classObj)\n                return classObj[key];\n        }\n        return classObj[''];\n    }\n    else {\n        // Here we suppose all the keys are number formatted\n        let activeValue = undefined;\n        let activeKey = -1;\n        Object.keys(classObj).forEach((key) => {\n            const keyAsNum = Number(key);\n            if (!Number.isNaN(keyAsNum) &&\n                activeKeyOrSize >= keyAsNum &&\n                keyAsNum >= activeKey) {\n                activeKey = keyAsNum;\n                activeValue = classObj[key];\n            }\n        });\n        return activeValue;\n    }\n}\nexport { parseResponsivePropValue };\n","/* eslint-disable @typescript-eslint/consistent-type-assertions */\nimport { ref, computed, onBeforeUnmount } from 'vue';\nimport { isBrowser } from './utils';\nexport const defaultBreakpointOptions = {\n    // mobile\n    // 0 ~ 640 doesn't mean it should display well in all the range,\n    // but means you should treat it like a mobile phone.)\n    xs: 0,\n    s: 640,\n    m: 1024,\n    l: 1280,\n    xl: 1536,\n    '2xl': 1920 // normal desktop display\n};\nfunction createMediaQuery(screenWidth) {\n    return `(min-width: ${screenWidth}px)`;\n}\nconst mqlMap = {};\nfunction useBreakpoints(screens = defaultBreakpointOptions) {\n    if (!isBrowser)\n        return computed(() => []);\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (typeof window.matchMedia !== 'function')\n        return computed(() => []);\n    const breakpointStatusRef = ref({});\n    const breakpoints = Object.keys(screens);\n    const updateBreakpoints = (e, breakpointName) => {\n        if (e.matches)\n            breakpointStatusRef.value[breakpointName] = true;\n        else\n            breakpointStatusRef.value[breakpointName] = false;\n    };\n    breakpoints.forEach((key) => {\n        const breakpointValue = screens[key];\n        let mql;\n        let cbs;\n        if (mqlMap[breakpointValue] === undefined) {\n            mql = window.matchMedia(createMediaQuery(breakpointValue));\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            if (mql.addEventListener) {\n                mql.addEventListener('change', (e) => {\n                    cbs.forEach((cb) => {\n                        cb(e, key);\n                    });\n                });\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            }\n            else if (mql.addListener) {\n                mql.addListener((e) => {\n                    cbs.forEach((cb) => {\n                        cb(e, key);\n                    });\n                });\n            }\n            cbs = new Set();\n            mqlMap[breakpointValue] = {\n                mql,\n                cbs\n            };\n        }\n        else {\n            mql = mqlMap[breakpointValue].mql;\n            cbs = mqlMap[breakpointValue].cbs;\n        }\n        cbs.add(updateBreakpoints);\n        if (mql.matches) {\n            cbs.forEach((cb) => {\n                cb(mql, key);\n            });\n        }\n    });\n    onBeforeUnmount(() => {\n        breakpoints.forEach((breakpoint) => {\n            const { cbs } = mqlMap[screens[breakpoint]];\n            if (cbs.has(updateBreakpoints)) {\n                cbs.delete(updateBreakpoints);\n            }\n        });\n    });\n    return computed(() => {\n        const { value } = breakpointStatusRef;\n        return breakpoints.filter((key) => value[key]);\n    });\n}\nexport default useBreakpoints;\n","import { createInjectionKey } from '../../_utils';\nexport const defaultSpan = 1;\nexport const gridInjectionKey = createInjectionKey('n-grid');\n","import { h, defineComponent, inject, getCurrentInstance, computed } from 'vue';\nimport { pxfy } from 'seemly';\nimport { keysOf } from '../../_utils';\nimport { gridInjectionKey } from './config';\nexport const defaultSpan = 1;\nexport const gridItemProps = {\n    span: {\n        type: [Number, String],\n        default: defaultSpan\n    },\n    offset: {\n        type: [Number, String],\n        default: 0\n    },\n    suffix: Boolean,\n    // private props\n    privateOffset: Number,\n    privateSpan: Number,\n    privateColStart: Number,\n    privateShow: {\n        type: Boolean,\n        default: true\n    }\n};\nexport const gridItemPropKeys = keysOf(gridItemProps);\nexport default defineComponent({\n    __GRID_ITEM__: true,\n    name: 'GridItem',\n    alias: ['Gi'],\n    props: gridItemProps,\n    setup() {\n        const { isSsrRef, xGapRef, itemStyleRef, overflowRef, layoutShiftDisabledRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(gridInjectionKey);\n        const self = getCurrentInstance();\n        return {\n            overflow: overflowRef,\n            itemStyle: itemStyleRef,\n            layoutShiftDisabled: layoutShiftDisabledRef,\n            mergedXGap: computed(() => {\n                return pxfy(xGapRef.value || 0);\n            }),\n            deriveStyle: () => {\n                void isSsrRef.value;\n                // Here is quite a hack, I hope there is a better way to solve it\n                const { privateSpan = defaultSpan, privateShow = true, privateColStart = undefined, privateOffset = 0\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                 } = self.vnode.props;\n                const { value: xGap } = xGapRef;\n                const mergedXGap = pxfy(xGap || 0);\n                return {\n                    display: !privateShow ? 'none' : '',\n                    gridColumn: `${privateColStart !== null && privateColStart !== void 0 ? privateColStart : `span ${privateSpan}`} / span ${privateSpan}`,\n                    marginLeft: privateOffset\n                        ? `calc((100% - (${privateSpan} - 1) * ${mergedXGap}) / ${privateSpan} * ${privateOffset} + ${mergedXGap} * ${privateOffset})`\n                        : ''\n                };\n            }\n        };\n    },\n    render() {\n        var _a, _b;\n        if (this.layoutShiftDisabled) {\n            const { span, offset, mergedXGap } = this;\n            return (h(\"div\", { style: {\n                    gridColumn: `span ${span} / span ${span}`,\n                    marginLeft: offset\n                        ? `calc((100% - (${span} - 1) * ${mergedXGap}) / ${span} * ${offset} + ${mergedXGap} * ${offset})`\n                        : ''\n                } }, this.$slots));\n        }\n        return (h(\"div\", { style: [this.itemStyle, this.deriveStyle()] }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a, { overflow: this.overflow })));\n    }\n});\n","export const defaultBreakpoints = {\n    xs: 0,\n    s: 640,\n    m: 1024,\n    l: 1280,\n    xl: 1536,\n    xxl: 1920 // normal desktop display\n};\n","import { h, defineComponent, computed, provide, toRef, mergeProps, ref, cloneVNode, vShow, onMounted } from 'vue';\nimport { useBreakpoints, useMemo } from 'vooks';\nimport { VResizeObserver } from 'vueuc';\nimport { pxfy, parseResponsivePropValue, beforeNextFrameOnce } from 'seemly';\nimport { defaultBreakpoints } from '../../config-provider/src/config';\nimport { useConfig } from '../../_mixins';\nimport { getSlot, flatten, isBrowser, isNodeVShowFalse } from '../../_utils';\nimport { defaultSpan, gridInjectionKey } from './config';\nconst defaultCols = 24;\nconst SSR_ATTR_NAME = '__ssr__';\nexport const gridProps = {\n    layoutShiftDisabled: Boolean,\n    responsive: {\n        type: [String, Boolean],\n        default: 'self'\n    },\n    cols: {\n        type: [Number, String],\n        default: defaultCols\n    },\n    itemResponsive: Boolean,\n    collapsed: Boolean,\n    // may create grid rows < collapsedRows since a item may take all the row\n    collapsedRows: {\n        type: Number,\n        default: 1\n    },\n    itemStyle: [Object, String],\n    xGap: {\n        type: [Number, String],\n        default: 0\n    },\n    yGap: {\n        type: [Number, String],\n        default: 0\n    }\n};\nexport default defineComponent({\n    name: 'Grid',\n    inheritAttrs: false,\n    props: gridProps,\n    setup(props) {\n        const { mergedClsPrefixRef, mergedBreakpointsRef } = useConfig(props);\n        const numRegex = /^\\d+$/;\n        const widthRef = ref(undefined);\n        const breakpointsRef = useBreakpoints((mergedBreakpointsRef === null || mergedBreakpointsRef === void 0 ? void 0 : mergedBreakpointsRef.value) || defaultBreakpoints);\n        const isResponsiveRef = useMemo(() => {\n            if (props.itemResponsive)\n                return true;\n            if (!numRegex.test(props.cols.toString()))\n                return true;\n            if (!numRegex.test(props.xGap.toString()))\n                return true;\n            if (!numRegex.test(props.yGap.toString()))\n                return true;\n            return false;\n        });\n        const responsiveQueryRef = computed(() => {\n            if (!isResponsiveRef.value)\n                return undefined;\n            return props.responsive === 'self' ? widthRef.value : breakpointsRef.value;\n        });\n        const responsiveColsRef = useMemo(() => {\n            var _a;\n            return ((_a = Number(parseResponsivePropValue(props.cols.toString(), responsiveQueryRef.value))) !== null && _a !== void 0 ? _a : defaultCols);\n        });\n        const responsiveXGapRef = useMemo(() => parseResponsivePropValue(props.xGap.toString(), responsiveQueryRef.value));\n        const responsiveYGapRef = useMemo(() => parseResponsivePropValue(props.yGap.toString(), responsiveQueryRef.value));\n        const handleResize = (entry) => {\n            widthRef.value = entry.contentRect.width;\n        };\n        const handleResizeRaf = (entry) => {\n            beforeNextFrameOnce(handleResize, entry);\n        };\n        const overflowRef = ref(false);\n        const handleResizeRef = computed(() => {\n            if (props.responsive === 'self') {\n                return handleResizeRaf;\n            }\n            return undefined;\n        });\n        // for SSR, fix bug https://github.com/tusen-ai/naive-ui/issues/2462\n        const isSsrRef = ref(false);\n        const contentElRef = ref();\n        onMounted(() => {\n            const { value: contentEl } = contentElRef;\n            if (contentEl) {\n                if (contentEl.hasAttribute(SSR_ATTR_NAME)) {\n                    contentEl.removeAttribute(SSR_ATTR_NAME);\n                    isSsrRef.value = true;\n                }\n            }\n        });\n        provide(gridInjectionKey, {\n            layoutShiftDisabledRef: toRef(props, 'layoutShiftDisabled'),\n            isSsrRef,\n            itemStyleRef: toRef(props, 'itemStyle'),\n            xGapRef: responsiveXGapRef,\n            overflowRef\n        });\n        return {\n            isSsr: !isBrowser,\n            contentEl: contentElRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            style: computed(() => {\n                if (props.layoutShiftDisabled) {\n                    return {\n                        width: '100%',\n                        display: 'grid',\n                        gridTemplateColumns: `repeat(${props.cols}, minmax(0, 1fr))`,\n                        columnGap: pxfy(props.xGap),\n                        rowGap: pxfy(props.yGap)\n                    };\n                }\n                return {\n                    width: '100%',\n                    display: 'grid',\n                    gridTemplateColumns: `repeat(${responsiveColsRef.value}, minmax(0, 1fr))`,\n                    columnGap: pxfy(responsiveXGapRef.value),\n                    rowGap: pxfy(responsiveYGapRef.value)\n                };\n            }),\n            isResponsive: isResponsiveRef,\n            responsiveQuery: responsiveQueryRef,\n            responsiveCols: responsiveColsRef,\n            handleResize: handleResizeRef,\n            overflow: overflowRef\n        };\n    },\n    render() {\n        if (this.layoutShiftDisabled) {\n            return h('div', mergeProps({\n                ref: 'contentEl',\n                class: `${this.mergedClsPrefix}-grid`,\n                style: this.style\n            }, this.$attrs), this.$slots);\n        }\n        const renderContent = () => {\n            var _a, _b, _c, _d, _e, _f, _g;\n            this.overflow = false;\n            // render will be called twice when mounted, I can't figure out why\n            // 2 jobs will be pushed into job queues with same id, and then be flushed\n            const rawChildren = flatten(getSlot(this));\n            const childrenAndRawSpan = [];\n            const { collapsed, collapsedRows, responsiveCols, responsiveQuery } = this;\n            rawChildren.forEach((child) => {\n                var _a, _b, _c, _d;\n                if (((_a = child === null || child === void 0 ? void 0 : child.type) === null || _a === void 0 ? void 0 : _a.__GRID_ITEM__) !== true)\n                    return;\n                if (isNodeVShowFalse(child)) {\n                    const clonedNode = cloneVNode(child);\n                    if (clonedNode.props) {\n                        clonedNode.props.privateShow = false;\n                    }\n                    else {\n                        clonedNode.props = { privateShow: false };\n                    }\n                    childrenAndRawSpan.push({\n                        child: clonedNode,\n                        rawChildSpan: 0\n                    });\n                    return;\n                }\n                // We don't want v-show to control display, so we need to stripe it\n                // here, nor it may mess child's style\n                child.dirs = ((_b = child.dirs) === null || _b === void 0 ? void 0 : _b.filter(({ dir }) => dir !== vShow)) || null;\n                const clonedChild = cloneVNode(child);\n                const rawChildSpan = Number((_d = parseResponsivePropValue((_c = clonedChild.props) === null || _c === void 0 ? void 0 : _c.span, responsiveQuery)) !== null && _d !== void 0 ? _d : defaultSpan);\n                if (rawChildSpan === 0)\n                    return;\n                childrenAndRawSpan.push({\n                    child: clonedChild,\n                    rawChildSpan\n                });\n            });\n            let suffixSpan = 0;\n            const maybeSuffixNode = (_a = childrenAndRawSpan[childrenAndRawSpan.length - 1]) === null || _a === void 0 ? void 0 : _a.child;\n            if (maybeSuffixNode === null || maybeSuffixNode === void 0 ? void 0 : maybeSuffixNode.props) {\n                const suffixPropValue = (_b = maybeSuffixNode.props) === null || _b === void 0 ? void 0 : _b.suffix;\n                if (suffixPropValue !== undefined && suffixPropValue !== false) {\n                    suffixSpan = (_d = (_c = maybeSuffixNode.props) === null || _c === void 0 ? void 0 : _c.span) !== null && _d !== void 0 ? _d : defaultSpan;\n                    maybeSuffixNode.props.privateSpan = suffixSpan;\n                    maybeSuffixNode.props.privateColStart =\n                        responsiveCols + 1 - suffixSpan;\n                    maybeSuffixNode.props.privateShow =\n                        (_e = maybeSuffixNode.props.privateShow) !== null && _e !== void 0 ? _e : true;\n                }\n            }\n            let spanCounter = 0;\n            let done = false;\n            for (const { child, rawChildSpan } of childrenAndRawSpan) {\n                if (done) {\n                    this.overflow = true;\n                }\n                if (!done) {\n                    const childOffset = Number((_g = parseResponsivePropValue((_f = child.props) === null || _f === void 0 ? void 0 : _f.offset, responsiveQuery)) !== null && _g !== void 0 ? _g : 0);\n                    // it could be 0 sometimes (v-show = false)\n                    const childSpan = Math.min(rawChildSpan + childOffset, responsiveCols);\n                    if (!child.props) {\n                        child.props = {\n                            privateSpan: childSpan,\n                            privateOffset: childOffset\n                        };\n                    }\n                    else {\n                        child.props.privateSpan = childSpan;\n                        child.props.privateOffset = childOffset;\n                    }\n                    if (collapsed) {\n                        const remainder = spanCounter % responsiveCols;\n                        if (childSpan + remainder > responsiveCols) {\n                            spanCounter += responsiveCols - remainder;\n                        }\n                        if (childSpan + spanCounter + suffixSpan >\n                            collapsedRows * responsiveCols) {\n                            done = true;\n                        }\n                        else {\n                            spanCounter += childSpan;\n                        }\n                    }\n                }\n                if (done) {\n                    if (child.props) {\n                        // suffix node's privateShow may be true\n                        if (child.props.privateShow !== true) {\n                            child.props.privateShow = false;\n                        }\n                    }\n                    else {\n                        child.props = {\n                            privateShow: false\n                        };\n                    }\n                }\n            }\n            return h('div', mergeProps({\n                ref: 'contentEl',\n                class: `${this.mergedClsPrefix}-grid`,\n                style: this.style,\n                [SSR_ATTR_NAME]: this.isSsr || undefined\n            }, this.$attrs), childrenAndRawSpan.map(({ child }) => child));\n        };\n        return this.isResponsive && this.responsive === 'self' ? (h(VResizeObserver, { onResize: this.handleResize }, {\n            default: renderContent\n        })) : (renderContent());\n    }\n});\n","import { vShow } from 'vue';\nexport function isNodeVShowFalse(vNode) {\n    var _a;\n    const showDir = (_a = vNode.dirs) === null || _a === void 0 ? void 0 : _a.find(({ dir }) => dir === vShow);\n    return !!(showDir && showDir.value === false);\n}\n"],"names":["parseResponsivePropValue","reponsiveProp","activeKeyOrSize","_a","classObj","toString","params","split","forEach","pairLiteral","prefix","value","parseResponsiveProp","Array","isArray","i","length","key","activeValue","activeKey","Object","keys","keyAsNum","Number","isNaN","defaultBreakpointOptions","xs","s","m","l","xl","mqlMap","gridInjectionKey","createInjectionKey","defaultSpan","NGi","defineComponent","__GRID_ITEM__","name","alias","props","span","type","String","default","offset","suffix","Boolean","privateOffset","privateSpan","privateColStart","privateShow","setup","isSsrRef","xGapRef","itemStyleRef","overflowRef","layoutShiftDisabledRef","inject","self","getCurrentInstance","overflow","itemStyle","layoutShiftDisabled","mergedXGap","computed","pxfy","deriveStyle","vnode","xGap","display","gridColumn","marginLeft","render","_b","this","h","style","$slots","call","defaultBreakpoints","xxl","SSR_ATTR_NAME","NGrid","inheritAttrs","responsive","cols","itemResponsive","collapsed","collapsedRows","yGap","mergedClsPrefixRef","mergedBreakpointsRef","useConfig","numRegex","widthRef","ref","breakpointsRef","screens","isBrowser","window","matchMedia","breakpointStatusRef","breakpoints","updateBreakpoints","e","breakpointName","matches","breakpointValue","mql","cbs","addEventListener","cb","addListener","Set","add","onBeforeUnmount","breakpoint","has","delete","filter","useBreakpoints","isResponsiveRef","useMemo","test","responsiveQueryRef","responsiveColsRef","responsiveXGapRef","responsiveYGapRef","handleResize","entry","contentRect","width","handleResizeRaf","beforeNextFrameOnce","handleResizeRef","contentElRef","onMounted","contentEl","hasAttribute","removeAttribute","provide","toRef","isSsr","mergedClsPrefix","gridTemplateColumns","columnGap","rowGap","isResponsive","responsiveQuery","responsiveCols","mergeProps","class","$attrs","renderContent","_c","_d","_e","_f","_g","rawChildren","flatten","getSlot","childrenAndRawSpan","child","vNode","showDir","dirs","find","dir","vShow","isNodeVShowFalse","clonedNode","cloneVNode","push","rawChildSpan","clonedChild","suffixSpan","maybeSuffixNode","suffixPropValue","spanCounter","done","childOffset","childSpan","Math","min","remainder","map","VResizeObserver","onResize"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}