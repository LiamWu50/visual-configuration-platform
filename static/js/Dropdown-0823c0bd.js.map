{"version":3,"file":"Dropdown-0823c0bd.js","sources":["../../../node_modules/naive-ui/es/_utils/vue/create-ref-setter.js","../../../node_modules/naive-ui/es/dropdown/src/DropdownDivider.js","../../../node_modules/naive-ui/es/icon/src/styles/index.cssr.js","../../../node_modules/naive-ui/es/icon/src/Icon.js","../../../node_modules/naive-ui/es/dropdown/src/context.js","../../../node_modules/naive-ui/es/dropdown/src/utils.js","../../../node_modules/naive-ui/es/dropdown/src/DropdownOption.js","../../../node_modules/naive-ui/es/_utils/composable/use-deferred-true.js","../../../node_modules/naive-ui/es/dropdown/src/DropdownGroupHeader.js","../../../node_modules/naive-ui/es/dropdown/src/DropdownGroup.js","../../../node_modules/naive-ui/es/dropdown/src/DropdownRenderOption.js","../../../node_modules/naive-ui/es/dropdown/src/DropdownMenu.js","../../../node_modules/naive-ui/es/dropdown/src/styles/index.cssr.js","../../../node_modules/naive-ui/es/dropdown/src/Dropdown.js","../../../node_modules/vooks/es/use-keyboard.js"],"sourcesContent":["export function createRefSetter(ref) {\n    return (inst) => {\n        if (inst) {\n            ref.value = inst.$el;\n        }\n        else {\n            ref.value = null;\n        }\n    };\n}\n","import { h, defineComponent } from 'vue';\nexport default defineComponent({\n    name: 'DropdownDivider',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        }\n    },\n    render() {\n        return h(\"div\", { class: `${this.clsPrefix}-dropdown-divider` });\n    }\n});\n","import { c, cB, cM } from '../../../_utils/cssr';\n// vars:\n// --n-bezier\n// --n-color\n// --n-opacity\nexport default cB('icon', `\n height: 1em;\n width: 1em;\n line-height: 1em;\n text-align: center;\n display: inline-block;\n position: relative;\n fill: currentColor;\n transform: translateZ(0);\n`, [cM('color-transition', {\n  transition: 'color .3s var(--n-bezier)'\n}), cM('depth', {\n  color: 'var(--n-color)'\n}, [c('svg', {\n  opacity: 'var(--n-opacity)',\n  transition: 'opacity .3s var(--n-bezier)'\n})]), c('svg', {\n  height: '1em',\n  width: '1em'\n})]);","import { computed, defineComponent, h, mergeProps } from 'vue';\nimport { useThemeClass, useConfig, useTheme } from '../../_mixins';\nimport { formatLength, warn } from '../../_utils';\nimport { iconLight } from '../styles';\nimport style from './styles/index.cssr';\nexport const iconProps = Object.assign(Object.assign({}, useTheme.props), { depth: [String, Number], size: [Number, String], color: String, component: Object });\nexport const NIcon = defineComponent({\n    _n_icon__: true,\n    name: 'Icon',\n    inheritAttrs: false,\n    props: iconProps,\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Icon', '-icon', style, iconLight, props, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { depth } = props;\n            const { common: { cubicBezierEaseInOut }, self } = themeRef.value;\n            if (depth !== undefined) {\n                const { color, [`opacity${depth}Depth`]: opacity } = self;\n                return {\n                    '--n-bezier': cubicBezierEaseInOut,\n                    '--n-color': color,\n                    '--n-opacity': opacity\n                };\n            }\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-color': '',\n                '--n-opacity': ''\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('icon', computed(() => `${props.depth || 'd'}`), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedStyle: computed(() => {\n                const { size, color } = props;\n                return {\n                    fontSize: formatLength(size),\n                    color\n                };\n            }),\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        var _a;\n        const { $parent, depth, mergedClsPrefix, component, onRender, themeClass } = this;\n        if ((_a = $parent === null || $parent === void 0 ? void 0 : $parent.$options) === null || _a === void 0 ? void 0 : _a._n_icon__) {\n            warn('icon', \"don't wrap `n-icon` inside `n-icon`\");\n        }\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return h('i', mergeProps(this.$attrs, {\n            role: 'img',\n            class: [\n                `${mergedClsPrefix}-icon`,\n                themeClass,\n                {\n                    [`${mergedClsPrefix}-icon--depth`]: depth,\n                    [`${mergedClsPrefix}-icon--color-transition`]: depth !== undefined\n                }\n            ],\n            style: [this.cssVars, this.mergedStyle]\n        }), component ? h(component) : this.$slots);\n    }\n});\n","import { createInjectionKey } from '../../_utils';\nexport const dropdownMenuInjectionKey = createInjectionKey('n-dropdown-menu');\nexport const dropdownInjectionKey = createInjectionKey('n-dropdown');\nexport const dropdownOptionInjectionKey = createInjectionKey('n-dropdown-option');\n","export function isSubmenuNode(rawNode, childrenField) {\n    return (rawNode.type === 'submenu' ||\n        (rawNode.type === undefined && rawNode[childrenField] !== undefined));\n}\nexport function isGroupNode(rawNode) {\n    return rawNode.type === 'group';\n}\nexport function isDividerNode(rawNode) {\n    return rawNode.type === 'divider';\n}\nexport function isRenderNode(rawNode) {\n    return rawNode.type === 'render';\n}\n","import { h, computed, inject, ref, Transition, defineComponent, provide, mergeProps } from 'vue';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { useMemo } from 'vooks';\nimport { ChevronRightIcon } from '../../_internal/icons';\nimport { render, useDeferredTrue } from '../../_utils';\nimport { NIcon } from '../../icon';\n// eslint-disable-next-line import/no-cycle\nimport NDropdownMenu from './DropdownMenu';\nimport { dropdownMenuInjectionKey, dropdownInjectionKey, dropdownOptionInjectionKey } from './context';\nimport { popoverBodyInjectionKey } from '../../popover/src/interface';\nimport { isSubmenuNode } from './utils';\nimport { happensIn } from 'seemly';\nexport default defineComponent({\n    name: 'DropdownOption',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        tmNode: {\n            type: Object,\n            required: true\n        },\n        parentKey: {\n            type: [String, Number],\n            default: null\n        },\n        placement: {\n            type: String,\n            default: 'right-start'\n        },\n        props: Object,\n        scrollable: Boolean\n    },\n    setup(props) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NDropdown = inject(dropdownInjectionKey);\n        const { hoverKeyRef, keyboardKeyRef, lastToggledSubmenuKeyRef, pendingKeyPathRef, activeKeyPathRef, animatedRef, mergedShowRef, renderLabelRef, renderIconRef, labelFieldRef, childrenFieldRef, renderOptionRef, nodePropsRef, menuPropsRef } = NDropdown;\n        const NDropdownOption = inject(dropdownOptionInjectionKey, null);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NDropdownMenu = inject(dropdownMenuInjectionKey);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NPopoverBody = inject(popoverBodyInjectionKey);\n        const rawNodeRef = computed(() => props.tmNode.rawNode);\n        const hasSubmenuRef = computed(() => {\n            const { value: childrenField } = childrenFieldRef;\n            return isSubmenuNode(props.tmNode.rawNode, childrenField);\n        });\n        const mergedDisabledRef = computed(() => {\n            const { disabled } = props.tmNode;\n            return disabled;\n        });\n        const showSubmenuRef = computed(() => {\n            if (!hasSubmenuRef.value)\n                return false;\n            const { key, disabled } = props.tmNode;\n            if (disabled)\n                return false;\n            const { value: hoverKey } = hoverKeyRef;\n            const { value: keyboardKey } = keyboardKeyRef;\n            const { value: lastToggledSubmenuKey } = lastToggledSubmenuKeyRef;\n            const { value: pendingKeyPath } = pendingKeyPathRef;\n            if (hoverKey !== null)\n                return pendingKeyPath.includes(key);\n            if (keyboardKey !== null) {\n                return (pendingKeyPath.includes(key) &&\n                    pendingKeyPath[pendingKeyPath.length - 1] !== key);\n            }\n            if (lastToggledSubmenuKey !== null)\n                return pendingKeyPath.includes(key);\n            return false;\n        });\n        const shouldDelayRef = computed(() => {\n            return keyboardKeyRef.value === null && !animatedRef.value;\n        });\n        const deferredShowSubmenuRef = useDeferredTrue(showSubmenuRef, 300, shouldDelayRef);\n        const parentEnteringSubmenuRef = computed(() => {\n            return !!(NDropdownOption === null || NDropdownOption === void 0 ? void 0 : NDropdownOption.enteringSubmenuRef.value);\n        });\n        const enteringSubmenuRef = ref(false);\n        provide(dropdownOptionInjectionKey, {\n            enteringSubmenuRef\n        });\n        // methods\n        function handleSubmenuBeforeEnter() {\n            enteringSubmenuRef.value = true;\n        }\n        function handleSubmenuAfterEnter() {\n            enteringSubmenuRef.value = false;\n        }\n        function handleMouseEnter() {\n            const { parentKey, tmNode } = props;\n            if (tmNode.disabled)\n                return;\n            if (!mergedShowRef.value)\n                return;\n            lastToggledSubmenuKeyRef.value = parentKey;\n            keyboardKeyRef.value = null;\n            hoverKeyRef.value = tmNode.key;\n        }\n        function handleMouseMove() {\n            const { tmNode } = props;\n            if (tmNode.disabled)\n                return;\n            if (!mergedShowRef.value)\n                return;\n            if (hoverKeyRef.value === tmNode.key)\n                return;\n            handleMouseEnter();\n        }\n        function handleMouseLeave(e) {\n            if (props.tmNode.disabled)\n                return;\n            if (!mergedShowRef.value)\n                return;\n            const { relatedTarget } = e;\n            if (relatedTarget &&\n                !happensIn({ target: relatedTarget }, 'dropdownOption') &&\n                !happensIn({ target: relatedTarget }, 'scrollbarRail')) {\n                hoverKeyRef.value = null;\n            }\n        }\n        function handleClick() {\n            const { value: hasSubmenu } = hasSubmenuRef;\n            const { tmNode } = props;\n            if (!mergedShowRef.value)\n                return;\n            if (!hasSubmenu && !tmNode.disabled) {\n                NDropdown.doSelect(tmNode.key, tmNode.rawNode);\n                NDropdown.doUpdateShow(false);\n            }\n        }\n        return {\n            labelField: labelFieldRef,\n            renderLabel: renderLabelRef,\n            renderIcon: renderIconRef,\n            siblingHasIcon: NDropdownMenu.showIconRef,\n            siblingHasSubmenu: NDropdownMenu.hasSubmenuRef,\n            menuProps: menuPropsRef,\n            popoverBody: NPopoverBody,\n            animated: animatedRef,\n            mergedShowSubmenu: computed(() => {\n                return deferredShowSubmenuRef.value && !parentEnteringSubmenuRef.value;\n            }),\n            rawNode: rawNodeRef,\n            hasSubmenu: hasSubmenuRef,\n            pending: useMemo(() => {\n                const { value: pendingKeyPath } = pendingKeyPathRef;\n                const { key } = props.tmNode;\n                return pendingKeyPath.includes(key);\n            }),\n            childActive: useMemo(() => {\n                const { value: activeKeyPath } = activeKeyPathRef;\n                const { key } = props.tmNode;\n                const index = activeKeyPath.findIndex((k) => key === k);\n                if (index === -1)\n                    return false;\n                return index < activeKeyPath.length - 1;\n            }),\n            active: useMemo(() => {\n                const { value: activeKeyPath } = activeKeyPathRef;\n                const { key } = props.tmNode;\n                const index = activeKeyPath.findIndex((k) => key === k);\n                if (index === -1)\n                    return false;\n                return index === activeKeyPath.length - 1;\n            }),\n            mergedDisabled: mergedDisabledRef,\n            renderOption: renderOptionRef,\n            nodeProps: nodePropsRef,\n            handleClick,\n            handleMouseMove,\n            handleMouseEnter,\n            handleMouseLeave,\n            handleSubmenuBeforeEnter,\n            handleSubmenuAfterEnter\n        };\n    },\n    render() {\n        var _a, _b;\n        const { animated, rawNode, mergedShowSubmenu, clsPrefix, siblingHasIcon, siblingHasSubmenu, renderLabel, renderIcon, renderOption, nodeProps, props, scrollable } = this;\n        let submenuVNode = null;\n        if (mergedShowSubmenu) {\n            const submenuNodeProps = (_a = this.menuProps) === null || _a === void 0 ? void 0 : _a.call(this, rawNode, \n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            rawNode.children);\n            submenuVNode = (h(NDropdownMenu, Object.assign({}, submenuNodeProps, { clsPrefix: clsPrefix, scrollable: this.scrollable, tmNodes: this.tmNode.children, parentKey: this.tmNode.key })));\n        }\n        const builtinProps = {\n            class: [\n                `${clsPrefix}-dropdown-option-body`,\n                this.pending && `${clsPrefix}-dropdown-option-body--pending`,\n                this.active && `${clsPrefix}-dropdown-option-body--active`,\n                this.childActive && `${clsPrefix}-dropdown-option-body--child-active`,\n                this.mergedDisabled && `${clsPrefix}-dropdown-option-body--disabled`\n            ],\n            onMousemove: this.handleMouseMove,\n            onMouseenter: this.handleMouseEnter,\n            onMouseleave: this.handleMouseLeave,\n            onClick: this.handleClick\n        };\n        const optionNodeProps = nodeProps === null || nodeProps === void 0 ? void 0 : nodeProps(rawNode);\n        const node = (h(\"div\", Object.assign({ class: [`${clsPrefix}-dropdown-option`, optionNodeProps === null || optionNodeProps === void 0 ? void 0 : optionNodeProps.class], \"data-dropdown-option\": true }, optionNodeProps),\n            h('div', mergeProps(builtinProps, props), [\n                h(\"div\", { class: [\n                        `${clsPrefix}-dropdown-option-body__prefix`,\n                        siblingHasIcon &&\n                            `${clsPrefix}-dropdown-option-body__prefix--show-icon`\n                    ] }, [renderIcon ? renderIcon(rawNode) : render(rawNode.icon)]),\n                h(\"div\", { \"data-dropdown-option\": true, class: `${clsPrefix}-dropdown-option-body__label` }, renderLabel\n                    ? renderLabel(rawNode)\n                    : render((_b = rawNode[this.labelField]) !== null && _b !== void 0 ? _b : rawNode.title)),\n                h(\"div\", { \"data-dropdown-option\": true, class: [\n                        `${clsPrefix}-dropdown-option-body__suffix`,\n                        siblingHasSubmenu &&\n                            `${clsPrefix}-dropdown-option-body__suffix--has-submenu`\n                    ] }, this.hasSubmenu ? (h(NIcon, null, {\n                    default: () => h(ChevronRightIcon, null)\n                })) : null)\n            ]),\n            this.hasSubmenu ? (h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(\"div\", { class: `${clsPrefix}-dropdown-offset-container` },\n                            h(VFollower, { show: this.mergedShowSubmenu, placement: this.placement, to: scrollable\n                                    ? this.popoverBody || undefined\n                                    : undefined, teleportDisabled: !scrollable }, {\n                                default: () => {\n                                    return (h(\"div\", { class: `${clsPrefix}-dropdown-menu-wrapper` }, animated ? (h(Transition, { onBeforeEnter: this.handleSubmenuBeforeEnter, onAfterEnter: this.handleSubmenuAfterEnter, name: \"fade-in-scale-up-transition\", appear: true }, {\n                                        default: () => submenuVNode\n                                    })) : (submenuVNode)));\n                                }\n                            })))\n                    })\n                ]\n            })) : null));\n        if (renderOption) {\n            return renderOption({ node, option: rawNode });\n        }\n        return node;\n    }\n});\n","import { ref, watch } from 'vue';\nexport function useDeferredTrue(valueRef, delay, shouldDelayRef) {\n    if (!delay)\n        return valueRef;\n    const delayedRef = ref(valueRef.value);\n    let timerId = null;\n    watch(valueRef, (value) => {\n        if (timerId !== null)\n            window.clearTimeout(timerId);\n        if (value === true) {\n            if (shouldDelayRef && !shouldDelayRef.value) {\n                delayedRef.value = true;\n            }\n            else {\n                timerId = window.setTimeout(() => {\n                    delayedRef.value = true;\n                }, delay);\n            }\n        }\n        else {\n            delayedRef.value = false;\n        }\n    });\n    return delayedRef;\n}\n","import { defineComponent, h, inject } from 'vue';\nimport { render } from '../../_utils';\nimport { dropdownInjectionKey, dropdownMenuInjectionKey } from './context';\nexport default defineComponent({\n    name: 'DropdownGroupHeader',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        tmNode: {\n            type: Object,\n            required: true\n        }\n    },\n    setup() {\n        const { showIconRef, hasSubmenuRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(dropdownMenuInjectionKey);\n        const { renderLabelRef, labelFieldRef, nodePropsRef, renderOptionRef } = \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        inject(dropdownInjectionKey);\n        return {\n            labelField: labelFieldRef,\n            showIcon: showIconRef,\n            hasSubmenu: hasSubmenuRef,\n            renderLabel: renderLabelRef,\n            nodeProps: nodePropsRef,\n            renderOption: renderOptionRef\n        };\n    },\n    render() {\n        var _a;\n        const { clsPrefix, hasSubmenu, showIcon, nodeProps, renderLabel, renderOption } = this;\n        const { rawNode } = this.tmNode;\n        const node = (h(\"div\", Object.assign({ class: `${clsPrefix}-dropdown-option` }, nodeProps === null || nodeProps === void 0 ? void 0 : nodeProps(rawNode)),\n            h(\"div\", { class: `${clsPrefix}-dropdown-option-body ${clsPrefix}-dropdown-option-body--group` },\n                h(\"div\", { \"data-dropdown-option\": true, class: [\n                        `${clsPrefix}-dropdown-option-body__prefix`,\n                        showIcon && `${clsPrefix}-dropdown-option-body__prefix--show-icon`\n                    ] }, render(rawNode.icon)),\n                h(\"div\", { class: `${clsPrefix}-dropdown-option-body__label`, \"data-dropdown-option\": true }, renderLabel\n                    ? renderLabel(rawNode)\n                    : render((_a = rawNode.title) !== null && _a !== void 0 ? _a : rawNode[this.labelField])),\n                h(\"div\", { class: [\n                        `${clsPrefix}-dropdown-option-body__suffix`,\n                        hasSubmenu &&\n                            `${clsPrefix}-dropdown-option-body__suffix--has-submenu`\n                    ], \"data-dropdown-option\": true }))));\n        if (renderOption) {\n            return renderOption({ node, option: rawNode });\n        }\n        return node;\n    }\n});\n","import { defineComponent, Fragment, h } from 'vue';\nimport { warn } from '../../_utils';\n// eslint-disable-next-line import/no-cycle\nimport NDropdownOption from './DropdownOption';\nimport NDropdownDivider from './DropdownDivider';\nimport NDropdownGroupHeader from './DropdownGroupHeader';\nimport { isDividerNode } from './utils';\nexport default defineComponent({\n    name: 'NDropdownGroup',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        tmNode: {\n            type: Object,\n            required: true\n        },\n        parentKey: {\n            type: [String, Number],\n            default: null\n        }\n    },\n    render() {\n        const { tmNode, parentKey, clsPrefix } = this;\n        const { children } = tmNode;\n        return (h(Fragment, null,\n            h(NDropdownGroupHeader, { clsPrefix: clsPrefix, tmNode: tmNode, key: tmNode.key }), children === null || children === void 0 ? void 0 :\n            children.map((child) => {\n                const { rawNode } = child;\n                if (rawNode.show === false)\n                    return null;\n                if (isDividerNode(rawNode)) {\n                    return h(NDropdownDivider, {\n                        clsPrefix,\n                        key: child.key\n                    });\n                }\n                if (child.isGroup) {\n                    warn('dropdown', '`group` node is not allowed to be put in `group` node.');\n                    return null;\n                }\n                return (h(NDropdownOption, { clsPrefix: clsPrefix, tmNode: child, parentKey: parentKey, key: child.key }));\n            })));\n    }\n});\n","import { h, defineComponent } from 'vue';\nexport default defineComponent({\n    name: 'DropdownRenderOption',\n    props: {\n        tmNode: {\n            type: Object,\n            required: true\n        }\n    },\n    render() {\n        const { rawNode: { render, props } } = this.tmNode;\n        return h('div', props, [render === null || render === void 0 ? void 0 : render()]);\n    }\n});\n","import { computed, defineComponent, h, inject, provide, ref } from 'vue';\nimport { renderArrow } from '../../popover/src/PopoverBody';\nimport { NxScrollbar } from '../../_internal/scrollbar';\nimport NDropdownDivider from './DropdownDivider';\n// eslint-disable-next-line import/no-cycle\nimport NDropdownGroup from './DropdownGroup';\n// eslint-disable-next-line import/no-cycle\nimport NDropdownOption from './DropdownOption';\nimport NDropdownRenderOption from './DropdownRenderOption';\nimport { isSubmenuNode, isGroupNode, isDividerNode, isRenderNode } from './utils';\nimport { dropdownInjectionKey, dropdownMenuInjectionKey } from './context';\nimport { modalBodyInjectionKey } from '../../modal/src/interface';\nimport { drawerBodyInjectionKey } from '../../drawer/src/interface';\nimport { popoverBodyInjectionKey } from '../../popover/src/interface';\nexport default defineComponent({\n    name: 'DropdownMenu',\n    props: {\n        scrollable: Boolean,\n        showArrow: Boolean,\n        arrowStyle: [String, Object],\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        tmNodes: {\n            type: Array,\n            default: () => []\n        },\n        parentKey: {\n            type: [String, Number],\n            default: null\n        }\n    },\n    setup(props) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const { renderIconRef, childrenFieldRef } = inject(dropdownInjectionKey);\n        provide(dropdownMenuInjectionKey, {\n            showIconRef: computed(() => {\n                const renderIcon = renderIconRef.value;\n                return props.tmNodes.some((tmNode) => {\n                    var _a;\n                    if (tmNode.isGroup) {\n                        return (_a = tmNode.children) === null || _a === void 0 ? void 0 : _a.some(({ rawNode: rawChild }) => renderIcon ? renderIcon(rawChild) : rawChild.icon);\n                    }\n                    const { rawNode } = tmNode;\n                    return renderIcon ? renderIcon(rawNode) : rawNode.icon;\n                });\n            }),\n            hasSubmenuRef: computed(() => {\n                const { value: childrenField } = childrenFieldRef;\n                return props.tmNodes.some((tmNode) => {\n                    var _a;\n                    if (tmNode.isGroup) {\n                        return (_a = tmNode.children) === null || _a === void 0 ? void 0 : _a.some(({ rawNode: rawChild }) => isSubmenuNode(rawChild, childrenField));\n                    }\n                    const { rawNode } = tmNode;\n                    return isSubmenuNode(rawNode, childrenField);\n                });\n            })\n        });\n        const bodyRef = ref(null);\n        provide(modalBodyInjectionKey, null);\n        provide(drawerBodyInjectionKey, null);\n        provide(popoverBodyInjectionKey, bodyRef);\n        return {\n            bodyRef\n        };\n    },\n    render() {\n        const { parentKey, clsPrefix, scrollable } = this;\n        const menuOptionsNode = this.tmNodes.map((tmNode) => {\n            const { rawNode } = tmNode;\n            if (rawNode.show === false)\n                return null;\n            if (isRenderNode(rawNode)) {\n                return (h(NDropdownRenderOption, { tmNode: tmNode, key: tmNode.key }));\n            }\n            if (isDividerNode(rawNode)) {\n                return h(NDropdownDivider, { clsPrefix: clsPrefix, key: tmNode.key });\n            }\n            if (isGroupNode(rawNode)) {\n                return (h(NDropdownGroup, { clsPrefix: clsPrefix, tmNode: tmNode, parentKey: parentKey, key: tmNode.key }));\n            }\n            return (h(NDropdownOption, { clsPrefix: clsPrefix, tmNode: tmNode, parentKey: parentKey, key: tmNode.key, props: rawNode.props, scrollable: scrollable }));\n        });\n        return (h(\"div\", { class: [\n                `${clsPrefix}-dropdown-menu`,\n                scrollable && `${clsPrefix}-dropdown-menu--scrollable`\n            ], ref: \"bodyRef\" },\n            scrollable ? (h(NxScrollbar, { contentClass: `${clsPrefix}-dropdown-menu__content` }, {\n                default: () => menuOptionsNode\n            })) : (menuOptionsNode),\n            this.showArrow\n                ? renderArrow({\n                    clsPrefix,\n                    arrowStyle: this.arrowStyle\n                })\n                : null));\n    }\n});\n","import { c, cB, cM, cE, cNotM } from '../../../_utils/cssr';\nimport { fadeInScaleUpTransition } from '../../../_styles/transitions/fade-in-scale-up.cssr';\n// vars:\n// --n-bezier\n// --n-font-size\n// --n-padding\n// --n-border-radius\n// --n-option-height\n// --n-option-prefix-width\n// --n-option-icon-prefix-width\n// --n-option-suffix-width\n// --n-option-icon-suffix-width\n// --n-color\n// --n-option-color-hover\n// --n-option-color-active\n// --n-divider-color\n// --n-option-text-color\n// --n-option-text-color-hover\n// --n-option-text-color-active\n// --n-option-text-color-child-active\n// --n-prefix-color\n// --n-suffix-color\n// --n-option-icon-size\n// --n-option-opacity-disabled\n// shared with popover\n// --n-box-shadow\nexport default cB('dropdown-menu', `\n transform-origin: var(--v-transform-origin);\n background-color: var(--n-color);\n border-radius: var(--n-border-radius);\n box-shadow: var(--n-box-shadow);\n position: relative;\n transition:\n background-color .3s var(--n-bezier),\n box-shadow .3s var(--n-bezier);\n`, [fadeInScaleUpTransition(), cB('dropdown-option', `\n position: relative;\n `, [c('a', `\n text-decoration: none;\n color: inherit;\n outline: none;\n `, [c('&::before', `\n content: \"\";\n position: absolute;\n left: 0;\n right: 0;\n top: 0;\n bottom: 0;\n `)]), cB('dropdown-option-body', `\n display: flex;\n cursor: pointer;\n position: relative;\n height: var(--n-option-height);\n line-height: var(--n-option-height);\n font-size: var(--n-font-size);\n color: var(--n-option-text-color);\n transition: color .3s var(--n-bezier);\n `, [c('&::before', `\n content: \"\";\n position: absolute;\n top: 0;\n bottom: 0;\n left: 4px;\n right: 4px;\n transition: background-color .3s var(--n-bezier);\n border-radius: var(--n-border-radius);\n `), cNotM('disabled', [cM('pending', `\n color: var(--n-option-text-color-hover);\n `, [cE('prefix, suffix', `\n color: var(--n-option-text-color-hover);\n `), c('&::before', 'background-color: var(--n-option-color-hover);')]), cM('active', `\n color: var(--n-option-text-color-active);\n `, [cE('prefix, suffix', `\n color: var(--n-option-text-color-active);\n `), c('&::before', 'background-color: var(--n-option-color-active);')]), cM('child-active', `\n color: var(--n-option-text-color-child-active);\n `, [cE('prefix, suffix', `\n color: var(--n-option-text-color-child-active);\n `)])]), cM('disabled', `\n cursor: not-allowed;\n opacity: var(--n-option-opacity-disabled);\n `), cM('group', `\n font-size: calc(var(--n-font-size) - 1px);\n color: var(--n-group-header-text-color);\n `, [cE('prefix', `\n width: calc(var(--n-option-prefix-width) / 2);\n `, [cM('show-icon', `\n width: calc(var(--n-option-icon-prefix-width) / 2);\n `)])]), cE('prefix', `\n width: var(--n-option-prefix-width);\n display: flex;\n justify-content: center;\n align-items: center;\n color: var(--n-prefix-color);\n transition: color .3s var(--n-bezier);\n z-index: 1;\n `, [cM('show-icon', `\n width: var(--n-option-icon-prefix-width);\n `), cB('icon', `\n font-size: var(--n-option-icon-size);\n `)]), cE('label', `\n white-space: nowrap;\n flex: 1;\n z-index: 1;\n `), cE('suffix', `\n box-sizing: border-box;\n flex-grow: 0;\n flex-shrink: 0;\n display: flex;\n justify-content: flex-end;\n align-items: center;\n min-width: var(--n-option-suffix-width);\n padding: 0 8px;\n transition: color .3s var(--n-bezier);\n color: var(--n-suffix-color);\n z-index: 1;\n `, [cM('has-submenu', `\n width: var(--n-option-icon-suffix-width);\n `), cB('icon', `\n font-size: var(--n-option-icon-size);\n `)]), cB('dropdown-menu', 'pointer-events: all;')]), cB('dropdown-offset-container', `\n pointer-events: none;\n position: absolute;\n left: 0;\n right: 0;\n top: -4px;\n bottom: -4px;\n `)]), cB('dropdown-divider', `\n transition: background-color .3s var(--n-bezier);\n background-color: var(--n-divider-color);\n height: 1px;\n margin: 4px 0;\n `), cB('dropdown-menu-wrapper', `\n transform-origin: var(--v-transform-origin);\n width: fit-content;\n `), c('>', [cB('scrollbar', `\n height: inherit;\n max-height: inherit;\n `)]), cNotM('scrollable', `\n padding: var(--n-padding);\n `), cM('scrollable', [cE('content', `\n padding: var(--n-padding);\n `)])]);","import { defineComponent, h, computed, ref, toRef, watch, provide, mergeProps } from 'vue';\nimport { createTreeMate } from 'treemate';\nimport { useMergedState, useKeyboard, useMemo } from 'vooks';\nimport { popoverBaseProps } from '../../popover/src/Popover';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { NPopover } from '../../popover';\nimport { keep, call, createKey, createRefSetter } from '../../_utils';\nimport { dropdownLight } from '../styles';\nimport NDropdownMenu from './DropdownMenu';\nimport style from './styles/index.cssr';\nimport { dropdownInjectionKey } from './context';\nconst dropdownBaseProps = {\n    animated: {\n        type: Boolean,\n        default: true\n    },\n    keyboard: {\n        type: Boolean,\n        default: true\n    },\n    size: {\n        type: String,\n        default: 'medium'\n    },\n    inverted: Boolean,\n    placement: {\n        type: String,\n        default: 'bottom'\n    },\n    onSelect: [Function, Array],\n    options: {\n        type: Array,\n        default: () => []\n    },\n    menuProps: Function,\n    showArrow: Boolean,\n    renderLabel: Function,\n    renderIcon: Function,\n    renderOption: Function,\n    nodeProps: Function,\n    labelField: {\n        type: String,\n        default: 'label'\n    },\n    keyField: {\n        type: String,\n        default: 'key'\n    },\n    childrenField: {\n        type: String,\n        default: 'children'\n    },\n    // for menu, not documented\n    value: [String, Number]\n};\nconst popoverPropKeys = Object.keys(popoverBaseProps);\nexport const dropdownProps = Object.assign(Object.assign(Object.assign({}, popoverBaseProps), dropdownBaseProps), useTheme.props);\nexport default defineComponent({\n    name: 'Dropdown',\n    inheritAttrs: false,\n    props: dropdownProps,\n    setup(props) {\n        const uncontrolledShowRef = ref(false);\n        const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n        const treemateRef = computed(() => {\n            const { keyField, childrenField } = props;\n            return createTreeMate(props.options, {\n                getKey(node) {\n                    return node[keyField];\n                },\n                getDisabled(node) {\n                    return node.disabled === true;\n                },\n                getIgnored(node) {\n                    return node.type === 'divider' || node.type === 'render';\n                },\n                getChildren(node) {\n                    return node[childrenField];\n                }\n            });\n        });\n        const tmNodesRef = computed(() => {\n            return treemateRef.value.treeNodes;\n        });\n        const hoverKeyRef = ref(null);\n        const keyboardKeyRef = ref(null);\n        const lastToggledSubmenuKeyRef = ref(null);\n        const pendingKeyRef = computed(() => {\n            var _a, _b, _c;\n            return ((_c = (_b = (_a = hoverKeyRef.value) !== null && _a !== void 0 ? _a : keyboardKeyRef.value) !== null && _b !== void 0 ? _b : lastToggledSubmenuKeyRef.value) !== null && _c !== void 0 ? _c : null);\n        });\n        const pendingKeyPathRef = computed(() => treemateRef.value.getPath(pendingKeyRef.value).keyPath);\n        const activeKeyPathRef = computed(() => treemateRef.value.getPath(props.value).keyPath);\n        const keyboardEnabledRef = useMemo(() => {\n            return props.keyboard && mergedShowRef.value;\n        });\n        useKeyboard({\n            keydown: {\n                ArrowUp: {\n                    prevent: true,\n                    handler: handleKeydownUp\n                },\n                ArrowRight: {\n                    prevent: true,\n                    handler: handleKeydownRight\n                },\n                ArrowDown: {\n                    prevent: true,\n                    handler: handleKeydownDown\n                },\n                ArrowLeft: {\n                    prevent: true,\n                    handler: handleKeydownLeft\n                },\n                Enter: {\n                    prevent: true,\n                    handler: handleKeydownEnter\n                },\n                Escape: handleKeydownEsc\n            }\n        }, keyboardEnabledRef);\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Dropdown', '-dropdown', style, dropdownLight, props, mergedClsPrefixRef);\n        provide(dropdownInjectionKey, {\n            labelFieldRef: toRef(props, 'labelField'),\n            childrenFieldRef: toRef(props, 'childrenField'),\n            renderLabelRef: toRef(props, 'renderLabel'),\n            renderIconRef: toRef(props, 'renderIcon'),\n            hoverKeyRef,\n            keyboardKeyRef,\n            lastToggledSubmenuKeyRef,\n            pendingKeyPathRef,\n            activeKeyPathRef,\n            animatedRef: toRef(props, 'animated'),\n            mergedShowRef,\n            nodePropsRef: toRef(props, 'nodeProps'),\n            renderOptionRef: toRef(props, 'renderOption'),\n            menuPropsRef: toRef(props, 'menuProps'),\n            doSelect,\n            doUpdateShow\n        });\n        // watch\n        watch(mergedShowRef, (value) => {\n            if (!props.animated && !value) {\n                clearPendingState();\n            }\n        });\n        // methods\n        function doSelect(key, node) {\n            const { onSelect } = props;\n            if (onSelect)\n                call(onSelect, key, node);\n        }\n        function doUpdateShow(value) {\n            const { 'onUpdate:show': _onUpdateShow, onUpdateShow } = props;\n            if (_onUpdateShow)\n                call(_onUpdateShow, value);\n            if (onUpdateShow)\n                call(onUpdateShow, value);\n            uncontrolledShowRef.value = value;\n        }\n        function clearPendingState() {\n            hoverKeyRef.value = null;\n            keyboardKeyRef.value = null;\n            lastToggledSubmenuKeyRef.value = null;\n        }\n        function handleKeydownEsc() {\n            doUpdateShow(false);\n        }\n        function handleKeydownLeft() {\n            handleKeydown('left');\n        }\n        function handleKeydownRight() {\n            handleKeydown('right');\n        }\n        function handleKeydownUp() {\n            handleKeydown('up');\n        }\n        function handleKeydownDown() {\n            handleKeydown('down');\n        }\n        function handleKeydownEnter() {\n            const pendingNode = getPendingNode();\n            if ((pendingNode === null || pendingNode === void 0 ? void 0 : pendingNode.isLeaf) && mergedShowRef.value) {\n                doSelect(pendingNode.key, pendingNode.rawNode);\n                doUpdateShow(false);\n            }\n        }\n        function getPendingNode() {\n            var _a;\n            const { value: treeMate } = treemateRef;\n            const { value: pendingKey } = pendingKeyRef;\n            if (!treeMate || pendingKey === null)\n                return null;\n            return (_a = treeMate.getNode(pendingKey)) !== null && _a !== void 0 ? _a : null;\n        }\n        function handleKeydown(direction) {\n            const { value: pendingKey } = pendingKeyRef;\n            const { value: { getFirstAvailableNode } } = treemateRef;\n            let nextKeyboardKey = null;\n            if (pendingKey === null) {\n                const firstNode = getFirstAvailableNode();\n                if (firstNode !== null) {\n                    nextKeyboardKey = firstNode.key;\n                }\n            }\n            else {\n                const currentNode = getPendingNode();\n                if (currentNode) {\n                    let nextNode;\n                    switch (direction) {\n                        case 'down':\n                            nextNode = currentNode.getNext();\n                            break;\n                        case 'up':\n                            nextNode = currentNode.getPrev();\n                            break;\n                        case 'right':\n                            nextNode = currentNode.getChild();\n                            break;\n                        case 'left':\n                            nextNode = currentNode.getParent();\n                            break;\n                    }\n                    if (nextNode)\n                        nextKeyboardKey = nextNode.key;\n                }\n            }\n            if (nextKeyboardKey !== null) {\n                hoverKeyRef.value = null;\n                keyboardKeyRef.value = nextKeyboardKey;\n            }\n        }\n        const cssVarsRef = computed(() => {\n            const { size, inverted } = props;\n            const { common: { cubicBezierEaseInOut }, self } = themeRef.value;\n            const { padding, dividerColor, borderRadius, optionOpacityDisabled, [createKey('optionIconSuffixWidth', size)]: optionIconSuffixWidth, [createKey('optionSuffixWidth', size)]: optionSuffixWidth, [createKey('optionIconPrefixWidth', size)]: optionIconPrefixWidth, [createKey('optionPrefixWidth', size)]: optionPrefixWidth, [createKey('fontSize', size)]: fontSize, [createKey('optionHeight', size)]: optionHeight, [createKey('optionIconSize', size)]: optionIconSize } = self;\n            const vars = {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-font-size': fontSize,\n                '--n-padding': padding,\n                '--n-border-radius': borderRadius,\n                '--n-option-height': optionHeight,\n                '--n-option-prefix-width': optionPrefixWidth,\n                '--n-option-icon-prefix-width': optionIconPrefixWidth,\n                '--n-option-suffix-width': optionSuffixWidth,\n                '--n-option-icon-suffix-width': optionIconSuffixWidth,\n                '--n-option-icon-size': optionIconSize,\n                '--n-divider-color': dividerColor,\n                '--n-option-opacity-disabled': optionOpacityDisabled\n            };\n            // writing like this is the fastest method\n            if (inverted) {\n                vars['--n-color'] = self.colorInverted;\n                vars['--n-option-color-hover'] = self.optionColorHoverInverted;\n                vars['--n-option-color-active'] = self.optionColorActiveInverted;\n                vars['--n-option-text-color'] = self.optionTextColorInverted;\n                vars['--n-option-text-color-hover'] = self.optionTextColorHoverInverted;\n                vars['--n-option-text-color-active'] =\n                    self.optionTextColorActiveInverted;\n                vars['--n-option-text-color-child-active'] =\n                    self.optionTextColorChildActiveInverted;\n                vars['--n-prefix-color'] = self.prefixColorInverted;\n                vars['--n-suffix-color'] = self.suffixColorInverted;\n                vars['--n-group-header-text-color'] = self.groupHeaderTextColorInverted;\n            }\n            else {\n                vars['--n-color'] = self.color;\n                vars['--n-option-color-hover'] = self.optionColorHover;\n                vars['--n-option-color-active'] = self.optionColorActive;\n                vars['--n-option-text-color'] = self.optionTextColor;\n                vars['--n-option-text-color-hover'] = self.optionTextColorHover;\n                vars['--n-option-text-color-active'] = self.optionTextColorActive;\n                vars['--n-option-text-color-child-active'] =\n                    self.optionTextColorChildActive;\n                vars['--n-prefix-color'] = self.prefixColor;\n                vars['--n-suffix-color'] = self.suffixColor;\n                vars['--n-group-header-text-color'] = self.groupHeaderTextColor;\n            }\n            return vars;\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('dropdown', computed(() => `${props.size[0]}${props.inverted ? 'i' : ''}`), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedTheme: themeRef,\n            // data\n            tmNodes: tmNodesRef,\n            // show\n            mergedShow: mergedShowRef,\n            // methods\n            handleAfterLeave: () => {\n                if (!props.animated)\n                    return;\n                clearPendingState();\n            },\n            doUpdateShow,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const renderPopoverBody = (className, ref, style, onMouseenter, onMouseleave) => {\n            var _a;\n            const { mergedClsPrefix, menuProps } = this;\n            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n            const menuNodeProps = (menuProps === null || menuProps === void 0 ? void 0 : menuProps(undefined, this.tmNodes.map((v) => v.rawNode))) || {};\n            const dropdownProps = {\n                ref: createRefSetter(ref),\n                class: [className, `${mergedClsPrefix}-dropdown`, this.themeClass],\n                clsPrefix: mergedClsPrefix,\n                tmNodes: this.tmNodes,\n                style: [style, this.cssVars],\n                showArrow: this.showArrow,\n                arrowStyle: this.arrowStyle,\n                scrollable: this.scrollable,\n                onMouseenter,\n                onMouseleave\n            };\n            return h(NDropdownMenu, mergeProps(this.$attrs, dropdownProps, menuNodeProps));\n        };\n        const { mergedTheme } = this;\n        const popoverProps = {\n            show: this.mergedShow,\n            theme: mergedTheme.peers.Popover,\n            themeOverrides: mergedTheme.peerOverrides.Popover,\n            internalOnAfterLeave: this.handleAfterLeave,\n            internalRenderBody: renderPopoverBody,\n            onUpdateShow: this.doUpdateShow,\n            'onUpdate:show': undefined\n        };\n        return (h(NPopover, Object.assign({}, keep(this.$props, popoverPropKeys), popoverProps), {\n            trigger: () => { var _a, _b; return (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a); }\n        }));\n    }\n});\n","import { onBeforeMount, onBeforeUnmount, reactive, readonly, watch } from 'vue';\nimport { on, off } from 'evtd';\nimport { hasInstance } from './utils';\nexport default function useKeyboard(options = {}, enabledRef) {\n    const state = reactive({\n        ctrl: false,\n        command: false,\n        win: false,\n        shift: false,\n        tab: false\n    });\n    const { keydown, keyup } = options;\n    const keydownHandler = (e) => {\n        switch (e.key) {\n            case 'Control':\n                state.ctrl = true;\n                break;\n            case 'Meta':\n                state.command = true;\n                state.win = true;\n                break;\n            case 'Shift':\n                state.shift = true;\n                break;\n            case 'Tab':\n                state.tab = true;\n                break;\n        }\n        if (keydown !== undefined) {\n            Object.keys(keydown).forEach(key => {\n                if (key !== e.key)\n                    return;\n                const handler = keydown[key];\n                if (typeof handler === 'function') {\n                    handler(e);\n                }\n                else {\n                    const { stop = false, prevent = false } = handler;\n                    if (stop)\n                        e.stopPropagation();\n                    if (prevent)\n                        e.preventDefault();\n                    handler.handler(e);\n                }\n            });\n        }\n    };\n    const keyupHandler = (e) => {\n        switch (e.key) {\n            case 'Control':\n                state.ctrl = false;\n                break;\n            case 'Meta':\n                state.command = false;\n                state.win = false;\n                break;\n            case 'Shift':\n                state.shift = false;\n                break;\n            case 'Tab':\n                state.tab = false;\n                break;\n        }\n        if (keyup !== undefined) {\n            Object.keys(keyup).forEach(key => {\n                if (key !== e.key)\n                    return;\n                const handler = keyup[key];\n                if (typeof handler === 'function') {\n                    handler(e);\n                }\n                else {\n                    const { stop = false, prevent = false } = handler;\n                    if (stop)\n                        e.stopPropagation();\n                    if (prevent)\n                        e.preventDefault();\n                    handler.handler(e);\n                }\n            });\n        }\n    };\n    const setup = () => {\n        if (enabledRef === undefined || enabledRef.value) {\n            on('keydown', document, keydownHandler);\n            on('keyup', document, keyupHandler);\n        }\n        if (enabledRef !== undefined) {\n            watch(enabledRef, value => {\n                if (value) {\n                    on('keydown', document, keydownHandler);\n                    on('keyup', document, keyupHandler);\n                }\n                else {\n                    off('keydown', document, keydownHandler);\n                    off('keyup', document, keyupHandler);\n                }\n            });\n        }\n    };\n    if (hasInstance()) {\n        onBeforeMount(setup);\n        onBeforeUnmount(() => {\n            if (enabledRef === undefined || enabledRef.value) {\n                off('keydown', document, keydownHandler);\n                off('keyup', document, keyupHandler);\n            }\n        });\n    }\n    else {\n        setup();\n    }\n    return readonly(state);\n}\n"],"names":["createRefSetter","ref","inst","value","$el","NDropdownDivider","defineComponent","name","props","clsPrefix","type","String","required","render","h","class","this","style$1","cB","cM","transition","color","c","opacity","height","width","NIcon","_n_icon__","inheritAttrs","Object","assign","useTheme","depth","Number","size","component","setup","mergedClsPrefixRef","inlineThemeDisabled","useConfig","themeRef","style","iconLight","cssVarsRef","computed","common","cubicBezierEaseInOut","self","themeClassHandle","useThemeClass","mergedClsPrefix","mergedStyle","fontSize","formatLength","cssVars","themeClass","onRender","_a","$parent","$options","warn","mergeProps","$attrs","role","$slots","dropdownMenuInjectionKey","createInjectionKey","dropdownInjectionKey","dropdownOptionInjectionKey","isSubmenuNode","rawNode","childrenField","isDividerNode","NDropdownOption","tmNode","parentKey","default","placement","scrollable","Boolean","NDropdown","inject","hoverKeyRef","keyboardKeyRef","lastToggledSubmenuKeyRef","pendingKeyPathRef","activeKeyPathRef","animatedRef","mergedShowRef","renderLabelRef","renderIconRef","labelFieldRef","childrenFieldRef","renderOptionRef","nodePropsRef","menuPropsRef","NDropdownMenu","NPopoverBody","popoverBodyInjectionKey","rawNodeRef","hasSubmenuRef","mergedDisabledRef","disabled","deferredShowSubmenuRef","valueRef","delay","shouldDelayRef","delayedRef","timerId","watch","window","clearTimeout","setTimeout","useDeferredTrue","key","hoverKey","keyboardKey","lastToggledSubmenuKey","pendingKeyPath","includes","length","parentEnteringSubmenuRef","enteringSubmenuRef","handleMouseEnter","provide","labelField","renderLabel","renderIcon","siblingHasIcon","showIconRef","siblingHasSubmenu","menuProps","popoverBody","animated","mergedShowSubmenu","hasSubmenu","pending","useMemo","childActive","activeKeyPath","index","findIndex","k","active","mergedDisabled","renderOption","nodeProps","handleClick","doSelect","doUpdateShow","handleMouseMove","handleMouseLeave","e","relatedTarget","happensIn","target","handleSubmenuBeforeEnter","handleSubmenuAfterEnter","_b","submenuVNode","submenuNodeProps","call","children","tmNodes","builtinProps","onMousemove","onMouseenter","onMouseleave","onClick","optionNodeProps","node","icon","title","ChevronRightIcon","VBinder","VTarget","VFollower","show","to","teleportDisabled","Transition","onBeforeEnter","onAfterEnter","appear","option","NDropdownGroupHeader","showIcon","NDropdownGroup","Fragment","map","child","isGroup","NDropdownRenderOption","showArrow","arrowStyle","Array","some","rawChild","bodyRef","modalBodyInjectionKey","drawerBodyInjectionKey","menuOptionsNode","isRenderNode","isGroupNode","NxScrollbar","contentClass","renderArrow","fadeInScaleUpTransition","cNotM","cE","dropdownBaseProps","keyboard","inverted","onSelect","Function","options","keyField","popoverPropKeys","keys","popoverBaseProps","uncontrolledShowRef","useMergedState","toRef","treemateRef","createTreeMate","getKey","getDisabled","getIgnored","getChildren","tmNodesRef","treeNodes","pendingKeyRef","_c","getPath","keyPath","enabledRef","state","reactive","ctrl","command","win","shift","tab","keydown","keyup","keydownHandler","forEach","handler","stop","prevent","stopPropagation","preventDefault","keyupHandler","on","document","off","hasInstance","onBeforeMount","onBeforeUnmount","readonly","useKeyboard","ArrowUp","handleKeydown","ArrowRight","ArrowDown","ArrowLeft","Enter","pendingNode","getPendingNode","isLeaf","Escape","dropdownLight","_onUpdateShow","onUpdateShow","clearPendingState","treeMate","pendingKey","getNode","direction","getFirstAvailableNode","nextKeyboardKey","firstNode","currentNode","nextNode","getNext","getPrev","getChild","getParent","padding","dividerColor","borderRadius","optionOpacityDisabled","createKey","optionIconSuffixWidth","optionSuffixWidth","optionIconPrefixWidth","optionPrefixWidth","optionHeight","optionIconSize","vars","colorInverted","optionColorHoverInverted","optionColorActiveInverted","optionTextColorInverted","optionTextColorHoverInverted","optionTextColorActiveInverted","optionTextColorChildActiveInverted","prefixColorInverted","suffixColorInverted","groupHeaderTextColorInverted","optionColorHover","optionColorActive","optionTextColor","optionTextColorHover","optionTextColorActive","optionTextColorChildActive","prefixColor","suffixColor","groupHeaderTextColor","mergedTheme","mergedShow","handleAfterLeave","popoverProps","theme","peers","Popover","themeOverrides","peerOverrides","internalOnAfterLeave","internalRenderBody","className","menuNodeProps","v","dropdownProps","NPopover","keep","$props","trigger"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}