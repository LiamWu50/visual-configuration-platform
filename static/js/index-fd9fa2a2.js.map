{"version":3,"file":"index-fd9fa2a2.js","sources":["../../../src/utils/event-emitter.ts","../../../src/utils/primitive.ts","../../../src/components/Editor/AuxiliaryLine/index.tsx","../../../src/components/Editor/BoundBox/index.tsx","../../../src/components/Editor/BoundBox/use-boundbox.ts","../../../src/utils/translate.ts","../../../src/components/Editor/ContextMenu/index.tsx","../../../src/components/Editor/Grid/index.tsx","../../../src/components/Editor/index.tsx","../../../src/components/Editor/use-styles.ts","../../../src/views/design-space/chart/container/index.tsx","../../../src/views/design-space/chart/container/use-container.ts"],"sourcesContent":["class EventEmitter {\n  private events: Record<string, Function[]> = {}\n\n  // 监听事件\n  on(eventName: string, callback: Function) {\n    if (!this.events[eventName]) {\n      this.events[eventName] = []\n    }\n    if (!this.events[eventName].includes(callback)) {\n      this.events[eventName].push(callback)\n    }\n  }\n\n  // 取消监听事件\n  off(eventName: string, callback: Function) {\n    const eventCallbacks = this.events[eventName]\n    if (eventCallbacks) {\n      this.events[eventName] = eventCallbacks.filter(\n        (item) => item !== callback\n      )\n    }\n  }\n\n  // 触发事件\n  emit(eventName: string, arg?: any) {\n    const eventCallbacks = this.events[eventName]\n    if (eventCallbacks && eventCallbacks.length > 0) {\n      for (const callback of eventCallbacks) {\n        callback(arg)\n      }\n    } else {\n      console.log(`no listener for event: ${eventName}`)\n    }\n  }\n\n  // 只监听一次事件\n  once(eventName: string, callback: Function) {\n    const onceCallback = (arg: any) => {\n      callback(arg)\n      this.off(eventName, onceCallback)\n    }\n    this.on(eventName, onceCallback)\n  }\n}\n\nexport default new EventEmitter()\n","import type { DOMRectStyle, Location } from '@/primitives/types'\n\n/**\n * 计算组件笛卡尔坐标系坐标\n * @param style 组件在画布中的位置\n * @returns 组件坐标\n */\nexport function calcPrimitiveAxis(style: DOMRectStyle): Location {\n  return {\n    top: style.top,\n    left: style.left,\n    right: style.left + style.width,\n    bottom: style.top + style.height\n  }\n}\n","import { Ref } from 'vue'\n\nimport type { DOMRectStyle, Location } from '@/primitives/types'\nimport { useEditorStore } from '@/store/editor'\nimport eventEmitter from '@/utils/event-emitter'\nimport { calcPrimitiveAxis } from '@/utils/primitive'\n\nimport styles from './index.module.scss'\n\nexport type StyleObject = {\n  [key: string]: any\n}\n\ninterface LineStatus {\n  [key: string]: boolean\n}\n\ntype Condition = Record<\n  'isNearly' | 'lineNode' | 'line' | 'dragShift' | 'lineShift',\n  any\n>\n\ntype RecordWithAnyKey<T> = {\n  [key: string]: T\n}\n\nexport default defineComponent({\n  name: 'AuxiliaryLine',\n  setup() {\n    const editorStore = useEditorStore()\n    const linesRef: Ref<(HTMLElement | null)[]> = ref([])\n    const lines = ['xt', 'xc', 'xb', 'yl', 'yc', 'yr']\n    const diff = ref<number>(3)\n    const lineStatus = reactive<LineStatus>({\n      xt: false,\n      xc: false,\n      xb: false,\n      yl: false,\n      yc: false,\n      yr: false\n    })\n\n    const setLineRef = (el: any) => {\n      linesRef.value.push(el)\n    }\n\n    onMounted(() => {\n      eventEmitter.on('move', ({ isDownward, isRightward }: any) => {\n        showLine(isDownward, isRightward)\n      })\n      eventEmitter.on('unmove', () => {\n        hideLine()\n      })\n      showLine(false, false)\n    })\n\n    const hideLine = () => {\n      Object.keys(lineStatus).forEach((line) => {\n        lineStatus[line] = false\n      })\n    }\n\n    const showLine = (isDownward: boolean, isRightward: boolean) => {\n      const { primitives } = editorStore\n      const curPrimitive = editorStore.curPrimitive\n      if (!curPrimitive) return\n\n      const {\n        top: mytop,\n        left: myleft,\n        right: myright,\n        bottom: mybottom\n      }: Location = calcPrimitiveAxis(curPrimitive.style as DOMRectStyle)\n\n      const curPrimitiveHalfwidth = (myright - myleft) / 2\n      const curPrimitiveHalfHeight = (mybottom - mytop) / 2\n\n      hideLine()\n      primitives.forEach((primitive) => {\n        if (primitive == curPrimitive) return\n\n        const primitiveStyle = calcPrimitiveAxis(\n          primitive.style as DOMRectStyle\n        )\n        const { top, left, bottom, right } = primitiveStyle\n        const primitiveHalfwidth = (right - left!) / 2\n        const primitiveHalfHeight = (bottom - top!) / 2\n\n        const conditions: RecordWithAnyKey<Condition[]> = {\n          top: [\n            {\n              isNearly: isNearly(mytop, top),\n              lineNode: linesRef.value[0], // xt\n              line: 'xt',\n              dragShift: top,\n              lineShift: top\n            },\n            {\n              isNearly: isNearly(mybottom, top),\n              lineNode: linesRef.value[0], // xt\n              line: 'xt',\n              dragShift: top - (mybottom - mytop || 0),\n              lineShift: top\n            },\n            {\n              // 组件与拖拽节点的中间是否对齐\n              isNearly: isNearly(\n                (mytop || 0) + curPrimitiveHalfHeight,\n                top + primitiveHalfHeight\n              ),\n              lineNode: linesRef.value[1], // xc\n              line: 'xc',\n              dragShift: top + primitiveHalfHeight - curPrimitiveHalfHeight,\n              lineShift: top + primitiveHalfHeight\n            },\n            {\n              isNearly: isNearly(mytop, bottom),\n              lineNode: linesRef.value[2], // xb\n              line: 'xb',\n              dragShift: bottom,\n              lineShift: bottom\n            },\n            {\n              isNearly: isNearly(mybottom, bottom),\n              lineNode: linesRef.value[2], // xb\n              line: 'xb',\n              dragShift: bottom - (mybottom - mytop || 0),\n              lineShift: bottom\n            }\n          ],\n          left: [\n            {\n              isNearly: isNearly(myleft, left),\n              lineNode: linesRef.value[3], // yl\n              line: 'yl',\n              dragShift: left,\n              lineShift: left\n            },\n            {\n              isNearly: isNearly(myright, left),\n              lineNode: linesRef.value[3], // yl\n              line: 'yl',\n              dragShift: left - (myright - myleft || 0),\n              lineShift: left\n            },\n            {\n              // 组件与拖拽节点的中间是否对齐\n              isNearly: isNearly(\n                (myleft || 0) + curPrimitiveHalfwidth,\n                left + primitiveHalfwidth\n              ),\n              lineNode: linesRef.value[4], // yc\n              line: 'yc',\n              dragShift: left + primitiveHalfwidth - curPrimitiveHalfwidth,\n              lineShift: left + primitiveHalfwidth\n            },\n            {\n              isNearly: isNearly(myleft, right),\n              lineNode: linesRef.value[5], // yr\n              line: 'yr',\n              dragShift: right,\n              lineShift: right\n            },\n            {\n              isNearly: isNearly(myright, right),\n              lineNode: linesRef.value[5], // yr\n              line: 'yr',\n              dragShift: right - (myright - myleft || 0),\n              lineShift: right\n            }\n          ]\n        }\n\n        const needToShow: string[] = []\n\n        Object.keys(conditions).forEach((key) => {\n          // 遍历符合的条件并处理\n          conditions[key].forEach((condition: Condition) => {\n            if (!condition.isNearly) return\n            // 修改当前组件位移\n            curPrimitive.updateStyleByKey(key, condition.dragShift)\n            condition.lineNode.style[key] = `${condition.lineShift}px`\n            needToShow.push(condition.line)\n          })\n        })\n\n        // 同一方向上同时显示三条线可能不太美观，因此才有了这个解决方案\n        // 同一方向上的线只显示一条，例如多条横条只显示一条横线\n        if (needToShow.length) {\n          chooseTheTureLine(needToShow, isDownward, isRightward)\n        }\n      })\n    }\n\n    const chooseTheTureLine = (\n      needToShow: string[],\n      isDownward: boolean,\n      isRightward: boolean\n    ) => {\n      // 如果鼠标向右移动 则按从右到左的顺序显示竖线 否则按相反顺序显示\n      // 如果鼠标向下移动 则按从下到上的顺序显示横线 否则按相反顺序显示\n      if (isRightward) {\n        if (needToShow.includes('yr')) {\n          lineStatus.yr = true\n        } else if (needToShow.includes('yc')) {\n          lineStatus.yc = true\n        } else if (needToShow.includes('yl')) {\n          lineStatus.yl = true\n        }\n      } else {\n        if (needToShow.includes('yl')) {\n          lineStatus.yl = true\n        } else if (needToShow.includes('yc')) {\n          lineStatus.yc = true\n        } else if (needToShow.includes('yr')) {\n          lineStatus.yr = true\n        }\n      }\n\n      if (isDownward) {\n        if (needToShow.includes('xb')) {\n          lineStatus.xb = true\n        } else if (needToShow.includes('xc')) {\n          lineStatus.xc = true\n        } else if (needToShow.includes('xt')) {\n          lineStatus.xt = true\n        }\n      } else {\n        if (needToShow.includes('xt')) {\n          lineStatus.xt = true\n        } else if (needToShow.includes('xc')) {\n          lineStatus.xc = true\n        } else if (needToShow.includes('xb')) {\n          lineStatus.xb = true\n        }\n      }\n    }\n\n    const isNearly = (dragValue: number, targetValue: number) =>\n      Math.abs(dragValue - targetValue) <= diff.value\n\n    return () => (\n      <div class={styles.markLine}>\n        {lines.map((l) => (\n          <div\n            key={l}\n            v-show={lineStatus[l]}\n            ref={setLineRef}\n            class={`${styles.line} ${\n              l.includes('x') ? styles.xline : styles.yline\n            }`}\n          ></div>\n        ))}\n      </div>\n    )\n  }\n})\n","// import { Component, Style } from '@/store/compose/types'\n// import { useEditorStore } from '@/store/editor'\n// import { useSnapshotStore } from '@/store/snapshot'\nimport { ceil } from 'lodash'\nimport { type PropType } from 'vue'\n\nimport { Primitive } from '@/primitives/primitive'\nimport { BoxStyle } from '@/primitives/types'\nimport { useEditorStore } from '@/store/editor/index'\nimport eventEmitter from '@/utils/event-emitter'\nimport { mod360 } from '@/utils/translate'\n\nimport styles from './index.module.scss'\nimport { useBoundBox } from './use-boundbox'\n// const components = ['VText', 'RectShape', 'CircleShape']\n// const isPreventDrop = (component: string) => {\n//   return !components.includes(component) && !component.startsWith('SVG')\n// }\n\ntype CursorRes = {\n  [key: string]: string\n}\n\nconst props = {\n  primitive: {\n    type: Object as PropType<Primitive>,\n    default: () => {}\n  },\n  pStyle: {\n    type: Object as PropType<BoxStyle>,\n    default: () => {}\n  },\n  index: {\n    required: true,\n    type: Number,\n    default: 0\n  }\n}\n\nexport default defineComponent({\n  name: 'BoundBox',\n  props,\n  emits: ['closeContextmenu'],\n  setup(props, { slots, emit }) {\n    const editorStore = useEditorStore()\n    // const snapshotStore = useSnapshotStore()\n\n    const { curPrimitive } = storeToRefs(editorStore)\n\n    const { curRef, cursors, angleToCursor, drawPoints } = useBoundBox()\n\n    // 位置点的样式\n    const pointStyle = (pointStr: string) => {\n      const { width = 0, height = 0 } = props.pStyle\n      const hasT = pointStr.includes('t')\n      const hasB = pointStr.includes('b')\n      const hasL = pointStr.includes('l')\n      const hasR = pointStr.includes('r')\n      let newLeft = hasL ? 0 : width\n      let newTop = hasT ? 0 : height\n\n      if ((hasT || hasB) && !(hasL || hasR)) {\n        newLeft = width / 2\n        newTop = hasT ? 0 : height\n      } else if (!(hasT || hasB) && (hasL || hasR)) {\n        newLeft = hasL ? 0 : width\n        newTop = Math.floor(height / 2)\n      }\n\n      return {\n        marginLeft: '-4px',\n        marginTop: '-4px',\n        left: `${newLeft}px`,\n        top: `${newTop}px`,\n        cursor: cursors.value[pointStr]\n      }\n    }\n\n    // 获取每个位置的光标的角度\n    const getCursorStyle = () => {\n      const result: CursorRes = {}\n      let lastMatchIndex = -1\n\n      for (const key in drawPoints) {\n        const angle = mod360(drawPoints[key])\n\n        for (let i = 0; i < angleToCursor.length; i++) {\n          lastMatchIndex = (lastMatchIndex + 1) % angleToCursor.length\n          const angleLimit = angleToCursor[lastMatchIndex]\n\n          if (angle < 23 || angle >= 338) {\n            result[key] = 'nw-resize'\n            break\n          }\n\n          if (angleLimit.start <= angle && angle < angleLimit.end) {\n            result[key] = angleLimit.cursor + '-resize'\n            break\n          }\n        }\n      }\n\n      return result\n    }\n\n    /**\n     * 鼠标按下primitive\n     * @param e MouseEvent\n     */\n    const handleMouseDownEvent = (e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n      // 将当前点击组件的事件传播出去，目前的消费是 VText 组件 https://github.com/woai3c/visual-drag-demo/issues/90\n      // TODO\n      // this.$nextTick(() => eventBus.$emit('componentClick'))\n\n      // editorStore.setInEditorStatus(true)\n      // if (isPreventDrop(props.dataSource.component)) {\n      //   e.preventDefault()\n      // }\n\n      editorStore.setClickPrimitiveStatus(true)\n      editorStore.setCurPrimitive(props.primitive)\n      cursors.value = getCursorStyle()\n\n      const style = props.pStyle\n      const startY = e.clientY\n      const startX = e.clientX\n      const startTop = style.top || 0\n      const startLeft = style.left || 0\n      //鼠标移动事件 用来调整primitive的大小\n\n      const mouseMoveEvent = (event: MouseEvent) => {\n        const curX = event.clientX\n        const curY = event.clientY\n        const style: BoxStyle = {\n          top: ceil(event.clientY - startY + startTop),\n          left: ceil(event.clientX - startX + startLeft)\n        }\n\n        props.primitive.updateStyle(style)\n\n        // 等更新完当前组件的样式并绘制到屏幕后再判断是否需要吸附\n        // 如果不使用 $nextTick，吸附后将无法移动\n        // this.$nextTick(() => {\n        // 触发元素移动事件，用于显示标线、吸附功能\n        // 后面两个参数代表鼠标移动方向\n        // curY - startY > 0 true 表示向下移动 false 表示向上移动\n        // curX - startX > 0 true 表示向右移动 false 表示向左移动\n        const isDownward = curY - startY > 0\n        const isRightward = curX - startX > 0\n        eventEmitter.emit('move', { isDownward, isRightward })\n        // })\n      }\n\n      // 鼠标抬起事件\n      const mouseUpEvent = () => {\n        // 触发元素停止移动事件，用于隐藏标线\n        eventEmitter.emit('unmove')\n        document.removeEventListener('mousemove', mouseMoveEvent)\n        document.removeEventListener('mouseup', mouseUpEvent)\n      }\n\n      document.addEventListener('mousemove', mouseMoveEvent)\n      document.addEventListener('mouseup', mouseUpEvent)\n    }\n\n    /**\n     * 调整包围盒和内部组件的大小\n     * @param pType String\n     * @param e MouseEvent\n     */\n    const handleAdjustSize = (pType: string, e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n\n      const { pStyle } = props\n      const { height = 0, width = 0, top = 0, left = 0 } = pStyle\n      const startX = e.clientX\n      const startY = e.clientY\n      const mouseMoveEvent = (moveEvent: MouseEvent) => {\n        const curX = moveEvent.clientX\n        const curY = moveEvent.clientY\n        const disY = curY - startY\n        const disX = curX - startX\n        const hasT = /t/.test(pType)\n        const hasB = /b/.test(pType)\n        const hasL = /l/.test(pType)\n        const hasR = /r/.test(pType)\n        const newHeight = height + (hasT ? -disY : hasB ? disY : 0)\n        const newWidth = width + (hasL ? -disX : hasR ? disX : 0)\n        Object.assign(pStyle, {\n          height: Math.max(newHeight, 0),\n          width: Math.max(newWidth, 0),\n          left: left + (hasL ? disX : 0),\n          top: top + (hasT ? disY : 0)\n        })\n      }\n      const mouseUpEvent = () => {\n        document.removeEventListener('mousemove', mouseMoveEvent)\n        document.removeEventListener('mouseup', mouseUpEvent)\n      }\n      document.addEventListener('mousemove', mouseMoveEvent)\n      document.addEventListener('mouseup', mouseUpEvent)\n    }\n\n    onMounted(() => {\n      // 用于 Group 组件\n      if (curPrimitive.value) {\n        cursors.value = getCursorStyle() // 根据旋转角度获取光标位置\n      }\n    })\n\n    /**\n     * 点击当前包围盒\n     */\n    const handleClickBoundBox = (e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n      emit('closeContextmenu')\n      // editorStore.hideContextMenu()\n    }\n\n    /**\n     * 当前组件是否选中\n     */\n    const isSelected = computed(\n      () => curPrimitive.value?.id === props.primitive.id\n    )\n\n    const renderDrawPoints = () =>\n      Object.keys(drawPoints).map((key: string) => (\n        <div\n          key={key}\n          class={styles.point}\n          style={pointStyle(key as string)}\n          onMousedown={(e) => handleAdjustSize(key as string, e)}\n        ></div>\n      ))\n\n    return () => (\n      <div\n        ref={curRef}\n        class={[styles.boundBox, isSelected.value && styles.active]}\n        onClick={handleClickBoundBox}\n        onMousedown={handleMouseDownEvent}\n      >\n        {isSelected.value ? renderDrawPoints() : null}\n        {slots.default?.()}\n      </div>\n    )\n  }\n})\n","type Directions = {\n  [key: string]: number\n}\n\nexport function useBoundBox() {\n  const curRef = ref<HTMLElement | null>(null)\n  const cursors = ref<any>({})\n\n  const drawPoints: Directions = {\n    lt: 0,\n    t: 45,\n    rt: 90,\n    r: 135,\n    rb: 180,\n    b: 225,\n    lb: 270,\n    l: 315\n  }\n\n  // 每个范围的角度对应的光标\n  const angleToCursor = [\n    { start: 338, end: 23, cursor: 'nw' },\n    { start: 23, end: 68, cursor: 'n' },\n    { start: 68, end: 113, cursor: 'ne' },\n    { start: 113, end: 158, cursor: 'e' },\n    { start: 158, end: 203, cursor: 'se' },\n    { start: 203, end: 248, cursor: 's' },\n    { start: 248, end: 293, cursor: 'sw' },\n    { start: 293, end: 338, cursor: 'w' }\n  ]\n\n  return {\n    // rulerRef,\n    curRef,\n    cursors,\n    angleToCursor,\n    drawPoints\n  }\n}\n","export function mod360(deg: number) {\n  return (deg + 360) % 360\n}\n","import { cloneDeep } from 'lodash'\n\nimport { Primitive } from '@/primitives/primitive'\nimport { useEditorStore } from '@/store/editor'\nimport utils from '@/utils'\n\nimport styles from './index.module.scss'\n\nexport default defineComponent({\n  name: 'ContextMenu',\n  setup(props, { expose }) {\n    const message = useMessage()\n    const editorStore = useEditorStore()\n    const { curPrimitive } = storeToRefs(editorStore)\n\n    const variables = reactive({\n      visible: ref(false),\n      top: ref(0),\n      left: ref(0),\n      copyData: ref<Primitive | null>(null)\n    })\n\n    /**\n     * 显示右键菜单\n     */\n    const show = ({ top, left }: { top: number; left: number }) => {\n      variables.top = top\n      variables.left = left\n      variables.visible = true\n    }\n\n    /**\n     * 关闭右键菜单\n     */\n    const close = () => {\n      variables.visible = false\n    }\n\n    // 点击菜单时不取消当前组件的选中状态\n    const handleMouseUp = () => {\n      editorStore.setClickPrimitiveStatus(true)\n    }\n\n    /**\n     * 复制\n     */\n    const handleCopy = () => {\n      const primitive = cloneDeep(curPrimitive.value)\n      primitive!.id = utils.createId()\n      variables.copyData = primitive\n      message.success('复制成功！')\n    }\n\n    /**\n     * 粘贴\n     */\n    const handlePaste = () => {\n      if (!variables.copyData) {\n        message.warning('请选择组件！')\n        return\n      }\n\n      const primitive = variables.copyData\n      primitive.style.top = variables.top\n      primitive.style.left = variables.left\n\n      editorStore.addPrimitive(primitive as Primitive)\n    }\n\n    /**\n     * 清空粘贴板\n     */\n    const handleClearCanvas = () => {\n      editorStore.clear()\n    }\n\n    /**\n     * 删除\n     */\n    const handelDelete = () => {\n      editorStore.deleteCurPrimitive()\n      message.success('删除成功！')\n    }\n\n    /**\n     * 置顶\n     */\n    const handleUp = () => {\n      editorStore.upCurComponent()\n    }\n\n    /**\n     * 置底\n     */\n    const handleDown = () => {\n      editorStore.downCurComponent()\n    }\n\n    /**\n     * 上移\n     */\n    const handleTop = () => {\n      editorStore.moveCurPrimitiveByIndex(1)\n    }\n\n    /**\n     * 下移\n     */\n    const handleBottom = () => {\n      editorStore.moveCurPrimitiveByIndex(-1)\n    }\n\n    const typeHandler = {\n      复制: handleCopy,\n      粘贴: handlePaste,\n      删除: handelDelete,\n      置顶: handleUp,\n      置底: handleDown,\n      上移: handleTop,\n      下移: handleBottom\n    }\n\n    const typeOperations = computed(() =>\n      curPrimitive.value\n        ? typeHandler\n        : { 粘贴: handlePaste, 清空画布: handleClearCanvas }\n    )\n\n    expose({ show, close })\n\n    return () => (\n      <div\n        v-show={variables.visible}\n        class={styles.contextmenu}\n        style={{ top: `${variables.top}px`, left: `${variables.left}px` }}\n      >\n        <ul onMouseup={handleMouseUp}>\n          {Object.entries(typeOperations.value).map(([key, handler]) => (\n            <li onClick={handler}>{key}</li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n})\n","export default defineComponent({\n  name: 'Grid',\n  render() {\n    return (\n      <svg\n        style={{ position: 'absolute', top: 0, left: 0 }}\n        width='100%'\n        height='100%'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <defs>\n          <pattern\n            id='smallGrid'\n            width='7.236328125'\n            height='7.236328125'\n            patternUnits='userSpaceOnUse'\n          >\n            <path\n              d='M 7.236328125 0 L 0 0 0 7.236328125'\n              fill='none'\n              stroke='rgba(207, 207, 207, 0.3)'\n              stroke-width='1'\n            ></path>\n          </pattern>\n          <pattern\n            id='grid'\n            width='36.181640625'\n            height='36.181640625'\n            patternUnits='userSpaceOnUse'\n          >\n            <rect\n              width='36.181640625'\n              height='36.181640625'\n              fill='url(#smallGrid)'\n            ></rect>\n            <path\n              d='M 36.181640625 0 L 0 0 0 36.181640625'\n              fill='none'\n              stroke='rgba(186, 186, 186, 0.5)'\n              stroke-width='1'\n            ></path>\n          </pattern>\n        </defs>\n        <rect width='100%' height='100%' fill='url(#grid)'></rect>\n      </svg>\n    )\n  }\n})\n","import { useEditorStore } from '@/store/editor/index'\n\nimport AuxiliaryLine from './AuxiliaryLine/index'\nimport BoundBox from './BoundBox/index'\nimport ContextMenu from './ContextMenu/index'\nimport Grid from './Grid/index'\nimport styles from './index.module.scss'\nimport { useStyles } from './use-styles'\n\nexport const auxiliaryLineKey = 'AUXILIARY_LINE_KEY'\n\nexport default defineComponent({\n  name: 'Editor',\n  components: { Grid, ContextMenu },\n  setup() {\n    const editorStore = useEditorStore()\n    const primitives = editorStore.primitives\n\n    const contextMenuRef = ref<typeof ContextMenu | null>(null)\n\n    const auxiliaryLineRef = ref<InstanceType<typeof AuxiliaryLine> | null>(\n      null\n    )\n    provide(auxiliaryLineKey, auxiliaryLineRef)\n\n    /**\n     * 按下鼠标左键事件\n     * @param e MouseEvent\n     */\n    const handleMouseDown = (e: MouseEvent) => {\n      editorStore.setClickPrimitiveStatus(false)\n      // e.preventDefault()\n      // e.stopPropagation()\n    }\n\n    /**\n     * 取消当前选中的primitive\n     */\n    const deselectCurPrimitive = (e: MouseEvent) => {\n      if (!editorStore.isClickPrimitive) editorStore.setCurPrimitive(null)\n\n      // 如果不是右键的话就把右键菜单关闭\n      if (e.button != 2) contextMenuRef.value?.close()\n    }\n\n    /**\n     * 开启右键菜单\n     * @param e MouseEvent\n     */\n    const handleShowContextMenu = (e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n      if (!e.target) return\n\n      // 计算菜单相对于编辑器的位移\n      let target = e.target as HTMLElement\n      let top = e.offsetY\n      let left = e.offsetX\n\n      while (target instanceof SVGElement) {\n        target = target.parentNode as HTMLElement\n      }\n\n      while (target.id !== 'editor') {\n        left += target.offsetLeft\n        top += target.offsetTop\n        target = target.parentNode as HTMLElement\n      }\n\n      contextMenuRef.value?.show({ top, left })\n    }\n\n    /**\n     * 关闭右键菜单\n     */\n    const handleCloseContextMenu = () => {\n      contextMenuRef.value?.close()\n    }\n\n    const { getBoundBoxStyle } = useStyles()\n\n    const renderPrimitives = () =>\n      primitives.map((item, index) => (\n        <BoundBox\n          index={index}\n          style={getBoundBoxStyle(item.style)}\n          primitive={item}\n          pStyle={item.style}\n          onCloseContextmenu={handleCloseContextMenu}\n        >\n          {h(resolveComponent(item.cName), {\n            id: 'primitive' + item.id,\n            class: styles.primitive,\n            dataSource: item\n          })}\n        </BoundBox>\n      ))\n\n    return () => (\n      <div\n        id='editor'\n        class={styles.editor}\n        onMousedown={handleMouseDown}\n        onMouseup={deselectCurPrimitive}\n        onContextmenu={handleShowContextMenu}\n      >\n        <Grid />\n        <AuxiliaryLine />\n        <ContextMenu ref={contextMenuRef} />\n        {renderPrimitives()}\n      </div>\n    )\n  }\n})\n","import { BoxStyle, CSSStyleDeclaration } from '@/primitives/types'\n\nexport const useStyles = () => {\n  /**\n   * 获取包围盒的样式\n   * @param style BoxStyle\n   */\n  const getBoundBoxStyle = (style: BoxStyle) => {\n    const pStyle = {} as CSSStyleDeclaration\n\n    for (const [key, value] of Object.entries(style)) {\n      if (value) pStyle[key] = value + 'px'\n    }\n\n    return pStyle\n  }\n\n  /**\n   * 获取渲染节点的样式\n   * @param style BoxStyle\n   */\n  const getPrimitiveStyle = (style: BoxStyle) => {\n    const pStyle = {} as CSSStyleDeclaration\n\n    for (const [key, value] of Object.entries(style)) {\n      if (value) pStyle[key] = value + 'px'\n    }\n\n    return pStyle\n  }\n\n  return {\n    getBoundBoxStyle,\n    getPrimitiveStyle\n  }\n}\n","import Editor from '@/components/Editor/index'\n\nimport styles from './index.module.scss'\nimport { useContainer } from './use-container'\n\nexport default defineComponent({\n  name: 'Container',\n  components: { Editor },\n  setup() {\n    const { ...restFunc } = useContainer()\n\n    return {\n      ...restFunc\n    }\n  },\n  render() {\n    return (\n      <>\n        <div\n          class={styles.container}\n          onDrop={this.handleDrop}\n          onDragover={this.handleDragOver}\n          onMousedown={this.handleMouseDown}\n          onMouseup={this.handleMouseUp}\n        >\n          <Editor />\n        </div>\n      </>\n    )\n  }\n})\n","import { ceil } from 'lodash'\n\nimport { primitivesList } from '@/primitives/loader'\nimport { BoxStyle } from '@/primitives/types'\nimport { useEditorStore } from '@/store/editor/index'\n\nexport const useContainer = () => {\n  const editorStore = useEditorStore()\n\n  /**\n   * 拖动结束事件\n   * @param e DragEvent\n   */\n  const handleDrop = (e: DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n\n    const name = e.dataTransfer!.getData('name')\n    const editorRef = document.querySelector('#editor')!\n    const editorRefRec = editorRef.getBoundingClientRect()\n    const primitive = new primitivesList[name]()\n    const style: BoxStyle = {\n      top: ceil(e.clientY - editorRefRec.y),\n      left: ceil(e.clientX - editorRefRec.x)\n    }\n\n    primitive.updateStyle(style)\n    editorStore.addPrimitive(primitive)\n\n    // 根据画面比例修改组件样式比例 https://github.com/woai3c/visual-drag-demo/issues/91\n    //   changeComponentSizeWithScale(component)\n\n    //   this.$store.commit('recordSnapshot')\n  }\n\n  const handleDragOver = (e: DragEvent) => {\n    e.preventDefault()\n    e.dataTransfer!.dropEffect = 'copy'\n  }\n\n  const handleMouseDown = (e: DragEvent) => {\n    e.stopPropagation()\n  }\n\n  const handleMouseUp = () => {}\n\n  return {\n    handleDrop,\n    handleDragOver,\n    handleMouseDown,\n    handleMouseUp\n  }\n}\n"],"names":["eventEmitter","constructor","__publicField","this","on","eventName","callback","events","includes","push","off","eventCallbacks","filter","item","emit","arg","length","once","onceCallback","calcPrimitiveAxis","style","top","left","right","width","bottom","height","AuxiliaryLine","defineComponent","name","setup","editorStore","useEditorStore","linesRef","ref","lines","diff","xt","xc","xb","yl","yc","yr","onMounted","isRightward","showLine","lineStatus","isDownward","primitives","curPrimitive","curPrimitiveHalfwidth","myright","myleft","curPrimitiveHalfHeight","mybottom","mytop","primitiveStyle","primitive","primitiveHalfwidth","primitiveHalfHeight","conditions","isNearly","lineNode","line","dragShift","lineShift","condition","needToShow","chooseTheTureLine","dragValue","targetValue","Math","abs","value","_createVNode","class","styles","key","l","setLineRef","BoundBox","type","pStyle","index","required","default","storeToRefs","drawPoints","curRef","cursors","angleToCursor","start","end","cursor","lt","t","rt","r","rb","b","lb","hasT","pointStr","hasB","hasL","hasR","newLeft","newTop","marginLeft","marginTop","i","angleLimit","lastMatchIndex","angle","result","props","startY","e","clientY","startX","clientX","startTop","startLeft","curX","event","curY","document","isSelected","computed","_a","id","renderDrawPoints","Object","keys","map","onMousedown","pType","moveEvent","disY","disX","test","newHeight","newWidth","handleAdjustSize","onClick","handleClickBoundBox","slots","call","ContextMenu","expose","message","useMessage","visible","variables","copyData","typeHandler","复制","cloneDeep","粘贴","删除","置顶","置底","上移","下移","清空画布","close","entries","typeOperations","handler","Grid","render","position","xmlns","patternUnits","d","fill","stroke","Editor","components","contextMenuRef","auxiliaryLineRef","provide","button","target","offsetY","offsetX","getBoundBoxStyle","getPrimitiveStyle","_slot","s","h","resolveComponent","cName","dataSource","prototype","toString","_isVNode","handleMouseDown","onMouseup","deselectCurPrimitive","Container","handleDrop","preventDefault","stopPropagation","dataTransfer","getData","editorRefRec","querySelector","getBoundingClientRect","primitivesList","ceil","y","x","updateStyle","addPrimitive","handleDragOver","dropEffect","handleMouseUp","_Fragment"],"mappings":"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"}