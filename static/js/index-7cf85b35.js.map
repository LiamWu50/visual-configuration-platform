{"version":3,"file":"index-7cf85b35.js","sources":["../../../src/views/design-space/chart/scene/index.tsx","../../../src/views/design-space/chart/scene/use-state.ts"],"sourcesContent":["import { CaretForwardOutline } from '@vicons/ionicons5'\nimport { NCollapse, NCollapseItem, NIcon } from 'naive-ui'\n\nimport imageSrc from '@/assets/images/projects/gis-banner.png'\n\nimport styles from './index.module.scss'\nimport { Scene, SceneOptions, useState } from './use-state'\n\nexport default defineComponent({\n  name: 'Scene',\n  emits: ['setEditorScene'],\n  setup(props, ctx) {\n    const { state, getSceneOptions } = useState()\n\n    watchEffect(() => getSceneOptions())\n\n    const handleSelectScene = (val: Scene) => {\n      state.selectedScene = val\n      ctx.emit('setEditorScene', val)\n    }\n\n    const renderScenes = (item: SceneOptions) =>\n      item.scenes.map((item: Scene) => (\n        <div\n          key={item.id}\n          class={[\n            styles.scnene,\n            state.selectedScene?.id === item.id && styles.active\n          ]}\n          onClick={() => handleSelectScene(item)}\n        >\n          <span>{item.label}</span>\n          <img src={imageSrc} />\n        </div>\n      ))\n\n    return () => (\n      <div class={styles.container}>\n        <NCollapse\n          v-slots={{\n            arrow: () => (\n              <NIcon size={12}>\n                <CaretForwardOutline />\n              </NIcon>\n            )\n          }}\n        >\n          {state.sceneOptions.map((item) => (\n            <NCollapseItem title={item.label} name={item.key}>\n              <div class={styles.scnenes}>{renderScenes(item)}</div>\n            </NCollapseItem>\n          ))}\n        </NCollapse>\n      </div>\n    )\n  }\n})\n","import utils from '@/utils'\n\nimport mapSources from '../../../../../public/mock/map-sources.json'\n\nexport interface Scene {\n  id: string\n  label: string\n  type: string\n  dataSource: any[]\n}\n\nexport interface SceneOptions {\n  label: string\n  key: string\n  scenes: Scene[]\n}\n\nexport function useState() {\n  const state = reactive({\n    selectedScene: ref<Scene>(),\n    sceneOptions: ref<SceneOptions[]>([\n      {\n        label: '三维地图',\n        key: 'map',\n        scenes: []\n      },\n      {\n        label: '三维场景',\n        key: 'three',\n        scenes: []\n      }\n    ])\n  })\n\n  const getSceneOptions = () => {\n    state.sceneOptions.forEach((item) => {\n      item.scenes = [\n        {\n          id: utils.createId(),\n          label: '测试三维地图',\n          type: item.key,\n          dataSource: mapSources\n        },\n        {\n          id: utils.createId(),\n          label: '四川三维场景',\n          type: item.key,\n          dataSource: mapSources\n        }\n      ]\n    })\n  }\n\n  return {\n    state,\n    getSceneOptions\n  }\n}\n"],"names":["Scene","defineComponent","name","setup","getSceneOptions","state","reactive","selectedScene","ref","sceneOptions","label","key","scenes","forEach","item","id","utils","createId","type","dataSource","mapSources","watchEffect","renderScenes","map","_createVNode","class","styles","_a","onClick","handleSelectScene","ctx","default","arrow"],"mappings":"ylGAQA,MAAAA,EAAAC,EAAA,CACEC,KAAAA,iCAEAC,KAAAA,CAAAA,EAAAA,iCACiBC,GCKZ,WACL,MAAAC,EAAAC,EAAA,CAAuBC,cAAAC,IACKC,aAAAD,EAAA,CACQ,CAChCE,MAAA,OACSC,IAAA,MACFC,OAAA,IAEP,CACAF,MAAA,OACSC,IAAA,QACFC,OAAA,QAyBX,MAAA,CAAOP,QACLD,gBApBF,KACEC,EAAAI,aAAAI,SAAAC,IACEA,EAAAF,OAAA,CAAc,CACZG,GAAAC,EAAAC,WACqBP,MAAA,SACZQ,KAAAJ,EAAAH,IACIQ,WAAAC,GAEb,CACAL,GAAAC,EAAAC,WACqBP,MAAA,SACZQ,KAAAJ,EAAAH,IACIQ,WAAAC,GAEb,GACF,EAQN,ID3CIC,GAAAA,IAAAA,YAOAC,EAAAR,GAAAA,EAAAF,OAAAW,KAAAT,UAAAU,OAAAA,EAAA,MAAA,UAGkBC,MAAA,CAAAC,GAAA,OAAAC,EAAAtB,EAAAE,oBAAA,EAAAoB,EAAAZ,MAAAD,EAAAC,IAAAW,GAIXE,QAAA,KAAAC,SAAAf,yBAVLgB,EAAAA,KAAAA,iBAAAA,QAW0C,GAAA,CAAAN,EAAA,OAAA,KAAA,CAAAV,EAAAJ,QAAAc,EAAA,MAAA,QAGpB,OAAA,IAIxB,MAAA,IAAAA,EAAA,MAAA,CAAOC,MAAAC,cACuBK,QAAAA,IAAAA,CAAAA,EAAAA,aAAAA,KAAAA,GAAAA,EAAAA,EAAAA,eAWU7B,KAAAY,EAAAH,KAAgB,uBAAAc,MAAAC,iBARhDM,MAAAA,IAAAA,EAAAA,EAAAA,UACiB,CAAAD,QAAAA,IAAAA,CAAAA,EAAAA,EAAAA,KAAAA,YAc3B"}