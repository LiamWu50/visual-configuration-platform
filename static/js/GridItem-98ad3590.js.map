{"version":3,"file":"GridItem-98ad3590.js","sources":["../../../node_modules/naive-ui/es/_utils/vue/get-slot.js","../../../node_modules/naive-ui/es/_internal/icons/Add.js","../../../node_modules/naive-ui/es/grid/src/config.js","../../../node_modules/naive-ui/es/grid/src/GridItem.js"],"sourcesContent":["export function getSlot(instance, slotName = 'default', fallback = []) {\n    const slots = instance.$slots;\n    const slot = slots[slotName];\n    if (slot === undefined)\n        return fallback;\n    return slot();\n}\n","import { h, defineComponent } from 'vue';\nexport default defineComponent({\n    name: 'Add',\n    render() {\n        return (h(\"svg\", { width: \"512\", height: \"512\", viewBox: \"0 0 512 512\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n            h(\"path\", { d: \"M256 112V400M400 256H112\", stroke: \"currentColor\", \"stroke-width\": \"32\", \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\" })));\n    }\n});\n","import { createInjectionKey } from '../../_utils';\nexport const defaultSpan = 1;\nexport const gridInjectionKey = createInjectionKey('n-grid');\n","import { h, defineComponent, inject, getCurrentInstance, computed } from 'vue';\nimport { pxfy } from 'seemly';\nimport { keysOf } from '../../_utils';\nimport { gridInjectionKey } from './config';\nexport const defaultSpan = 1;\nexport const gridItemProps = {\n    span: {\n        type: [Number, String],\n        default: defaultSpan\n    },\n    offset: {\n        type: [Number, String],\n        default: 0\n    },\n    suffix: Boolean,\n    // private props\n    privateOffset: Number,\n    privateSpan: Number,\n    privateColStart: Number,\n    privateShow: {\n        type: Boolean,\n        default: true\n    }\n};\nexport const gridItemPropKeys = keysOf(gridItemProps);\nexport default defineComponent({\n    __GRID_ITEM__: true,\n    name: 'GridItem',\n    alias: ['Gi'],\n    props: gridItemProps,\n    setup() {\n        const { isSsrRef, xGapRef, itemStyleRef, overflowRef, layoutShiftDisabledRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(gridInjectionKey);\n        const self = getCurrentInstance();\n        return {\n            overflow: overflowRef,\n            itemStyle: itemStyleRef,\n            layoutShiftDisabled: layoutShiftDisabledRef,\n            mergedXGap: computed(() => {\n                return pxfy(xGapRef.value || 0);\n            }),\n            deriveStyle: () => {\n                void isSsrRef.value;\n                // Here is quite a hack, I hope there is a better way to solve it\n                const { privateSpan = defaultSpan, privateShow = true, privateColStart = undefined, privateOffset = 0\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                 } = self.vnode.props;\n                const { value: xGap } = xGapRef;\n                const mergedXGap = pxfy(xGap || 0);\n                return {\n                    display: !privateShow ? 'none' : '',\n                    gridColumn: `${privateColStart !== null && privateColStart !== void 0 ? privateColStart : `span ${privateSpan}`} / span ${privateSpan}`,\n                    marginLeft: privateOffset\n                        ? `calc((100% - (${privateSpan} - 1) * ${mergedXGap}) / ${privateSpan} * ${privateOffset} + ${mergedXGap} * ${privateOffset})`\n                        : ''\n                };\n            }\n        };\n    },\n    render() {\n        var _a, _b;\n        if (this.layoutShiftDisabled) {\n            const { span, offset, mergedXGap } = this;\n            return (h(\"div\", { style: {\n                    gridColumn: `span ${span} / span ${span}`,\n                    marginLeft: offset\n                        ? `calc((100% - (${span} - 1) * ${mergedXGap}) / ${span} * ${offset} + ${mergedXGap} * ${offset})`\n                        : ''\n                } }, this.$slots));\n        }\n        return (h(\"div\", { style: [this.itemStyle, this.deriveStyle()] }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a, { overflow: this.overflow })));\n    }\n});\n"],"names":["getSlot","instance","slotName","fallback","slot","$slots","AddIcon","defineComponent","name","render","h","width","height","viewBox","fill","xmlns","d","stroke","defaultSpan","gridInjectionKey","createInjectionKey","NGi","__GRID_ITEM__","alias","props","span","type","Number","String","default","offset","suffix","Boolean","privateOffset","privateSpan","privateColStart","privateShow","setup","isSsrRef","xGapRef","itemStyleRef","overflowRef","layoutShiftDisabledRef","inject","self","getCurrentInstance","overflow","itemStyle","layoutShiftDisabled","mergedXGap","computed","pxfy","value","deriveStyle","vnode","xGap","display","gridColumn","marginLeft","_a","_b","this","style","call"],"mappings":"oHAAO,SAASA,EAAQC,EAAUC,EAAW,UAAWC,EAAW,IAC/D,MACMC,EADQH,EAASI,OACJH,GACnB,YAAa,IAATE,EACOD,EACJC,GACX,CCLA,MAAAE,EAAeC,EAAgB,CAC3BC,KAAM,MACNC,OAAS,IACGC,EAAE,MAAO,CAAEC,MAAO,MAAOC,OAAQ,MAAOC,QAAS,cAAeC,KAAM,OAAQC,MAAO,8BACzFL,EAAE,OAAQ,CAAEM,EAAG,2BAA4BC,OAAQ,eAAgB,eAAgB,KAAM,iBAAkB,QAAS,kBAAmB,aCJtIC,EAAc,EACdC,EAAmBC,EAAmB,UCEtCF,EAAc,EAqB3BG,EAAed,EAAgB,CAC3Be,eAAe,EACfd,KAAM,WACNe,MAAO,CAAC,MACRC,MAxByB,CACzBC,KAAM,CACFC,KAAM,CAACC,OAAQC,QACfC,QAASX,GAEbY,OAAQ,CACJJ,KAAM,CAACC,OAAQC,QACfC,QAAS,GAEbE,OAAQC,QAERC,cAAeN,OACfO,YAAaP,OACbQ,gBAAiBR,OACjBS,YAAa,CACTV,KAAMM,QACNH,SAAS,IASb,KAAAQ,GACU,MAAAC,SAAEA,EAAAC,QAAUA,EAAAC,aAASA,EAAAC,YAAcA,EAAAC,uBAAaA,GAEjDC,EAAOxB,GACNyB,EAAOC,IACN,MAAA,CACHC,SAAUL,EACVM,UAAWP,EACXQ,oBAAqBN,EACrBO,WAAYC,GAAS,IACVC,EAAKZ,EAAQa,OAAS,KAEjCC,YAAa,KACJf,EAASc,MAER,MAAAlB,YAAEA,EAAchB,EAAAkB,YAAaA,GAAc,EAAAD,gBAAMA,EAAkBF,cAAWA,EAAgB,GAE/FW,EAAKU,MAAM9B,OACR4B,MAAOG,GAAShB,EAClBU,EAAaE,EAAKI,GAAQ,GACzB,MAAA,CACHC,QAAUpB,EAAuB,GAAT,OACxBqB,WAAY,GAAGtB,QAAyDA,EAAkB,QAAQD,cAAwBA,IAC1HwB,WAAYzB,EACN,iBAAiBC,YAAsBe,QAAiBf,OAAiBD,OAAmBgB,OAAgBhB,KAC5G,GAC1B,EAGK,EACD,MAAAxB,GACI,IAAIkD,EAAIC,EACR,GAAIC,KAAKb,oBAAqB,CAC1B,MAAMvB,KAAEA,EAAAK,OAAMA,EAAQmB,WAAAA,GAAeY,KAC7B,OAAAnD,EAAE,MAAO,CAAEoD,MAAO,CAClBL,WAAY,QAAQhC,YAAeA,IACnCiC,WAAY5B,EACN,iBAAiBL,YAAewB,QAAiBxB,OAAUK,OAAYmB,OAAgBnB,KACvF,KACL+B,KAAKxD,OACjB,CACD,OAAQK,EAAE,MAAO,CAAEoD,MAAO,CAACD,KAAKd,UAAWc,KAAKR,gBAAwD,QAArCO,GAAMD,EAAKE,KAAKxD,QAAQwB,eAA4B,IAAP+B,OAAgB,EAASA,EAAGG,KAAKJ,EAAI,CAAEb,SAAUe,KAAKf,WACzK","x_google_ignoreList":[0,1,2,3]}