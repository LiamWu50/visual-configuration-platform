{"version":3,"file":"index-5b14677f.js","sources":["../../../src/store/area-select/index.ts","../../../src/components/Editor/AreaSelect/index.tsx","../../../src/utils/event-emitter.ts","../../../src/utils/translate.ts","../../../src/utils/primitive.ts","../../../src/components/Editor/AuxiliaryLine/index.tsx","../../../src/components/Editor/BoundBox/index.tsx","../../../src/components/Editor/BoundBox/use-boundbox.ts","../../../src/components/Editor/ContextMenu/index.tsx","../../../src/components/Editor/hooks/use-compose.ts","../../../src/components/Editor/Grid/index.tsx","../../../src/components/Editor/hooks/use-styles.ts","../../../src/components/Editor/index.tsx","../../../src/components/Editor/hooks/use-group.ts","../../../src/views/design-space/chart/container/index.tsx","../../../src/views/design-space/chart/container/use-container.ts"],"sourcesContent":["import { Primitive } from '@/primitives/primitive'\nimport { DOMRectStyle } from '@/primitives/types'\n\nexport const useAreaSelectStore = defineStore('areaSelect', () => {\n  const groupStyle = ref<DOMRectStyle | null>(null)\n  const childPrimitives = ref<Primitive[]>([])\n  const areaSelectVisible = ref(false)\n\n  /**\n   * 保存框选中的 primitive 以及包围框的样式\n   * @param style  包围和样式\n   * @param primitives 选中的 primitive\n   */\n  const setAreaSelectOptions = (\n    style: DOMRectStyle | null,\n    primitives: Primitive[]\n  ) => {\n    groupStyle.value = style\n    childPrimitives.value = primitives\n  }\n\n  /**\n   * 清除childPrimitives\n   */\n  const clearPrimitives = () => {\n    childPrimitives.value = []\n  }\n\n  /**\n   * 设置包围盒可见性\n   * @param visible Boolean\n   */\n  const setAreaSelectVisible = (visible: boolean) => {\n    areaSelectVisible.value = visible\n  }\n\n  return {\n    groupStyle,\n    childPrimitives,\n    areaSelectVisible,\n    clearPrimitives,\n    setAreaSelectOptions,\n    setAreaSelectVisible\n  }\n})\n","import styles from './index.module.scss'\n\nexport default defineComponent({\n  name: 'AreaSelect',\n  props: {\n    options: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  setup(props) {\n    const style = computed(() => ({\n      left: props.options.start.x + 'px',\n      top: props.options.start.y + 'px',\n      width: props.options.width + 'px',\n      height: props.options.height + 'px'\n    }))\n\n    return () => <div style={style.value} class={styles.areaSelect}></div>\n  }\n})\n","class EventEmitter {\n  private events: Record<string, Function[]> = {}\n\n  // 监听事件\n  on(eventName: string, callback: Function) {\n    if (!this.events[eventName]) {\n      this.events[eventName] = []\n    }\n    if (!this.events[eventName].includes(callback)) {\n      this.events[eventName].push(callback)\n    }\n  }\n\n  // 取消监听事件\n  off(eventName: string, callback: Function) {\n    const eventCallbacks = this.events[eventName]\n    if (eventCallbacks) {\n      this.events[eventName] = eventCallbacks.filter(\n        (item) => item !== callback\n      )\n    }\n  }\n\n  // 触发事件\n  emit(eventName: string, arg?: any) {\n    const eventCallbacks = this.events[eventName]\n    if (eventCallbacks && eventCallbacks.length > 0) {\n      for (const callback of eventCallbacks) {\n        callback(arg)\n      }\n    } else {\n      console.log(`no listener for event: ${eventName}`)\n    }\n  }\n\n  // 只监听一次事件\n  once(eventName: string, callback: Function) {\n    const onceCallback = (arg: any) => {\n      callback(arg)\n      this.off(eventName, onceCallback)\n    }\n    this.on(eventName, onceCallback)\n  }\n}\n\nexport default new EventEmitter()\n","export function mod360(deg: number) {\n  return (deg + 360) % 360\n}\n\nexport function toPercent(val: number) {\n  return val * 100 + '%'\n}\n","import { Primitive } from '@/primitives/primitive'\nimport type {\n  BoxStyle,\n  DOMRect,\n  DOMRectStyle,\n  Location\n} from '@/primitives/types'\n\nimport { toPercent } from './translate'\n\nconst needUnit = [\n  'fontSize',\n  'width',\n  'height',\n  'top',\n  'left',\n  'borderWidth',\n  'letterSpacing',\n  'borderRadius'\n]\n\n/**\n * 计算组件笛卡尔坐标系坐标\n * @param style 组件在画布中的位置\n * @returns 组件坐标\n */\nexport function calcPrimitiveAxis(style: DOMRectStyle): Location {\n  return {\n    top: style.top,\n    left: style.left,\n    right: style.left + style.width,\n    bottom: style.top + style.height\n  }\n}\n\nexport function getStyle(style: DOMRectStyle, filter = []) {\n  const result = {} as any\n  Object.keys(style).forEach((key) => {\n    if (!filter.find((item) => key === item)) {\n      if (!!style[key]) {\n        result[key] = style[key]\n\n        if (needUnit.includes(key)) {\n          result[key] += 'px'\n        }\n      }\n    }\n  })\n\n  return result\n}\n\n// 获取一个组件的样式\nexport function getPrimitiveStyle(style: BoxStyle) {\n  style = { ...style }\n  style.bottom = style.top! + style.height!\n  style.right = style.left! + style.width!\n\n  return style\n}\n\n// 将组合中的各个子组件拆分出来，并计算它们新的 style\nexport function decomposePrimitive(\n  primitive: Primitive,\n  editorRect: DOMRect,\n  parentStyle: BoxStyle\n) {\n  const element = document.getElementById(`primitive${primitive.id}`)\n  const rectInfo = element!.getBoundingClientRect()\n  // 获取元素的中心点坐标\n  const center = {\n    x: rectInfo.left - editorRect.left + rectInfo.width / 2,\n    y: rectInfo.top - editorRect.top + rectInfo.height / 2\n  }\n\n  primitive.style.width =\n    (parseFloat(primitive.groupStyle.width) / 100) * parentStyle.width!\n  primitive.style.height =\n    (parseFloat(primitive.groupStyle.height) / 100) * parentStyle.height!\n  // 计算出元素新的 top left 坐标\n  primitive.style.left = center.x - primitive.style.width / 2\n  primitive.style.top = center.y - primitive.style.height / 2\n  primitive.groupStyle = {}\n}\n\n/**\n * 创建组的样式\n * @param groupPrimitive Primitive\n */\nexport function createGroupStyle(groupPrimitive: Primitive) {\n  const parentStyle = groupPrimitive.style as DOMRectStyle\n  groupPrimitive.childPrimitives?.forEach((primitive: Primitive) => {\n    // primitive.groupStyle 的 top left 是相对于 group 组件的位置\n    if (!primitive.groupStyle) {\n      const style = { ...primitive.style } as DOMRectStyle\n\n      primitive.groupStyle = getStyle(style)\n\n      primitive.groupStyle.left = toPercent(\n        (style.left - parentStyle.left) / parentStyle.width\n      )\n      primitive.groupStyle.top = toPercent(\n        (style.top - parentStyle.top) / parentStyle.height\n      )\n      primitive.groupStyle.width = toPercent(style.width / parentStyle.width)\n      primitive.groupStyle.height = toPercent(style.height / parentStyle.height)\n    }\n  })\n}\n","// 导入类型和工具函数\nimport type { DOMRectStyle, Location } from '@/primitives/types'\nimport { useEditorStore } from '@/store/editor'\nimport eventEmitter from '@/utils/event-emitter'\nimport { calcPrimitiveAxis } from '@/utils/primitive'\n\nimport styles from './index.module.scss'\n\n// 定义一些类型和常量\nexport type StyleObject = {\n  [key: string]: any\n}\n\ninterface LineStatus {\n  [key: string]: boolean\n}\n\ntype Condition = Record<\n  'isNearly' | 'lineNode' | 'line' | 'dragShift' | 'lineShift',\n  any\n>\n\ntype RecordWithAnyKey<T> = {\n  [key: string]: T\n}\n\nexport default defineComponent({\n  name: 'AuxiliaryLine',\n  setup() {\n    const editorStore = useEditorStore()\n    const lineElementsRef: Ref<(HTMLElement | null)[]> = ref([])\n    const LINE_NAMES = ['xt', 'xc', 'xb', 'yl', 'yc', 'yr']\n    const NEAR_THRESHOLD = ref<number>(3)\n    const lineStatus = reactive<LineStatus>({\n      xt: false,\n      xc: false,\n      xb: false,\n      yl: false,\n      yc: false,\n      yr: false\n    })\n\n    const setLineElementRef = (element: any) => {\n      lineElementsRef.value.push(element)\n    }\n\n    // 隐藏辅助线\n    const hideLines = () => {\n      Object.keys(lineStatus).forEach((line) => {\n        lineStatus[line] = false\n      })\n    }\n\n    const showLines = (isDownward: boolean, isRightward: boolean) => {\n      const { primitives } = editorStore\n      const currentPrimitive = editorStore.curPrimitive\n      if (!currentPrimitive) return\n\n      const {\n        top: theTop,\n        left: theLeft,\n        right: theRight,\n        bottom: theBottom\n      }: Location = calcPrimitiveAxis(currentPrimitive.style as DOMRectStyle)\n\n      const currentPrimitiveHalfWidth = (theRight - theLeft) / 2\n      const currentPrimitiveHalfHeight = (theBottom - theTop) / 2\n\n      hideLines()\n      primitives.forEach((primitive) => {\n        if (primitive == currentPrimitive) return\n\n        const primitiveStyle = calcPrimitiveAxis(\n          primitive.style as DOMRectStyle\n        )\n        const { top, left, bottom, right } = primitiveStyle\n        const primitiveHalfWidth = (right - left!) / 2\n        const primitiveHalfHeight = (bottom - top!) / 2\n\n        const conditions: RecordWithAnyKey<Condition[]> = {\n          top: [\n            {\n              isNearly: isNearly(theTop, top),\n              lineNode: lineElementsRef.value[0], // xt\n              line: 'xt',\n              dragShift: top,\n              lineShift: top\n            },\n            {\n              isNearly: isNearly(theBottom, top),\n              lineNode: lineElementsRef.value[0], // xt\n              line: 'xt',\n              dragShift: top - (theBottom - theTop || 0),\n              lineShift: top\n            },\n            {\n              // 组件与拖拽节点的中间是否对齐\n              isNearly: isNearly(\n                (theTop || 0) + currentPrimitiveHalfHeight,\n                top + primitiveHalfHeight\n              ),\n              lineNode: lineElementsRef.value[1], // xc\n              line: 'xc',\n              dragShift: top + primitiveHalfHeight - currentPrimitiveHalfHeight,\n              lineShift: top + primitiveHalfHeight\n            },\n            {\n              isNearly: isNearly(theTop, bottom),\n              lineNode: lineElementsRef.value[2], // xb\n              line: 'xb',\n              dragShift: bottom,\n              lineShift: bottom\n            },\n            {\n              isNearly: isNearly(theBottom, bottom),\n              lineNode: lineElementsRef.value[2], // xb\n              line: 'xb',\n              dragShift: bottom - (theBottom - theTop || 0),\n              lineShift: bottom\n            }\n          ],\n          left: [\n            {\n              isNearly: isNearly(theLeft, left),\n              lineNode: lineElementsRef.value[3], // yl\n              line: 'yl',\n              dragShift: left,\n              lineShift: left\n            },\n            {\n              isNearly: isNearly(theRight, left),\n              lineNode: lineElementsRef.value[3], // yl\n              line: 'yl',\n              dragShift: left - (theRight - theLeft || 0),\n              lineShift: left\n            },\n            {\n              // 组件与拖拽节点的中间是否对齐\n              isNearly: isNearly(\n                (theLeft || 0) + currentPrimitiveHalfWidth,\n                left + primitiveHalfWidth\n              ),\n              lineNode: lineElementsRef.value[4], // yc\n              line: 'yc',\n              dragShift: left + primitiveHalfWidth - currentPrimitiveHalfWidth,\n              lineShift: left + primitiveHalfWidth\n            },\n            {\n              isNearly: isNearly(theLeft, right),\n              lineNode: lineElementsRef.value[5], // yr\n              line: 'yr',\n              dragShift: right,\n              lineShift: right\n            },\n            {\n              isNearly: isNearly(theRight, right),\n              lineNode: lineElementsRef.value[5], // yr\n              line: 'yr',\n              dragShift: right - (theRight - theLeft || 0),\n              lineShift: right\n            }\n          ]\n        }\n\n        const needToShow: string[] = []\n\n        Object.keys(conditions).forEach((key) => {\n          // 遍历符合的条件并处理\n          conditions[key].forEach((condition: Condition) => {\n            if (!condition.isNearly) return\n            // 修改当前组件位移\n            currentPrimitive.updateStyleByKey(key, condition.dragShift)\n            condition.lineNode.style[key] = `${condition.lineShift}px`\n            needToShow.push(condition.line)\n          })\n        })\n\n        // 同一方向上同时显示一条线可能不太美观，因此采取选择逻辑\n        chooseTheTrueLine(needToShow, isDownward, isRightward)\n      })\n    }\n\n    const chooseTheTrueLine = (\n      needToShow: string[],\n      isDownward: boolean,\n      isRightward: boolean\n    ) => {\n      // 根据鼠标移动方向决定显示哪条线\n      if (isRightward) {\n        if (needToShow.includes('yr')) {\n          lineStatus.yr = true\n        } else if (needToShow.includes('yc')) {\n          lineStatus.yc = true\n        } else if (needToShow.includes('yl')) {\n          lineStatus.yl = true\n        }\n      } else {\n        if (needToShow.includes('yl')) {\n          lineStatus.yl = true\n        } else if (needToShow.includes('yc')) {\n          lineStatus.yc = true\n        } else if (needToShow.includes('yr')) {\n          lineStatus.yr = true\n        }\n      }\n\n      if (isDownward) {\n        if (needToShow.includes('xb')) {\n          lineStatus.xb = true\n        } else if (needToShow.includes('xc')) {\n          lineStatus.xc = true\n        } else if (needToShow.includes('xt')) {\n          lineStatus.xt = true\n        }\n      } else {\n        if (needToShow.includes('xt')) {\n          lineStatus.xt = true\n        } else if (needToShow.includes('xc')) {\n          lineStatus.xc = true\n        } else if (needToShow.includes('xb')) {\n          lineStatus.xb = true\n        }\n      }\n    }\n\n    const isNearly = (dragValue: number, targetValue: number) =>\n      Math.abs(dragValue - targetValue) <= NEAR_THRESHOLD.value\n\n    watchEffect(() => {\n      // 监听事件\n      eventEmitter.on('move', ({ isDownward, isRightward }: any) => {\n        showLines(isDownward, isRightward)\n      })\n      eventEmitter.on('unmove', () => {\n        hideLines()\n      })\n      showLines(false, false)\n    })\n\n    return () => (\n      // 渲染线条\n      <div class={styles.markLine}>\n        {LINE_NAMES.map((lineName) => (\n          <div\n            key={lineName}\n            v-show={lineStatus[lineName]}\n            ref={setLineElementRef}\n            class={`${styles.line} ${\n              lineName.includes('x') ? styles.xline : styles.yline\n            }`}\n          ></div>\n        ))}\n      </div>\n    )\n  }\n})\n","// import { Component, Style } from '@/store/compose/types'\nimport { ceil } from 'lodash'\nimport { type PropType } from 'vue'\n\nimport { Primitive } from '@/primitives/primitive'\nimport { BoxStyle } from '@/primitives/types'\nimport { useAreaSelectStore } from '@/store/area-select/index'\nimport { useEditorStore } from '@/store/editor/index'\nimport eventEmitter from '@/utils/event-emitter'\nimport { mod360 } from '@/utils/translate'\n\nimport styles from './index.module.scss'\nimport { useBoundBox } from './use-boundbox'\n// const components = ['VText', 'RectShape', 'CircleShape']\n// const isPreventDrop = (component: string) => {\n//   return !components.includes(component) && !component.startsWith('SVG')\n// }\n\ntype CursorRes = {\n  [key: string]: string\n}\n\nconst props = {\n  primitive: {\n    type: Object as PropType<Primitive>,\n    default: () => {}\n  },\n  pStyle: {\n    type: Object as PropType<BoxStyle>,\n    default: () => {}\n  },\n  index: {\n    required: true,\n    type: Number,\n    default: 0\n  }\n}\n\nexport default defineComponent({\n  name: 'BoundBox',\n  props,\n  emits: ['closeContextmenu'],\n  setup(props, { slots, emit }) {\n    const editorStore = useEditorStore()\n    const areaSelectStore = useAreaSelectStore()\n\n    const { curPrimitive } = storeToRefs(editorStore)\n    const { areaSelectVisible } = storeToRefs(areaSelectStore)\n\n    const { curRef, cursors, angleToCursor, drawPoints } = useBoundBox()\n\n    // 位置点的样式\n    const pointStyle = (pointStr: string) => {\n      const { width = 0, height = 0 } = props.pStyle\n      const hasT = pointStr.includes('t')\n      const hasB = pointStr.includes('b')\n      const hasL = pointStr.includes('l')\n      const hasR = pointStr.includes('r')\n      let newLeft = hasL ? 0 : width\n      let newTop = hasT ? 0 : height\n\n      if ((hasT || hasB) && !(hasL || hasR)) {\n        newLeft = width / 2\n        newTop = hasT ? 0 : height\n      } else if (!(hasT || hasB) && (hasL || hasR)) {\n        newLeft = hasL ? 0 : width\n        newTop = Math.floor(height / 2)\n      }\n\n      return {\n        marginLeft: '-4px',\n        marginTop: '-4px',\n        left: `${newLeft}px`,\n        top: `${newTop}px`,\n        cursor: cursors.value[pointStr]\n      }\n    }\n\n    // 获取每个位置的光标的角度\n    const getCursorStyle = () => {\n      const result: CursorRes = {}\n      let lastMatchIndex = -1\n\n      for (const key in drawPoints) {\n        const angle = mod360(drawPoints[key])\n\n        for (let i = 0; i < angleToCursor.length; i++) {\n          lastMatchIndex = (lastMatchIndex + 1) % angleToCursor.length\n          const angleLimit = angleToCursor[lastMatchIndex]\n\n          if (angle < 23 || angle >= 338) {\n            result[key] = 'nw-resize'\n            break\n          }\n\n          if (angleLimit.start <= angle && angle < angleLimit.end) {\n            result[key] = angleLimit.cursor + '-resize'\n            break\n          }\n        }\n      }\n\n      return result\n    }\n\n    /**\n     * 鼠标按下primitive\n     * @param e MouseEvent\n     */\n    const handleMouseDownEvent = (e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n\n      // 如果当前是在组合的模式下，就取消该方法\n      if (areaSelectVisible.value) return\n\n      // 将当前点击组件的事件传播出去，目前的消费是 VText 组件 https://github.com/woai3c/visual-drag-demo/issues/90\n      // TODO\n      // this.$nextTick(() => eventBus.$emit('componentClick'))\n\n      // editorStore.setInEditorStatus(true)\n      // if (isPreventDrop(props.dataSource.component)) {\n      //   e.preventDefault()\n      // }\n\n      editorStore.setClickPrimitiveStatus(true)\n      editorStore.setCurPrimitive(props.primitive)\n      cursors.value = getCursorStyle()\n\n      const style = props.pStyle\n      const startY = e.clientY\n      const startX = e.clientX\n      const startTop = style.top || 0\n      const startLeft = style.left || 0\n      //鼠标移动事件 用来调整primitive的大小\n\n      const mouseMoveEvent = (event: MouseEvent) => {\n        const curX = event.clientX\n        const curY = event.clientY\n        const style: BoxStyle = {\n          top: ceil(event.clientY - startY + startTop),\n          left: ceil(event.clientX - startX + startLeft)\n        }\n\n        props.primitive.updateStyle(style)\n\n        // 等更新完当前组件的样式并绘制到屏幕后再判断是否需要吸附\n        // 如果不使用 $nextTick，吸附后将无法移动\n        // 触发元素移动事件，用于显示标线、吸附功能\n        // 后面两个参数代表鼠标移动方向\n        // curY - startY > 0 true 表示向下移动 false 表示向上移动\n        // curX - startX > 0 true 表示向右移动 false 表示向左移动\n        const isDownward = curY - startY > 0\n        const isRightward = curX - startX > 0\n        eventEmitter.emit('move', { isDownward, isRightward })\n      }\n\n      // 鼠标抬起事件\n      const mouseUpEvent = () => {\n        // 触发元素停止移动事件，用于隐藏标线\n        eventEmitter.emit('unmove')\n        document.removeEventListener('mousemove', mouseMoveEvent)\n        document.removeEventListener('mouseup', mouseUpEvent)\n      }\n\n      document.addEventListener('mousemove', mouseMoveEvent)\n      document.addEventListener('mouseup', mouseUpEvent)\n    }\n\n    /**\n     * 调整包围盒和内部组件的大小\n     * @param pType String\n     * @param e MouseEvent\n     */\n    const handleAdjustSize = (pType: string, e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n\n      const { pStyle } = props\n      const { height = 0, width = 0, top = 0, left = 0 } = pStyle\n      const startX = e.clientX\n      const startY = e.clientY\n      const mouseMoveEvent = (moveEvent: MouseEvent) => {\n        const curX = moveEvent.clientX\n        const curY = moveEvent.clientY\n        const disY = curY - startY\n        const disX = curX - startX\n        const hasT = /t/.test(pType)\n        const hasB = /b/.test(pType)\n        const hasL = /l/.test(pType)\n        const hasR = /r/.test(pType)\n        const newHeight = height + (hasT ? -disY : hasB ? disY : 0)\n        const newWidth = width + (hasL ? -disX : hasR ? disX : 0)\n        Object.assign(pStyle, {\n          height: Math.max(newHeight, 0),\n          width: Math.max(newWidth, 0),\n          left: left + (hasL ? disX : 0),\n          top: top + (hasT ? disY : 0)\n        })\n      }\n      const mouseUpEvent = () => {\n        document.removeEventListener('mousemove', mouseMoveEvent)\n        document.removeEventListener('mouseup', mouseUpEvent)\n      }\n      document.addEventListener('mousemove', mouseMoveEvent)\n      document.addEventListener('mouseup', mouseUpEvent)\n    }\n\n    onMounted(() => {\n      // 用于 Group 组件\n      if (curPrimitive.value) {\n        cursors.value = getCursorStyle() // 根据旋转角度获取光标位置\n      }\n    })\n\n    /**\n     * 点击当前包围盒\n     */\n    const handleClickBoundBox = (e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n      emit('closeContextmenu')\n      // editorStore.hideContextMenu()\n    }\n\n    /**\n     * 当前组件是否选中\n     */\n    const isSelected = computed(\n      () => curPrimitive.value?.id === props.primitive.id\n    )\n\n    const renderDrawPoints = () =>\n      Object.keys(drawPoints).map((key: string) => (\n        <div\n          key={key}\n          class={styles.point}\n          style={pointStyle(key as string)}\n          onMousedown={(e) => handleAdjustSize(key as string, e)}\n        ></div>\n      ))\n\n    return () => (\n      <div\n        ref={curRef}\n        class={[styles.boundBox, isSelected.value && styles.active]}\n        onClick={handleClickBoundBox}\n        onMousedown={handleMouseDownEvent}\n      >\n        {isSelected.value ? renderDrawPoints() : null}\n        {slots.default?.()}\n      </div>\n    )\n  }\n})\n","type Directions = {\n  [key: string]: number\n}\n\nexport function useBoundBox() {\n  const curRef = ref<HTMLElement | null>(null)\n  const cursors = ref<any>({})\n\n  const drawPoints: Directions = {\n    lt: 0,\n    t: 45,\n    rt: 90,\n    r: 135,\n    rb: 180,\n    b: 225,\n    lb: 270,\n    l: 315\n  }\n\n  // 每个范围的角度对应的光标\n  const angleToCursor = [\n    { start: 338, end: 23, cursor: 'nw' },\n    { start: 23, end: 68, cursor: 'n' },\n    { start: 68, end: 113, cursor: 'ne' },\n    { start: 113, end: 158, cursor: 'e' },\n    { start: 158, end: 203, cursor: 'se' },\n    { start: 203, end: 248, cursor: 's' },\n    { start: 248, end: 293, cursor: 'sw' },\n    { start: 293, end: 338, cursor: 'w' }\n  ]\n\n  return {\n    // rulerRef,\n    curRef,\n    cursors,\n    angleToCursor,\n    drawPoints\n  }\n}\n","import { cloneDeep } from 'lodash'\n\nimport { Primitive } from '@/primitives/primitive'\nimport { useAreaSelectStore } from '@/store/area-select/index'\nimport { useEditorStore } from '@/store/editor'\nimport utils from '@/utils'\n\nimport { useCompose } from '../hooks/use-compose'\nimport styles from './index.module.scss'\n\ninterface ContextOptions {\n  label: string\n  handler: () => void\n  disabled?: boolean\n}\n\nexport default defineComponent({\n  name: 'ContextMenu',\n  setup(props, { expose }) {\n    const message = useMessage()\n    const editorStore = useEditorStore()\n    const areaSelectStore = useAreaSelectStore()\n    const { handleCompose } = useCompose()\n\n    const { curPrimitive } = storeToRefs(editorStore)\n    const { areaSelectVisible } = storeToRefs(areaSelectStore)\n\n    const variables = reactive({\n      visible: ref(false),\n      top: ref(0),\n      left: ref(0),\n      contextType: ref(''),\n      copyData: ref<Primitive | null>(null),\n      contextOptions: ref<ContextOptions[]>([])\n    })\n\n    /**\n     * 显示右键菜单\n     */\n    const show = ({\n      top,\n      left,\n      contextType\n    }: {\n      top: number\n      left: number\n      contextType: string\n    }) => {\n      variables.top = top\n      variables.left = left\n      variables.contextType = contextType\n      getContextOptions()\n      variables.visible = true\n    }\n\n    /**\n     * 关闭右键菜单\n     */\n    const close = () => {\n      variables.visible = false\n    }\n\n    // 点击菜单时不取消当前组件的选中状态\n    const handleMouseUp = () => {\n      editorStore.setClickPrimitiveStatus(true)\n    }\n\n    /**\n     * 复制\n     */\n    const handleCopy = () => {\n      const primitive = cloneDeep(curPrimitive.value)\n      primitive!.id = utils.createId()\n      variables.copyData = primitive\n      message.success('复制成功！')\n    }\n\n    /**\n     * 粘贴\n     */\n    const handlePaste = () => {\n      if (!variables.copyData) {\n        message.warning('请选择组件！')\n        return\n      }\n\n      const primitive = variables.copyData\n      primitive.style.top = variables.top\n      primitive.style.left = variables.left\n\n      editorStore.addPrimitive(primitive as Primitive)\n    }\n\n    /**\n     * 清空粘贴板\n     */\n    const handleClearCanvas = () => {\n      editorStore.clear()\n    }\n\n    /**\n     * 删除\n     */\n    const handelDelete = () => {\n      editorStore.deleteCurPrimitive()\n      message.success('删除成功！')\n    }\n\n    /**\n     * 置顶\n     */\n    const handleUp = () => {\n      editorStore.upCurComponent()\n    }\n\n    /**\n     * 置底\n     */\n    const handleDown = () => {\n      editorStore.downCurComponent()\n    }\n\n    /**\n     * 上移\n     */\n    const handleTop = () => {\n      editorStore.moveCurPrimitiveByIndex(1)\n    }\n\n    /**\n     * 下移\n     */\n    const handleBottom = () => {\n      editorStore.moveCurPrimitiveByIndex(-1)\n    }\n\n    /**\n     * 创建分组\n     */\n    const handleCreateGroup = () => {\n      handleCompose()\n    }\n\n    /**\n     * 删除分组\n     */\n    const handleDeleteGroup = () => {\n      handleCompose()\n    }\n\n    const defaultOptions = [\n      {\n        label: '复制',\n        handler: handleCopy\n      },\n      {\n        label: '粘贴',\n        handler: handlePaste\n      },\n      {\n        label: '删除',\n        handler: handelDelete\n      },\n      {\n        label: '置顶',\n        handler: handleUp\n      },\n      {\n        label: '置底',\n        handler: handleDown\n      },\n      {\n        label: '上移',\n        handler: handleTop\n      },\n      {\n        label: '下移',\n        handler: handleBottom\n      }\n    ]\n\n    const groupOptions = [\n      {\n        label: '组合',\n        handler: handleCreateGroup\n      },\n      {\n        label: '删除',\n        handler: handleDeleteGroup\n      }\n    ]\n\n    const editorOptions = [\n      {\n        label: '粘贴',\n        handler: handlePaste\n      },\n      {\n        label: '清空画布',\n        handler: handleClearCanvas\n      }\n    ]\n\n    const getContextOptions = () => {\n      if (areaSelectVisible.value) {\n        variables.contextOptions = [...groupOptions]\n      } else if (variables.contextType === 'Editor') {\n        variables.contextOptions = [...editorOptions]\n      } else {\n        variables.contextOptions = [...defaultOptions]\n        if (variables.contextType === 'Group') {\n          variables.contextOptions.unshift({\n            label: '解除分组',\n            handler: handleDeleteGroup\n          })\n        }\n      }\n    }\n\n    expose({ show, close })\n\n    return () => (\n      <div\n        v-show={variables.visible}\n        class={styles.contextmenu}\n        style={{ top: `${variables.top}px`, left: `${variables.left}px` }}\n      >\n        <ul onMouseup={handleMouseUp} onMousedown={(e) => e.stopPropagation()}>\n          {variables.contextOptions.map((item) => (\n            <li onClick={item.handler}>\n              {item.label} {item.disabled}\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n})\n","import GroupPrimitive from '@/primitives/components/group/primitive'\nimport { Primitive } from '@/primitives/primitive'\nimport { useAreaSelectStore } from '@/store/area-select/index'\nimport { useEditorStore } from '@/store/editor/index'\nimport { createGroupStyle, decomposePrimitive } from '@/utils/primitive'\n\nexport function useCompose() {\n  const editorStore = useEditorStore()\n  const areaSelectStore = useAreaSelectStore()\n  const { curPrimitive } = storeToRefs(editorStore)\n  const { groupStyle, childPrimitives } = storeToRefs(areaSelectStore)\n\n  // 合并 primitive\n  const handleCompose = () => {\n    const components = [] as Primitive[]\n    const primitives = childPrimitives.value as Primitive[]\n    primitives.forEach((primitive) => {\n      // 如果要组合的组件中，已经存在组合数据，则需要提前拆分\n      if (primitive.cName === 'Group') {\n        const parentStyle = { ...primitive.style }\n        const editor = document.querySelector('#editor')\n        const editorRect = editor!.getBoundingClientRect()\n\n        primitive.childPrimitives?.forEach((primitive) => {\n          decomposePrimitive(primitive, editorRect, parentStyle)\n          components.push(primitive)\n        })\n      } else {\n        components.push(primitive)\n      }\n    })\n\n    const groupPrimitive = new GroupPrimitive()\n    groupPrimitive.childPrimitives = components\n    groupPrimitive.style = { ...groupStyle.value }\n\n    createGroupStyle(groupPrimitive)\n\n    const deletePrimitives = childPrimitives.value as Primitive[]\n    editorStore.batchDeletePrimitive(deletePrimitives)\n    editorStore.addPrimitive(groupPrimitive)\n    editorStore.setCurPrimitive(groupPrimitive)\n    areaSelectStore.setAreaSelectVisible(false)\n    areaSelectStore.clearPrimitives()\n  }\n\n  // 解除合并 primitive\n  const handleDecompose = () => {\n    const parentStyle = { ...curPrimitive.value?.style }\n    const primitives = curPrimitive.value?.childPrimitives as Primitive[]\n    const editor = document.querySelector('#editor')\n    const editorRect = editor?.getBoundingClientRect() as DOMRect\n    editorStore.deleteCurPrimitive()\n\n    primitives.forEach((primitive) => {\n      decomposePrimitive(primitive, editorRect, parentStyle)\n      editorStore.addPrimitive(primitive)\n    })\n  }\n\n  return {\n    handleCompose,\n    handleDecompose\n  }\n}\n","export default defineComponent({\n  name: 'Grid',\n  render() {\n    return (\n      <svg\n        style={{ position: 'absolute', top: 0, left: 0 }}\n        width='100%'\n        height='100%'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <defs>\n          <pattern\n            id='smallGrid'\n            width='7.236328125'\n            height='7.236328125'\n            patternUnits='userSpaceOnUse'\n          >\n            <path\n              d='M 7.236328125 0 L 0 0 0 7.236328125'\n              fill='none'\n              stroke='rgba(207, 207, 207, 0.3)'\n              stroke-width='1'\n            ></path>\n          </pattern>\n          <pattern\n            id='grid'\n            width='36.181640625'\n            height='36.181640625'\n            patternUnits='userSpaceOnUse'\n          >\n            <rect\n              width='36.181640625'\n              height='36.181640625'\n              fill='url(#smallGrid)'\n            ></rect>\n            <path\n              d='M 36.181640625 0 L 0 0 0 36.181640625'\n              fill='none'\n              stroke='rgba(186, 186, 186, 0.5)'\n              stroke-width='1'\n            ></path>\n          </pattern>\n        </defs>\n        <rect width='100%' height='100%' fill='url(#grid)'></rect>\n      </svg>\n    )\n  }\n})\n","import { BoxStyle, CSSStyleDeclaration } from '@/primitives/types'\n\nexport const useStyles = () => {\n  /**\n   * 获取包围盒的样式\n   * @param style BoxStyle\n   */\n  const getBoundBoxStyle = (style: BoxStyle) => {\n    const pStyle = {} as CSSStyleDeclaration\n\n    for (const [key, value] of Object.entries(style)) {\n      if (value) pStyle[key] = value + 'px'\n    }\n\n    return pStyle\n  }\n\n  /**\n   * 获取渲染节点的样式\n   * @param style BoxStyle\n   */\n  const getPrimitiveStyle = (style: BoxStyle) => {\n    const pStyle = {} as CSSStyleDeclaration\n\n    for (const [key, value] of Object.entries(style)) {\n      if (value) pStyle[key] = value + 'px'\n    }\n\n    return pStyle\n  }\n\n  return {\n    getBoundBoxStyle,\n    getPrimitiveStyle\n  }\n}\n","import { Primitive } from '@/primitives/primitive'\nimport { useAreaSelectStore } from '@/store/area-select/index'\nimport { useEditorStore } from '@/store/editor/index'\n\nimport AreaSelect from './AreaSelect'\nimport AuxiliaryLine from './AuxiliaryLine/index'\nimport BoundBox from './BoundBox/index'\nimport ContextMenu from './ContextMenu/index'\nimport Grid from './Grid/index'\nimport { useGroup } from './hooks/use-group'\nimport { useStyles } from './hooks/use-styles'\nimport styles from './index.module.scss'\n\nexport const auxiliaryLineKey = 'AUXILIARY_LINE_KEY'\n\nexport default defineComponent({\n  name: 'Editor',\n  components: { Grid, AreaSelect, ContextMenu },\n  setup() {\n    const editorStore = useEditorStore()\n    const areaSelectStore = useAreaSelectStore()\n    const { areaSelectVisible } = storeToRefs(areaSelectStore)\n    const { groupState, onDrawGroupBoundry } = useGroup()\n\n    const primitives = editorStore.primitives\n    const { curPrimitive } = storeToRefs(editorStore)\n\n    const contextMenuRef = ref<typeof ContextMenu | null>(null)\n\n    const auxiliaryLineRef = ref<InstanceType<typeof AuxiliaryLine> | null>(\n      null\n    )\n    provide(auxiliaryLineKey, auxiliaryLineRef)\n\n    /**\n     * 按下鼠标左键事件\n     * @param e MouseEvent\n     */\n    const handleMouseDown = (e: MouseEvent) => {\n      // 如果不是鼠标左键触发的就取消\n      if (e.button !== 0) return\n\n      editorStore.setClickPrimitiveStatus(false)\n      if (!curPrimitive) e.preventDefault()\n      onDrawGroupBoundry(e)\n    }\n\n    /**\n     * 取消当前选中的primitive\n     */\n    const deselectCurPrimitive = (e: MouseEvent) => {\n      if (!editorStore.isClickPrimitive) editorStore.setCurPrimitive(null)\n\n      // 如果不是右键的话就把右键菜单关闭\n      if (e.button !== 2) contextMenuRef.value?.close()\n    }\n\n    /**\n     * 获取当前鼠标右键点击的节点是画布、普通 primitive 还是 groupPrimitive\n     * @param node Element\n     * @returns String\n     */\n    const getContextElementType = (element: Element): string | undefined => {\n      if (!element || !element.parentNode) return\n      const parentNode = element.parentNode as Element\n      if (!parentNode.getAttribute) return\n      const dataType = parentNode.getAttribute('data-context')\n      if (dataType) return dataType\n      return getContextElementType(parentNode)\n    }\n\n    /**\n     * 开启右键菜单\n     * @param e MouseEvent\n     */\n    const handleShowContextMenu = (e: MouseEvent) => {\n      e.stopPropagation()\n      e.preventDefault()\n      if (!e.target) return\n\n      // 计算菜单相对于编辑器的位移\n      let target = e.target as HTMLElement\n      let top = e.offsetY\n      let left = e.offsetX\n\n      while (target instanceof SVGElement) {\n        target = target.parentNode as HTMLElement\n      }\n\n      while (target.id !== 'editor') {\n        left += target.offsetLeft\n        top += target.offsetTop\n        target = target.parentNode as HTMLElement\n      }\n\n      const contextType = getContextElementType(e.target as Element)\n\n      contextMenuRef.value?.show({ top, left, contextType })\n    }\n\n    /**\n     * 关闭右键菜单\n     */\n    const handleCloseContextMenu = () => {\n      contextMenuRef.value?.close()\n    }\n\n    const { getBoundBoxStyle } = useStyles()\n\n    const renderPrimitives = () =>\n      primitives.map((item, index) => (\n        <BoundBox\n          index={index}\n          style={getBoundBoxStyle(item.style)}\n          primitive={item as Primitive}\n          pStyle={item.style}\n          onCloseContextmenu={handleCloseContextMenu}\n        >\n          {h(resolveComponent(item.cName), {\n            id: `primitive${item.id}`,\n            class: styles.primitive,\n            'data-context': item.cName,\n            dataSource: item\n          })}\n        </BoundBox>\n      ))\n\n    return () => (\n      <div\n        id='editor'\n        data-context='Editor'\n        class={styles.editor}\n        onMousedown={handleMouseDown}\n        onMouseup={deselectCurPrimitive}\n        onContextmenu={handleShowContextMenu}\n      >\n        <Grid />\n        <AreaSelect v-show={areaSelectVisible.value} options={groupState} />\n        <AuxiliaryLine />\n        <ContextMenu ref={contextMenuRef} />\n        {renderPrimitives()}\n      </div>\n    )\n  }\n})\n","import { Primitive } from '@/primitives/primitive'\nimport { Location } from '@/primitives/types'\nimport { useAreaSelectStore } from '@/store/area-select/index'\nimport { useEditorStore } from '@/store/editor/index'\nimport { getPrimitiveStyle } from '@/utils/primitive'\n\nexport function useGroup() {\n  const editorStore = useEditorStore()\n  const areaSelectStore = useAreaSelectStore()\n  const { primitives } = storeToRefs(editorStore)\n  const variables = reactive({\n    editorX: 0,\n    editorY: 0,\n    start: {\n      x: 0,\n      y: 0\n    },\n    width: 0,\n    height: 0\n  })\n\n  /**\n   * 开始绘制包围盒范围\n   * @param e MouseEvent\n   */\n  const onDrawGroupBoundry = (e: MouseEvent) => {\n    hideAreaSelect()\n\n    const editor = document.getElementById('editor')\n    const rectInfo = editor!.getBoundingClientRect()\n\n    variables.editorX = rectInfo.x\n    variables.editorY = rectInfo.y\n\n    const startX = e.clientX\n    const startY = e.clientY\n    variables.start.x = startX - variables.editorX\n    variables.start.y = startY - variables.editorY\n    // 展示选中区域\n    areaSelectStore.setAreaSelectVisible(true)\n\n    const move = (moveEvent: MouseEvent) => {\n      variables.width = Math.abs(moveEvent.clientX - startX)\n      variables.height = Math.abs(moveEvent.clientY - startY)\n      if (moveEvent.clientX < startX) {\n        variables.start.x = moveEvent.clientX - variables.editorX\n      }\n\n      if (moveEvent.clientY < startY) {\n        variables.start.y = moveEvent.clientY - variables.editorY\n      }\n    }\n\n    const up = (e: MouseEvent) => {\n      document.removeEventListener('mousemove', move)\n      document.removeEventListener('mouseup', up)\n\n      if (e.clientX == startX && e.clientY == startY) {\n        hideAreaSelect()\n        return\n      }\n\n      saveAreaSelectData()\n    }\n\n    document.addEventListener('mousemove', move)\n    document.addEventListener('mouseup', up)\n  }\n\n  /**\n   * 隐藏包围盒子\n   */\n  const hideAreaSelect = () => {\n    variables.width = 0\n    variables.height = 0\n    areaSelectStore.setAreaSelectVisible(false)\n    areaSelectStore.setAreaSelectOptions(null, [])\n  }\n\n  /**\n   * 保存区域选择的数据\n   */\n  const saveAreaSelectData = () => {\n    // 获取选中区域的组件数据\n    const primitives = getInternalPrimitives()\n\n    if (primitives.length <= 1) {\n      hideAreaSelect()\n      return\n    }\n\n    let top = Infinity,\n      left = Infinity,\n      right = -Infinity,\n      bottom = -Infinity\n\n    primitives.forEach((primitive) => {\n      let style = {} as Location\n      if (primitive.cName === 'Group') {\n        primitive.childPrimitives?.forEach((item: Primitive) => {\n          const element = document.getElementById(`primitive${item.id}`)\n          const rectInfo = element!.getBoundingClientRect()\n\n          style.left = rectInfo.left - variables.editorX\n          style.top = rectInfo.top - variables.editorY\n          style.right = rectInfo.right - variables.editorX\n          style.bottom = rectInfo.bottom - variables.editorY\n\n          if (style.left < left) left = style.left\n          if (style.top < top) top = style.top\n          if (style.right > right) right = style.right\n          if (style.bottom > bottom) bottom = style.bottom\n        })\n      } else {\n        style = getPrimitiveStyle(primitive.style)\n      }\n      if (style.left < left) left = style.left\n      if (style.top < top) top = style.top\n      if (style.right > right) right = style.right\n      if (style.bottom > bottom) bottom = style.bottom\n    })\n\n    variables.start.x = left\n    variables.start.y = top\n    variables.width = right - left\n    variables.height = bottom - top\n\n    const style = {\n      left,\n      top,\n      width: variables.width,\n      height: variables.height\n    }\n    areaSelectStore.setAreaSelectOptions(style, primitives)\n  }\n\n  /**\n   * 获取当前回执包围盒内部的 primitive\n   * @returns Pimitive[]\n   */\n  const getInternalPrimitives = () => {\n    const { x, y } = variables.start\n    const dataSource = primitives.value as Primitive[]\n\n    return dataSource.filter((p) => {\n      const { left, top, width, height } = getPrimitiveStyle(p.style)\n      if (\n        x <= left &&\n        y <= top &&\n        left + width <= x + variables.width &&\n        top + height <= y + variables.height\n      )\n        return p\n    })\n  }\n\n  return {\n    groupState: variables,\n    onDrawGroupBoundry\n  }\n}\n","import Editor from '@/components/Editor/index'\n\nimport styles from './index.module.scss'\nimport { useContainer } from './use-container'\n\nexport default defineComponent({\n  name: 'Container',\n  components: { Editor },\n  setup() {\n    const { ...restFunc } = useContainer()\n\n    return {\n      ...restFunc\n    }\n  },\n  render() {\n    return (\n      <>\n        <div\n          class={styles.container}\n          onDrop={this.handleDrop}\n          onDragover={this.handleDragOver}\n          onMousedown={this.handleMouseDown}\n          onMouseup={this.handleMouseUp}\n        >\n          <Editor />\n        </div>\n      </>\n    )\n  }\n})\n","import { ceil } from 'lodash'\n\nimport { primitivesList } from '@/primitives/loader'\nimport { BoxStyle } from '@/primitives/types'\nimport { useEditorStore } from '@/store/editor/index'\n\nexport const useContainer = () => {\n  const editorStore = useEditorStore()\n\n  /**\n   * 拖动结束事件\n   * @param e DragEvent\n   */\n  const handleDrop = (e: DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n\n    const name = e.dataTransfer!.getData('name')\n    const editorRef = document.querySelector('#editor')!\n    const editorRefRec = editorRef.getBoundingClientRect()\n    const primitive = new primitivesList[name]()\n    const style: BoxStyle = {\n      top: ceil(e.clientY - editorRefRec.y),\n      left: ceil(e.clientX - editorRefRec.x)\n    }\n\n    primitive.updateStyle(style)\n    editorStore.addPrimitive(primitive)\n\n    // 根据画面比例修改组件样式比例 https://github.com/woai3c/visual-drag-demo/issues/91\n    //   changeComponentSizeWithScale(component)\n\n    //   this.$store.commit('recordSnapshot')\n  }\n\n  const handleDragOver = (e: DragEvent) => {\n    e.preventDefault()\n    e.dataTransfer!.dropEffect = 'copy'\n  }\n\n  const handleMouseDown = (e: MouseEvent) => {\n    e.stopPropagation()\n  }\n\n  const handleMouseUp = () => {}\n\n  return {\n    handleDrop,\n    handleDragOver,\n    handleMouseDown,\n    handleMouseUp\n  }\n}\n"],"names":["useAreaSelectStore","defineStore","groupStyle","ref","childPrimitives","areaSelectVisible","clearPrimitives","value","setAreaSelectOptions","style","primitives","setAreaSelectVisible","visible","AreaSelect","defineComponent","name","props","options","type","computed","width","height","_createVNode","class","styles","eventEmitter","constructor","__publicField","this","on","eventName","callback","events","includes","push","off","eventCallbacks","filter","item","emit","arg","length","once","onceCallback","toPercent","val","needUnit","calcPrimitiveAxis","top","left","right","bottom","getPrimitiveStyle","decomposePrimitive","primitive","editorRect","parentStyle","rectInfo","document","getElementById","id","getBoundingClientRect","center","parseFloat","createGroupStyle","groupPrimitive","_a","forEach","result","Object","keys","key","find","getStyle","AuxiliaryLine","setup","editorStore","useEditorStore","lineElementsRef","LINE_NAMES","NEAR_THRESHOLD","xt","xc","xb","yl","yc","yr","lineStatus","showLines","isDownward","isRightward","currentPrimitive","curPrimitive","currentPrimitiveHalfWidth","theRight","theLeft","currentPrimitiveHalfHeight","theBottom","theTop","primitiveStyle","primitiveHalfWidth","primitiveHalfHeight","conditions","isNearly","lineNode","line","dragShift","lineShift","condition","needToShow","chooseTheTrueLine","dragValue","targetValue","Math","abs","watchEffect","lineName","setLineElementRef","BoundBox","pStyle","index","required","default","areaSelectStore","storeToRefs","drawPoints","curRef","cursors","angleToCursor","start","end","cursor","lt","t","rt","r","rb","b","lb","l","hasT","pointStr","hasB","hasL","hasR","newLeft","newTop","marginLeft","marginTop","i","angleLimit","lastMatchIndex","angle","startY","e","clientY","startX","clientX","startTop","startLeft","curX","event","curY","onMounted","isSelected","renderDrawPoints","map","onMousedown","pType","moveEvent","disY","disX","test","newHeight","newWidth","handleAdjustSize","onClick","handleClickBoundBox","slots","call","ContextMenu","expose","message","useMessage","handleCompose","components","cName","querySelector","primitive2","GroupPrimitive","deletePrimitives","batchDeletePrimitive","addPrimitive","setCurPrimitive","handleDecompose","_b","editor","deleteCurPrimitive","contextType","copyData","variables","label","handler","cloneDeep","close","onMouseup","handleMouseUp","stopPropagation","_createTextVNode","disabled","_vShow","Grid","render","position","xmlns","patternUnits","d","fill","stroke","Editor","onDrawGroupBoundry","reactive","editorX","editorY","x","y","hideAreaSelect","saveAreaSelectData","primitives2","getInternalPrimitives","Infinity","style2","p","groupState","move","up","e2","removeEventListener","addEventListener","contextMenuRef","auxiliaryLineRef","provide","button","preventDefault","element","parentNode","getAttribute","dataType","target","offsetY","offsetX","getContextElementType","getBoundBoxStyle","entries","_slot","s","h","resolveComponent","dataSource","prototype","toString","_isVNode","handleMouseDown","deselectCurPrimitive","Container","handleDrop","dataTransfer","getData","editorRefRec","primitivesList","ceil","updateStyle","handleDragOver","dropEffect","_Fragment"],"mappings":"+cAGO,MAAAA,EAAAC,EAAA,cAAA,KACL,MAAAC,EAAAC,EAAA,MACAC,EAAAD,EAAA,IACAE,EAAAF,GAAA,GA8BA,MAAA,CAAOD,aACLE,kBACAC,oBACAC,gBAfF,KACEF,EAAAG,MAAA,IAeAC,qBA3BF,CAAAC,EAAAC,KAIER,EAAAK,MAAAE,EACAL,EAAAG,MAAAG,CAAA,EAuBAC,qBATFC,IACEP,EAAAE,MAAAK,CAAA,EASA,4BCxCJC,EAAAC,EAAA,CACEC,KAAAA,aACAC,MAAAA,CACEC,QAAAA,CACEC,KAAAA,iCAKF,MAAAT,EAAAU,GAAA,KAAA,wDAGEC,MAAAA,EAAAA,QAAAA,MAAAA,KACAC,OAAAA,EAAAA,QAAAA,OAAAA,SAGF,MAAA,IAAAC,EAAA,MAAA,eAAoCC,MAAAC,QACtC,IC0BF,MAAeC,EAAA,IA7Cf,MAAA,WAAAC,GACUC,EAAAC,KAAA,SAAqC,CAAA,EAAA,CAG7C,EAAAC,CAAGC,EAAmBC,GACfH,KAAKI,OAAOF,KACVF,KAAAI,OAAOF,GAAa,IAEtBF,KAAKI,OAAOF,GAAWG,SAASF,IACnCH,KAAKI,OAAOF,GAAWI,KAAKH,EAEhC,CAGA,GAAAI,CAAIL,EAAmBC,GACf,MAAAK,EAAiBR,KAAKI,OAAOF,GAC/BM,IACGR,KAAAI,OAAOF,GAAaM,EAAeC,QACrCC,GAASA,IAASP,IAGzB,CAGA,IAAAQ,CAAKT,EAAmBU,GAChB,MAAAJ,EAAiBR,KAAKI,OAAOF,GAC/B,GAAAM,GAAkBA,EAAeK,OAAS,EAC5C,IAAA,MAAWV,KAAYK,EACrBL,EAASS,EAKf,CAGA,IAAAE,CAAKZ,EAAmBC,GAChB,MAAAY,EAAgBH,IACpBT,EAASS,GACJZ,KAAAO,IAAIL,EAAWa,EAAY,EAE7Bf,KAAAC,GAAGC,EAAWa,EACrB,GCtCK,SAASC,EAAUC,GACxB,OAAa,IAANA,EAAY,GACrB,CCIA,MAAMC,EAAW,CACf,WACA,QACA,SACA,MACA,OACA,cACA,gBACA,gBAQK,SAASC,EAAkBtC,GACzB,MAAA,CACLuC,IAAKvC,EAAMuC,IACXC,KAAMxC,EAAMwC,KACZC,MAAOzC,EAAMwC,KAAOxC,EAAMW,MAC1B+B,OAAQ1C,EAAMuC,IAAMvC,EAAMY,OAE9B,CAoBO,SAAS+B,EAAkB3C,GAKzB,OAJCA,EAAA,IAAKA,IACP0C,OAAS1C,EAAMuC,IAAOvC,EAAMY,OAC5BZ,EAAAyC,MAAQzC,EAAMwC,KAAQxC,EAAMW,MAE3BX,CACT,CAGgB,SAAA4C,EACdC,EACAC,EACAC,GAEA,MACMC,EADUC,SAASC,eAAe,YAAYL,EAAUM,MACpCC,wBAEpBC,EACDL,EAASR,KAAOM,EAAWN,KAAOQ,EAASrC,MAAQ,EADlD0C,EAEDL,EAAST,IAAMO,EAAWP,IAAMS,EAASpC,OAAS,EAG7CiC,EAAA7C,MAAMW,MACb2C,WAAWT,EAAUpD,WAAWkB,OAAS,IAAOoC,EAAYpC,MACrDkC,EAAA7C,MAAMY,OACb0C,WAAWT,EAAUpD,WAAWmB,QAAU,IAAOmC,EAAYnC,OAEhEiC,EAAU7C,MAAMwC,KAAOa,EAAWR,EAAU7C,MAAMW,MAAQ,EAC1DkC,EAAU7C,MAAMuC,IAAMc,EAAWR,EAAU7C,MAAMY,OAAS,EAC1DiC,EAAUpD,WAAa,EACzB,CAMO,SAAS8D,EAAiBC,SAC/B,MAAMT,EAAcS,EAAexD,MACpB,OAAAyD,EAAAD,EAAA7D,kBAAA8D,EAAiBC,SAASb,IAEnC,IAACA,EAAUpD,WAAY,CACzB,MAAMO,EAAQ,IAAK6C,EAAU7C,OAEnB6C,EAAApD,WA7DT,SAAkBO,EAAqB4B,EAAS,IACrD,MAAM+B,EAAS,CAAA,EAaR,OAZPC,OAAOC,KAAK7D,GAAO0D,SAASI,IACrBlC,EAAOmC,MAAMlC,GAASiC,IAAQjC,KAC3B7B,EAAM8D,KACHH,EAAAG,GAAO9D,EAAM8D,GAEhBzB,EAASb,SAASsC,KACpBH,EAAOG,IAAQ,MAGrB,IAGKH,CACT,CA8C6BK,CAAShE,GAEhC6C,EAAUpD,WAAW+C,KAAOL,GACzBnC,EAAMwC,KAAOO,EAAYP,MAAQO,EAAYpC,OAEhDkC,EAAUpD,WAAW8C,IAAMJ,GACxBnC,EAAMuC,IAAMQ,EAAYR,KAAOQ,EAAYnC,QAE9CiC,EAAUpD,WAAWkB,MAAQwB,EAAUnC,EAAMW,MAAQoC,EAAYpC,OACjEkC,EAAUpD,WAAWmB,OAASuB,EAAUnC,EAAMY,OAASmC,EAAYnC,OACrE,IAEJ,uFClFAqD,EAAA5D,EAAA,CACEC,KAAAA,gBACA4D,KAAAA,GACE,MAAAC,EAAAC,IACAC,EAAA3E,EAAA,IACA4E,EAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MACAC,EAAA7E,EAAA,QAEE8E,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,IAAAA,UAIAR,EAAAA,MAAAA,KAAAA,EAAAA,qCAMES,EAAAA,IAAAA,CAAAA,GACF,EAGFC,EAAA,CAAAC,EAAAC,sBACUhF,GAAWkE,EACnBe,EAAAf,EAAAgB,gCAIE5C,IAAAA,EACAC,KAAAA,EACAC,MAAAA,EACAC,OAAAA,GACQJ,EAAA4C,EAAAlF,OAEVoF,GAAAC,EAAAC,GAAA,EACAC,GAAAC,EAAAC,GAAA,MAGAxF,EAAAA,SAAAA,mBAGE,MAAAyF,EAAApD,EAAAO,EAAA7C,oCAG2ByC,GAAMiD,EACjCC,GAAAlD,EAAAD,GAAA,EACAoD,GAAAlD,EAAAH,GAAA,EAEAsD,EAAA,CACEtD,IAAAA,CAAAA,CAEIuD,SAAAA,EAAAA,EAAAA,GACAC,SAAAA,EAAAA,MAAAA,GACAC,KAAAA,KACAC,UAAAA,EACAC,UAAAA,GACF,CAEEJ,SAAAA,EAAAA,EAAAA,GACAC,SAAAA,EAAAA,MAAAA,GACAC,KAAAA,0BAEAE,UAAAA,GACF,CAGEJ,SAAAA,GAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAIAC,SAAAA,EAAAA,MAAAA,GACAC,KAAAA,KACAC,UAAAA,EAAAA,EAAAA,iBAEF,CAEEH,SAAAA,EAAAA,EAAAA,GACAC,SAAAA,EAAAA,MAAAA,GACAC,KAAAA,KACAC,UAAAA,EACAC,UAAAA,GACF,CAEEJ,SAAAA,EAAAA,EAAAA,GACAC,SAAAA,EAAAA,MAAAA,GACAC,KAAAA,0BAEAE,UAAAA,IAGJ1D,KAAAA,CAAAA,CAEIsD,SAAAA,EAAAA,EAAAA,GACAC,SAAAA,EAAAA,MAAAA,GACAC,KAAAA,KACAC,UAAAA,EACAC,UAAAA,GACF,CAEEJ,SAAAA,EAAAA,EAAAA,GACAC,SAAAA,EAAAA,MAAAA,GACAC,KAAAA,0BAEAE,UAAAA,GACF,CAGEJ,SAAAA,GAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAIAC,SAAAA,EAAAA,MAAAA,GACAC,KAAAA,KACAC,UAAAA,EAAAA,EAAAA,iBAEF,CAEEH,SAAAA,EAAAA,EAAAA,GACAC,SAAAA,EAAAA,MAAAA,GACAC,KAAAA,KACAC,UAAAA,EACAC,UAAAA,GACF,CAEEJ,SAAAA,EAAAA,EAAAA,GACAC,SAAAA,EAAAA,MAAAA,GACAC,KAAAA,0BAEAE,UAAAA,sCASJL,EAAAA,GAAAA,SAAAA,IACEM,EAAAL,6CAGAK,EAAAA,SAAAA,MAAAA,GAAAA,GAAAA,EAAAA,cACAC,EAAAA,KAAAA,EAAAA,MAAAA,GACF,IAIFC,EAAAA,EAAAA,EAAAA,EAAAA,GACF,cASApB,EACEmB,EAAA5E,SAAA,mEAQA4E,EAAA5E,SAAA,mEASFwD,EACEoB,EAAA5E,SAAA,mEAQA4E,EAAA5E,SAAA,kEAOF,EAGFsE,EAAA,CAAAQ,EAAAC,IAAAC,KAAAC,IAAAH,EAAAC,IAAAhC,EAAAzE,MAcA,OAXA4G,GAAAA,KAEE1F,EAAAA,GAAAA,QAAAA,eAAuCiE,kBACrCF,EAAAA,EAAAA,EAAAA,IAEF/D,EAAAA,GAAAA,UAAAA,YAGA+D,GAAAA,GAAAA,EAAAA,IAGF,aACEjE,MAAAC,yBAE2B+C,IAAA6C,EAERjH,IAAAkH,EAES9F,MAAA,GAAAC,KAAA4F,EAAAnF,SAAA,KAAAT,EAAAA,0BAQhC,kECxOF,MAgBA8F,EAAAxG,EAAA,CACEC,KAAAA,iBAjBF,CACEuC,UAAAA,CACEpC,KAAAA,uBAGFqG,OAAAA,CACErG,KAAAA,uBAGFsG,MAAAA,CACEC,UAAAA,EACAvG,KAAAA,OACAwG,QAAAA,qDAQoBnF,IACpB,MAAAqC,EAAAC,IACA8C,EAAA3H,kBAEQ4F,GAAagC,EAAAhD,sBACbvE,GAAkBuH,EAAAD,kDAEcE,GClB1C,CAAOC,OA1BP3H,EAAA,MA4BE4H,QA3BF5H,EAAA,CAAA,GA4BE6H,cAdF,CAAsB,CAAAC,MAAA,IAAAC,IAAA,GAAAC,OAAA,MACgB,CAAAF,MAAA,GAAAC,IAAA,GAAAC,OAAA,KACF,CAAAF,MAAA,GAAAC,IAAA,IAAAC,OAAA,MACE,CAAAF,MAAA,IAAAC,IAAA,IAAAC,OAAA,KACA,CAAAF,MAAA,IAAAC,IAAA,IAAAC,OAAA,MACC,CAAAF,MAAA,IAAAC,IAAA,IAAAC,OAAA,KACD,CAAAF,MAAA,IAAAC,IAAA,IAAAC,OAAA,MACC,CAAAF,MAAA,IAAAC,IAAA,IAAAC,OAAA,MAQrCN,WA3BF,CAA+BO,GAAA,EACzBC,EAAA,GACDC,GAAA,GACCC,EAAA,IACDC,GAAA,IACCC,EAAA,IACDC,GAAA,IACCC,EAAA,wBDsCMvH,EAAAA,EAAAA,OAAWC,EAAAA,YACnBuH,EAAAC,EAAA5G,SAAA,KACA6G,EAAAD,EAAA5G,SAAA,KACA8G,EAAAF,EAAA5G,SAAA,KACA+G,EAAAH,EAAA5G,SAAA,KACA,IAAAgH,EAAAF,EAAA,EAAA3H,EACA8H,EAAAN,EAAA,EAAAvH,qBAKAuH,GAAAE,IAAAC,IAAAC,IACEC,EAAAA,EAAAA,EAAAA,4BAFAC,EAAAA,EAAAA,EAAAA,IAOAC,WAAAA,OACAC,UAAAA,kCAGAjB,OAAAA,EAAAA,MAAAA,gCASF,IAAA,MAAA5D,KAAAsD,EAAA,eHlFU,KAAO,IGqFf,IAAA,IAAAwB,EAAA,EAAAA,EAAArB,EAAAvF,OAAA4G,IAAA,kBAEE,MAAAC,EAAAtB,EAAAuB,GAEA,GAAAC,EAAA,IAAAA,GAAA,IAAA,CACEpF,EAAAA,GAAAA,YACA,KACF,iDAIE,KACF,CACF,CACF,CAEA,OAAAA,CAAA,iEAuBAQ,EAAAA,yBAAAA,GACAA,EAAAA,gBAAAA,EAAAA,WACAmD,EAAAA,MAAAA,IAEA,MAAAtH,EAAAO,EAAAuG,OACAkC,EAAAC,EAAAC,QACAC,EAAAF,EAAAG,QACAC,EAAArJ,EAAAuC,KAAA,EACA+G,EAAAtJ,EAAAwC,MAAA,QAIE,MAAA+G,EAAAC,EAAAJ,QACAK,EAAAD,EAAAN,QACAlJ,EAAA,uDAKAO,EAAAA,UAAAA,YAAAA,GAQA,MAAAyE,EAAAyE,EAAAT,EAAA,EACA/D,EAAAsE,EAAAJ,EAAA,EACAnI,EAAAA,KAAAA,OAAAA,cAAwCiE,eAAY,SAMpDjE,EAAAA,KAAAA,UACAiC,SAAAA,oBAAAA,YAAAA,GACAA,SAAAA,oBAAAA,UAAAA,EAAAA,EAGFA,SAAAA,iBAAAA,YAAAA,GACAA,SAAAA,iBAAAA,UAAAA,EAAAA,EA0CFyG,GAAAA,eAGIpC,EAAAA,MAAAA,IACF,8EAgBFqC,EAAAjJ,GAAA,WAAA,OAAA,OAAA+C,EAAA0B,EAAArF,YAAA,EAAA2D,EAAAN,MAAA5C,EAAAsC,UAAAM,EAAA,IAIAyG,EAAA,IAAAhG,OAAAC,KAAAuD,GAAAyC,KAAAhJ,GAAAA,EAAA,MAAA,CAC0CiD,IAAAA,qBAIJgG,YAAAb,GA/DtC,EAAAc,EAAAd,yDAIUnC,GAAOvG,UACPK,EAAAA,EAAAA,MAAYD,EAAAA,EAAAA,IAAW4B,EAAAA,EAAAA,KAASC,EAAAA,GAASsE,EACjDqC,EAAAF,EAAAG,QACAJ,EAAAC,EAAAC,cAEE,MAAAK,EAAAS,EAAAZ,QAEAa,EADAD,EAAAd,QACAF,EACAkB,EAAAX,EAAAJ,EACAhB,EAAA,IAAAgC,KAAAJ,GACA1B,EAAA,IAAA8B,KAAAJ,GACAzB,EAAA,IAAA6B,KAAAJ,GACAxB,EAAA,IAAA4B,KAAAJ,GACAK,EAAAxJ,GAAAuH,GAAA8B,EAAA5B,EAAA4B,EAAA,GACAI,EAAA1J,GAAA2H,GAAA4B,EAAA3B,EAAA2B,EAAA,GACAtG,OAAAA,OAAAA,EAAAA,yDAIErB,IAAAA,GAAAA,EAAAA,EAAAA,IACF,SAGAU,SAAAA,oBAAAA,YAAAA,GACAA,SAAAA,oBAAAA,UAAAA,EAAAA,EAEFA,SAAAA,iBAAAA,YAAAA,GACAA,SAAAA,iBAAAA,UAAAA,EAAAA,EAgCoCqH,CAAAxG,EAAAmF,IACsB,QAI5D,MAAA,WAAApI,OAAAA,EAAA,MAAA,CAAOnB,IAAA2H,EAEQvG,MAAA,CAAAC,EAAA4I,EAAA7J,OAAAiB,GACgDwJ,QAAAC,iBAE1B,CAAAb,EAAA7J,MAAA8J,IAAA,KAAA,OAAAnG,EAAAgH,EAAAxD,cAAA,EAAAxD,EAAAiH,KAAAD,IAAA,CAMvC,mCE7OFE,EAAAtK,EAAA,CACEC,KAAAA,8BACesK,IACb,MAAAC,EAAAC,IACA3G,EAAAC,IACA8C,EAAA3H,mBACQwL,GChBL,WACL,MAAA5G,EAAAC,IACA8C,EAAA3H,KACA4F,aAAAA,GAAAgC,EAAAhD,IACA1E,WAAAA,EAAAE,gBAAAA,GAAAwH,EAAAD,GAkDA,MAAA,CAAO6D,cA/CP,KACE,MAAAC,EAAA,GACArL,EAAAG,MACA4D,SAAAb,UAEEA,GAAA,UAAAA,EAAAoI,MAAA,CACE,MAAAlI,EAAA,IAAAF,EAAA7C,OAEA8C,EADAG,SAAAiI,cAAA,WACA9H,wBAEA,OAAAK,EAAAZ,EAAAlD,kBAAA8D,EAAAC,SAAAyH,IACEA,EAAAA,EAAArI,EAAAC,GACAiI,EAAAvJ,KAAA0J,EAAA,GACD,MAEDH,EAAAvJ,KAAAoB,EAAyB,IAI7B,MAAAW,EAAA,IAAA4H,EACA5H,EAAA7D,gBAAAqL,EACAxH,EAAAxD,MAAA,IAAAP,EAAAK,OAEAyD,EAAAC,GAEA,MAAA6H,EAAA1L,EAAAG,MACAqE,EAAAmH,qBAAAD,GACAlH,EAAAoH,aAAA/H,GACAW,EAAAqH,gBAAAhI,GACA0D,EAAAhH,sBAAA,GACAgH,EAAArH,iBAAA,EAkBA4L,gBAdF,aACE,MAAA1I,EAAA,IAAA,OAAAU,EAAA0B,EAAArF,gBAAAE,OACAC,EAAA,OAAAyL,EAAAvG,EAAArF,YAAA,EAAA4L,EAAA/L,gBACAgM,EAAA1I,SAAAiI,cAAA,WACApI,EAAA,MAAA6I,OAAA,EAAAA,EAAAvI,wBACAe,EAAAyH,qBAEA3L,EAAAyD,SAAAb,IACEA,EAAAA,EAAAC,EAAAC,GACAoB,EAAAoH,aAAA1I,EAAA,GAAkC,EAQxC,kBDxCYsC,GAAagC,EAAAhD,sBACbvE,GAAkBuH,EAAAD,QAGxB/G,QAAAA,GAAAA,GACAoC,IAAAA,EAAAA,GACAC,KAAAA,EAAAA,GACAqJ,YAAAA,EAAAA,IACAC,SAAAA,EAAAA,oCAgCA3H,EAAAA,yBAAAA,EAAAA,SAiBA,IAAA4H,EAAAD,SAEE,YADAjB,EAAAA,QAAAA,UAIF,MAAAhI,EAAAkJ,EAAAD,SACAjJ,EAAAA,MAAAA,IAAAA,EAAAA,IACAA,EAAAA,MAAAA,KAAAA,EAAAA,KAEAsB,EAAAA,aAAAA,EAAAA,kBA8DE6H,MAAAA,KACAC,aAlFF,MAAApJ,EAAAqJ,EAAAA,UAAA/G,EAAArF,OACA+C,EAAAA,GAAAA,EAAAA,wBAEAgI,EAAAA,QAAAA,QAAAA,GAgFA,CAEEmB,MAAAA,KACAC,QAAAA,GACF,CAEED,MAAAA,KACAC,oCAxDFpB,EAAAA,QAAAA,QAAAA,GAyDA,CAEEmB,MAAAA,KACAC,kCACF,CAEED,MAAAA,KACAC,oCACF,CAEED,MAAAA,KACAC,aA/CF9H,EAAAA,wBAAAA,EAAAA,GAgDA,CAEE6H,MAAAA,KACAC,aA5CF9H,EAAAA,yBAAAA,EAAAA,QAkDE6H,MAAAA,KACAC,mBACF,CAEED,MAAAA,KACAC,QAAAA,QAMAD,MAAAA,KACAC,QAAAA,GACF,CAEED,MAAAA,OACAC,yCAMAF,EAAAA,eAAAA,IAAAA,GACF,WAAAA,EAAAF,YACEE,EAAAA,eAAAA,IAAAA,IAEAA,EAAAA,eAAAA,IAAAA,GACA,UAAAA,EAAAF,aACEE,EAAAA,eAAAA,QAAAA,CACEC,MAAAA,OACAC,QAAAA,IAGN,SAGFrB,EAAAA,qBAjLEiB,qEAiLaM,yDAMF5J,IAAAA,GAAAA,EAAAA,QAA2BC,KAAAA,GAAAA,EAAAA,WAA6B,CAAA3B,EAAA,KAAA,CAAAuL,UAAAC,EAErCvC,YAAAb,GAAAA,EAAAqD,qDACS/B,QAAA1I,EAAAoK,SACR,CAAApK,EAAAmK,MAAAO,EAAA,KAAA1K,EAAA2K,iBAAA,CAAA,CAAAC,EAAAV,EAAA5L,UAOnC,IE5OFuM,EAAArM,EAAA,CACEC,KAAAA,OACAqM,OAAAA,IACE9L,EAAA,MAAA,QAEa+L,SAAAA,WAAsBrK,IAAAA,EAAQC,KAAAA,GAAS7B,MAAA,OAAAC,OAAA,OAAAiM,MAAA,2DAAA1J,GAAA,YAAAxC,MAAA,cAAAC,OAAA,cAAAkM,aAAA,kBAAA,CAAAjM,EAAA,OAAA,CAAAkM,EAAA,sCAAAC,KAAA,OAAAC,OAAA,2BAAA,eAAA,KAAA,QAAApM,EAAA,UAAA,CAAAsC,GAAA,OAAAxC,MAAA,eAAAC,OAAA,eAAAkM,aAAA,kBAAA,CAAAjM,EAAA,OAAA,CAAAF,MAAA,eAAAC,OAAA,eAAAoM,KAAA,mBAAA,MAAAnM,EAAA,OAAA,CAAAkM,EAAA,wCAAAC,KAAA,OAAAC,OAAA,2BAAA,eAAA,KAAA,UAAApM,EAAA,OAAA,CAAAF,MAAA,OAAAC,OAAA,OAAAoM,KAAA,cAAA,UCHjD,iDCWP,MAEAE,EAAA7M,EAAA,CACEC,KAAAA,SACA0K,WAAAA,qBAAgCL,eAChCzG,KAAAA,GACE,MAAAC,EAAAC,IACA8C,EAAA3H,uBACQK,GAAkBuH,EAAAD,oCACNiG,GChBjB,WACL,MAAAhJ,EAAAC,IACA8C,EAAA3H,KACAU,WAAAA,GAAAkH,EAAAhD,GACA4H,EAAAqB,EAAA,CAA2BC,QAAA,EAChBC,QAAA,EACA9F,MAAA,CACF+F,EAAA,EACFC,EAAA,GAEL7M,MAAA,EACOC,OAAA,IAuDT6M,EAAA,KACE1B,EAAApL,MAAA,EACAoL,EAAAnL,OAAA,EACAsG,EAAAhH,sBAAA,GACAgH,EAAAnH,qBAAA,KAAA,GAAA,EAMF2N,EAAA,KAEE,MAAAC,EAAAC,IAEA,GAAAD,EAAA3L,QAAA,EAEE,gBAGF,IAAAO,EAAAsL,IAAArL,EAAAqL,IAAApL,GAAA,IAAAC,GAAA,IAKAiL,EAAAjK,SAAAb,UACE,IAAAiL,EAAA,CAAA,EACA,UAAAjL,EAAAoI,MACE,OAAAxH,EAAAZ,EAAAlD,kBAAA8D,EAAAC,SAAA7B,IACE,MACAmB,EADAC,SAAAC,eAAA,YAAArB,EAAAsB,MACAC,wBAEA0K,EAAAtL,KAAAQ,EAAAR,KAAAuJ,EAAAsB,QACAS,EAAAvL,IAAAS,EAAAT,IAAAwJ,EAAAuB,QACAQ,EAAArL,MAAAO,EAAAP,MAAAsJ,EAAAsB,QACAS,EAAApL,OAAAM,EAAAN,OAAAqJ,EAAAuB,QAEAQ,EAAAtL,KAAAA,IAAuBA,EAAAsL,EAAAtL,MACvBsL,EAAAvL,IAAAA,IAAqBA,EAAAuL,EAAAvL,KACrBuL,EAAArL,MAAAA,IAAyBA,EAAAqL,EAAArL,OACzBqL,EAAApL,OAAAA,IAA2BA,EAAAoL,EAAApL,OAAA,IAG7BoL,EAAAnL,EAAAE,EAAA7C,OAEF8N,EAAAtL,KAAAA,IAAuBA,EAAAsL,EAAAtL,MACvBsL,EAAAvL,IAAAA,IAAqBA,EAAAuL,EAAAvL,KACrBuL,EAAArL,MAAAA,IAAyBA,EAAAqL,EAAArL,OACzBqL,EAAApL,OAAAA,IAA2BA,EAAAoL,EAAApL,OAAA,IAG7BqJ,EAAAvE,MAAA+F,EAAA/K,EACAuJ,EAAAvE,MAAAgG,EAAAjL,EACAwJ,EAAApL,MAAA8B,EAAAD,EACAuJ,EAAAnL,OAAA8B,EAAAH,EAEA,MAAAvC,EAAA,CAAcwC,OACZD,MACA5B,MAAAoL,EAAApL,MACiBC,OAAAmL,EAAAnL,QAGnBsG,EAAAnH,qBAAAC,EAAA2N,EAAA,EAOFC,EAAA,KACE,MAAAL,EAAAA,EAAAC,EAAAA,GAAAzB,EAAAvE,MAGA,OAFAvH,EAAAH,MAEA8B,QAAAmM,IACE,MAAAvL,KAAAA,MAAAD,EAAA5B,MAAAA,EAAAC,OAAAA,GAAA+B,EAAAoL,EAAA/N,OACA,GAAAuN,GAAA/K,GAAAgL,GAAAjL,GAAAC,EAAA7B,GAAA4M,EAAAxB,EAAApL,OAAA4B,EAAA3B,GAAA4M,EAAAzB,EAAAnL,OAME,OAAAmN,CAAA,GAAO,EAIb,MAAA,CAAOC,WAAAjC,EACOoB,mBApIdlE,QAGE0C,MACA3I,EADAC,SAAAC,eAAA,UACAE,wBAEA2I,EAAAsB,QAAArK,EAAAuK,EACAxB,EAAAuB,QAAAtK,EAAAwK,EAEA,MAAArE,EAAAF,EAAAG,QACAJ,EAAAC,EAAAC,QACA6C,EAAAvE,MAAA+F,EAAApE,EAAA4C,EAAAsB,QACAtB,EAAAvE,MAAAgG,EAAAxE,EAAA+C,EAAAuB,QAEApG,EAAAhH,sBAAA,GAEA,MAAA+N,EAAAjE,IACE+B,EAAApL,MAAA6F,KAAAC,IAAAuD,EAAAZ,QAAAD,GACA4C,EAAAnL,OAAA4F,KAAAC,IAAAuD,EAAAd,QAAAF,GACAgB,EAAAZ,QAAAD,IACE4C,EAAAvE,MAAA+F,EAAAvD,EAAAZ,QAAA2C,EAAAsB,SAGFrD,EAAAd,QAAAF,IACE+C,EAAAvE,MAAAgG,EAAAxD,EAAAd,QAAA6C,EAAAuB,QAAkD,EAItDY,EAAAC,IACElL,SAAAmL,oBAAA,YAAAH,GACAhL,SAAAmL,oBAAA,UAAAF,GAEAC,EAAA/E,SAAAD,GAAAgF,EAAAjF,SAAAF,WAQF/F,SAAAoL,iBAAA,YAAAJ,GACAhL,SAAAoL,iBAAA,UAAAH,EAAA,EA8FJ,IDxIIjO,EAAAkE,EAAAlE,yBACQkF,GAAagC,EAAAhD,GAErBmK,EAAA5O,EAAA,MAEA6O,EAAA7O,EAAA,MAGA8O,EAnBJ,qBAmBIA,eAQE,IAAAvF,EAAAwF,SAEAtK,EAAAA,yBAAAA,GACAgB,GAAA8D,EAAAyF,gFAWA,IAAAzF,EAAAwF,SAAA,OAAAhL,EAAA6K,EAAAxO,QAAA2D,EAAA0I,QAAA,QASA,IAAAwC,IAAAA,EAAAC,WAAA,OACA,MAAAA,EAAAD,EAAAC,WACA,IAAAA,EAAAC,aAAA,OACA,MAAAC,EAAAF,EAAAC,aAAA,4CAYA,2CAAA5F,EAAA8F,OAAA,OAGA,IAAAA,EAAA9F,EAAA8F,OACAxM,EAAA0G,EAAA+F,QACAxM,EAAAyG,EAAAgG,qDAMA,KAAA,WAAAF,EAAA5L,kDAMA,MAAA0I,EAAAqD,EAAAjG,EAAA8F,QAEAT,OAAAA,EAAAA,EAAAA,UAAAA,KAAAA,cAAwCzC,eAAY,eAOpDyC,OAAAA,EAAAA,EAAAA,QAAAA,EAAAA,OAAAA,oBAGMa,GD5EH,CACLA,iBAzBwBnP,IACxB,MAAM8G,EAAS,CAAA,EAEf,IAAA,MAAYhD,EAAKhE,KAAU8D,OAAOwL,QAAQpP,GACpCF,IAAcgH,EAAAhD,GAAOhE,EAAQ,MAG5B,OAAAgH,CAAA,EAmBPnE,kBAZyB3C,IACzB,MAAM8G,EAAS,CAAA,EAEf,IAAA,MAAYhD,EAAKhE,KAAU8D,OAAOwL,QAAQpP,GACpCF,IAAcgH,EAAAhD,GAAOhE,EAAQ,MAG5B,OAAAgH,CAAA,wBCkFsB,IAAAuI,cAAAtI,MAAAA,EAEX/G,MAAAmP,EAAAtN,EAAA7B,OACuB6C,UAAAhB,uCAtGL,mBAAAyN,EAyGYD,EAAAE,EAAAC,EAAA3N,EAAAoJ,OAAA,CAGxC9H,GAAAA,YAAAA,EAAAA,oCAGAsM,WAAAA,MA/G4B,oBAAA7L,OAAA8L,UAAAC,SAAAjF,KAAA4E,KAAAM,EAAAN,wBAAA,IAAAA,CAgH5B,IAIR,MAAA,IAAAzO,EAAA,MAAA,CAAOsC,GAAA,SAAA,eAAA,iBAIiB2G,YAAA+F,EACQzD,UAAA0D,qDAKoC,MAAA,CAAA,CAAArD,EAAA7M,EAAAE,SAAAe,EAAAoD,EAAA,KAAA,MAAApD,EAAA8J,EAAA,mBAMtE,2BE1IFoF,EAAA1P,EAAA,CACEC,KAAAA,YACA0K,WAAAA,CAAckC,UACdhJ,KAAAA,eCF0B,MAC1B,MAAMC,EAAcC,IAuCb,MAAA,CACL4L,WAlCkB/G,IAClBA,EAAEyF,iBACFzF,EAAEqD,kBAEF,MAAMhM,EAAO2I,EAAEgH,aAAcC,QAAQ,QAE/BC,EADYlN,SAASiI,cAAc,WACV9H,wBACzBP,EAAY,IAAIuN,EAAe9P,GAC/BN,EAAkB,CACtBuC,IAAK8N,EAAAA,KAAKpH,EAAEC,QAAUiH,EAAa3C,GACnChL,KAAM6N,EAAAA,KAAKpH,EAAEG,QAAU+G,EAAa5C,IAGtC1K,EAAUyN,YAAYtQ,GACtBmE,EAAYoH,aAAa1I,EAAS,EAqBlC0N,eAbsBtH,IACtBA,EAAEyF,iBACFzF,EAAEgH,aAAcO,WAAa,MAAA,EAY7BX,gBATuB5G,IACvBA,EAAEqD,iBAAgB,EASlBD,cANoB,OAMpB,mBDnCFM,MAAAA,GACE,OAAA9L,EAAA4P,EAAA,KAAA,CAAA5P,EAAA,MAAA,gGAMuCuL,UAAAjL,KAAAkL,kCAOzC"}